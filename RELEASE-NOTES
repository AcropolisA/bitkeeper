============================================================================
The default prs output has been changed in the case where BK_HOST has
been set.  The original DSUMMARY (which is part of the default prs output)
uses user@host/realhost
Now it does user@host

============================================================================
Release notes for BitKeeper version 5.X (released DD-MMM-2011)

 - The 'compression:gzip' config option now takes effect whenever an
   sfile is written and not just when a new sfile is created.

============================================================================
Release notes for BitKeeper version 5.2 (released 21-Mar-2011)

This is a feature release mainly focusing on extending the nested
repository functionality and some GUI polish.   

New features:
 GUI tools
    Now default to using xft on X11 based systems which means you get
    True Type fonts by default.

    Other encodings, such as UTF-8, should display correctly so long as
    your system encoding and the file encoding match.  If you are on a
    system that uses a different encoding, but your data is all UTF-8,
    you can do this in `bk dotbk`/config-gui:

	encoding system utf-8

    You can get a list of the supported encodings by running

    	echo "puts [encoding names]" | bk tclsh

    All GUI tools will change font size a la Firefox, Control-plus
    (also Control-equal) makes them bigger, Control-minus makes them
    smaller, Control-zero restores the defaults.  Command-<whatever>
    on the Mac.

    We tried to make resizing better with little size popups that show
    the XxY text size in the upper left corner of each text widget;
    feedback welcome.

    bk helptool has more standard scrollbars on the right, see
    bk help config-gui to change this.

 dspec behavior
    All commands that take DSPECs on the command line with the -d
    option have changed.  A new --dspecf=FILE option allows the dspecs
    to be read from a file. 
    These commands are: changes, prs, log, sccslog & repogca.

    In bk-5.0, an extended dspec format was automatically selected if
    a dspec contained multiple lines.  This extended form must now
    be explicitly selected with a '# dspec-v2' header.
    The extended dspec format will be documented in a future release;
    examples may be found in `bk bin`/dspec-*

 clone
    Add new --checkout=none|get|edit option to override the default
    checkout options for a given clone.  The clone stores this special
    setting in BitKeeper/log/config, which has a high precedence,
    meaning unless BK_CONFIG has checkout defined, the clone setting
    will stick through pulls and pushes.  See 'bk help config' for
    precedence.  The checkout setting is local only, and will not
    propagate on a clone.

 cmdlog
    The formatting of the BitKeeper/log/cmd_log file has changed
    to include more information and show which commands where run
    directly and which were run by BitKeeper.

    The 'bk cmdlog' command has been extended to have new features
    for sorting and selecting output.

    If you have scripts depending on the previous behavior, you can
    simply add -v.  Without the -v, you will just get the commands.

    The new cmdlog takes an optional pattern argument, allowing
    forms like:
      bk cmdlog pull

    which will list all the pull commands run.

    Indentation is now used to show where bk commands were run by
    other bk commands.  Any scripts that depend on the output of
    cmdlog may need to adjust.

    See 'bk help cmdlog' for more information.

 config
    The BitKeeper/log/config file has been raised in precedence to
    shield repositories from picking up an individual user's config.
    An example of how help: take a repository that has many users working
    in it, either through a file:// url or remotely through an ssh:// or
    rsh:// url.  Previously, each user's ~/.bk/config settings would be
    used to determine, for example, checkout state.  By raising the
    precedence of BitKeeper/log/config, an administrator can now put in
    config setting "checkout: get!" into BitKeeper/log/config, and that
    will be used instead.  See "bk help config" for details about
    precedence.   Note, this raising in precedence also contributes
    to the clone change mentioned above.

 level
    Add 'bk level -l' to just print the level to make it easier for
    scripts.

 pull
    Summary: your repository can now get some extra components populated.

    In nested, bk-5.1 would complain on the pull from a non-gate if
    the remote repository has components populated that are not
    populated locally.  The reasoning is to prevent loss of data where
    people think a repository can be deleted after it is pulled into
    an integration tree.  This check got to be a pain in practice.

    With this release the code will look to see of the missing
    components can be located in other gates that are accessible.
    The components that cannot be found in a gate will be pulled in
    by populating a subset of the remote's populated aliases.

 resolve/pull
    In nested it is again possible to quit out of a resolve and
    restart it again later.  In bk-5.0 a nested pull was all or
    nothing, but now we allow components to be resolved separately or
    later, like is possible with standalone repositories.

    Both the resolve and abort commands now run on the entire
    repository by default like the other nested commands.

 rset
    The rset command is now defaults to using md5keys instead of revs
    in the output format.  Since md5keys can be used anywhere revs are
    accepted most scripts will not notice the difference.  As a result
    of this change, rset is now an order of magnitude faster.

    Several subtle bugs in the rset output related to nested were also
    fixed at the same time.

 triggers
    Fixed some consistency problems with how bk commands handle
    triggers that generate output.  The rule is that any output for a
    failing trigger is displayed and for passing triggers output will
    be suppressed if -q is passed to the bk command and displayed
    otherwise.
    (before several triggers required -v before output was shown)

    Note: bkd-side post triggers will never send output over the bkd
    connection to the client side.  (We may add this back-channel in
    the future.)

 unpopulate
    The code to unpopulate a component now requires that it be found
    in a gate before removing.  This is consistent with the pull
    changes related to gates.
    Also -f no longer overrides the restrictions if the repository
    being a gate or portal.  The unpopulate will now fail.

Bugfixes:
  - Fixed problems related to attaching and detaching components that
    contained BAM data from a nested repository.
  - Fixed a case where giving old SCCS options to 'bk admin' could
    mangle a SCCS file.
  - The http_proxy env is a bit more tolerant of bad data
  - Fixed some races where a repocheck would interfere with a clone
    and with another read-only operation that is happening in parallel.
  - Several display issues related to progress bars have been addressed.
  - 'bk root' didn't work correctly in a standalone repository that
    happened to be below a nested repository in the filesystem.
  - Fixed a problem with 'bk unedit' when sharing repositories between
    multiple users.  Files could be owned by different users, and
    bk unedit would fail when trying to do a chmod on a file owned
    by a different user.  Now, it will remove the initial file and
    create a new one.
  - Windows explorer - leave the PATH and BK_GUI environment variables
    untouched for anything spawned from explorer.
============================================================================
Release notes for BitKeeper version 5.1.1 (released 16-Feb-2011)

This is a bugfix only release that is functionally identical to bk-5.1.
It includes a fix for problem introduced in bk-5.0 where bk can corrupt
the revision history if it hits a disk full condition while doing a
commit.

All users of bk-5.x are advised to upgrade to this version.

============================================================================
Release notes for BitKeeper version 5.1 (released 17-Dec-2010)

Nested interface changes:
    In nested repositories the behavior of several commands have
    changed.  In general, commands now operate on the entire nested
    collection by default and the --standalone/-S option is used to
    restrict a command to only the current component.  Or if running
    from the product the -S option will prevent recursing into all
    populated components.  Also several commands now have a -sALIAS
    option that is valid when _not_ in standalone mode to restrict the
    command to just a subset of the currently populated components.
    No interface changes for traditional standalone repositories.

    Changes:
      - changes
          The 5.0 release already followed this model, but
	  'bk changes -v' was broken when run from a component and
          then include a bugfix for that.
 
      - comments, export, rset
         Whole collection by default and supports -S and -sALIAS
         
      - commit:
          bk commit	    # commit all components
          bk commit -S      # commit just the current component
          bk commit -sALIAS # commit product + components in ALIAS

      - id, repocheck, renames
      	 Runs from product by default, use -S for components
      - level
         Only runs in product

    - bk commit's old -S<tag> option was renamed to --tag=<tag>. -S now
      is the same as --standalone. This is for consistency with other
      commands.

clone
    - Add new -@baseline option.
      This used to be the undocumented 'bk clonemod' command.
      When doing a network clone over a slow connection, it can be made
      much faster by tell clone about a local baseline that already contains
      the majority of the data.  Then the local copy will be used and
      only new data will be pulled from the remote repository.

    - The new --identical option when used with a nested repository
      will make the destination have the same components populated as were
      in the repository when the cset being cloned was originally created.
      This is used to exactly recreate old repositories.

ignore
    - The 'bk ignore' command with no arguments lists the current
      BitKeeper/etc/ignore file.  It now mentions the contents of
      $HOME/.bk/ignore if the current use have ignore patterns there
      as well.

revision parsing
    - Now for all files -rTAG will work as if the file had that tag.
      For files this expands to the delta that was current as if
      the cset containing that tag.
      This was available before as -r@@TAG.


============================================================================
Release notes for BitKeeper version 5.0.2 (released 18-Nov-2010)

This is a mostly a bugfix release to cleanup outstanding issues.

Bugfixes:
    - Fix some cases where progress bars are numbered wrong
    - In rare cases bk would try an prompt for BitKeeper/etc/attr comments
    - Pull could crash if urllist is deleted
    - Prevent telling the user the current license has expired if the
      the license data is old.
    - Fix a case where the urllist could grow large and become a performance
      problem.
    - When populating components favor more recently used URLs.
    - Fix bk pull cleanup error that happened when a pull creates merges
      in many components.

Product centric command changes:
    - bk r2c and bk root each work with the product, unless given the -S
      or --standalone option, which then can work on the component the
      user is in, similar to bk changes.
    - bk revtool and bk csettool with no options will display product
      changeset information.  Use -S to focus on the component the user
      is in.

============================================================================
Release notes for BitKeeper version 5.0.1 (released 01-Nov-2010)

This is a cleanup release though it does change some UI (something we
normally do not do in a "dot dot" release.

bk options
    -e
    --each-repo	runs the specified command once per repository in a 
    		nested collection.  It may be combined with -s<alias>
		to restrict the selected repositories to those in
		<alias>.  If no -s is specified the default is -sHERE.

    -A
    --all-files	Unchanged, long option added.

    -U
    --user-files
    		Unchanged, long option added.

    --sfiles-opts=opts
    		New option to pass any sfiles options through to the file
		selector.

bk changes
    The rarely used -h option is replaced with an easier to remember --html.

    -S
    --standalone
    		When used in a nested component, treats the component as if 
		it were detached.  This is how you get "standalone" or
		"just this repo" changes output.

bk config
    BitKeeper/log/config is searched for configuration ahead of 
    BitKeeper/etc/config.  In some cases, such as clone_default,
    it is useful to have two values for the variable, the value
    for this repo and the value for all others.

bk csettool
    -s.		Selects the component instead of the default, the product.

bk csets	Fixed a bug where it failed to change directories to the
		product first.

bk difftool
    <default>	No arguments means diff the entire repository or nested
    		collection.
    <dir>	Shows modified files in that directory only (no recursion).

bk repocheck	Added documentation.

bk revtool	Defaults to product changeset with no args, use -s. to select
		the current component.

bk root		Fixed a bug and made the default be to show the product root.
		As before, bk root -R does the component root.

Bugs fixed
----------
    bk citool could recurse on events in large repos and run out of stack.
    bk clone with uncommitted changes in partial_check mode could fail the
    check after stripping the uncommitted changes.
    bk fm3tool with different sized comment windows did not scroll to the end.
    bk revtool in remapped (no SCCS dirs) trees could not view files via "s".
    bk changes no longer holds a read lock until the user quits.  It locks,
    reads the changeset file, and drops the lock.

============================================================================
Release notes for BitKeeper version 5.0 (released 11-Oct-2010)

Nested collections
------------------
BitKeeper 5.0 introduces a new feature, BK/Nested.  BK/Nested is
technology that provides product and product line development support.
A product is a collection of repositories, called components, that are
grouped together and move in lock step as one.  Clones of a nested
collection may be fully or partially populated with components.

A product line is a development effort which spans multiple related
products.  In most cases, each product in a product line reuses some
or all components from other products in the product line.

A product is N+1 repositories: the N are components and the +1 is the 
product itself.  Each component belongs to the product just like files
belong to a repository.

The product repository is the "glue" that makes the set of components
all move forward in lock step; a product may be thought of as a way
to provide an audit trail for a collection of repositories much as a
repository provides an audit trail for a collection of files.  The value
to you is that all states of a product are reproducible and BitKeeper will
never let a user create a view of the source that is not reproducible
(no other SCM system that scales to gigabytes or terabytes of data can
make this claim).

The product feature makes it possible, even pleasant, to manage large
collections of files with good performance.  

A more detailed overview of the technology is available; contact
sales@bitmover.com for more info.

Backwards compatibility
-----------------------
BitKeeper 5.0 can inter-operate with all 4.x releases.  However, there are
new features introduced in 5.0 that make it such that 4.x binaries may not
work on repositories created by 5.x.

Commands changed
----------------

bk options
    bk -U is a file iterator over all user files, no -r required.
    bk -A is the same thing except it includes deleted & BitKeeper files
    Both forms are $CWD relative (unlike 4.x which was repo root relative).
    bk -r/bk -Ur continue to work as before.

bk changes
    The -L, -R and -k options no longer include -a option.
    If you have scripts which use 'bk changes' with -L, -R, or -k,
    please alter them to include -a:
    	bk changes -L => bk changes -aL (or bk changes -La)
    The reason -L used to include -a is that a 'bk changes -L'
    showed everything that would be pushed.  The reason it was
    removed was users trying to write scripts that didn't include
    tags or empty csets.

    Support "extended" dspecs that allow whitespace and comments.
    Use this to move the default 'bk changes' dspec to `bk bin`/dspec-changes
    and make it readable with comments.  This was also done for prs and log.

    Allow the user to override the default dspecs in the usual places.

    2010-05-19-001 - fix changes -av listing files details under
    a tag instead of under the real cset.

bk clean
    The clean code is now smarter about handling files that were
    edited without being locked properly.

bk clone
    The clone code now automatically uses hardlinks whenever possible.
    The option --no-hardlinks can be used to disable this.
    If you are running clones in a script and require the repositories
    not to be hardlinked, then set BK_NO_HARDLINK_CLONE=YES in your
    environment.
    The hardlink clone code path is now mostly the same as the clone
    code path, so performance enhancements in the bk-4 for clone now
    also apply for hardlink clones.

bk csetprune
    The 5.0 csetprune fixes some rare bugs but in doing so creates
    repositories that 4.x will not read.  The bugs, while rare, are real
    and BitMover recommends that all csetprune operations be done with 5.x.

bk id
    New option '-5' - return the repo rootkey as an md5key.

bk gone
    This now sets MONOTONIC on the gone file if it wasn't set.

bk mv
    Fixed bug 2007-12-10-001:
    bk mv a/ b/ -- previously did move all of 'a' into 'b', plus added
    a null mv delta to all things in 'b'.

bk needscheck [-v]
    Returns true if the repository is configured for partial_check and
    would run a full check.

bk prompt (GUI version)
    Fix a window geometry problem.

bk pull
    pull -u now spawns changes -L if the pull fails.

bk push
    Now support 'bk push -rREV URL' to only push a subset of the local
    repository to a remote location
    BUGID: 2008-05-01-001:
    Fix bug where a push to a unrelated package would exit 0.

bk repocheck
    a shorthand for running check in a standalone or nested collection.
    Easier to remember than bk -Ar check -vac

bk sfiles
    Fix bug 2008-07-16-001 where bk sfiles -U $PWD would erroneously
    report BK files.

bk takepatch
    Addressed a performance issue on large pulls over NFS or in other
    cases where we have a slow local filesystem.  BitKeeper now does
    significantly less disk IO.

bk version
    Work on a remote repository: bk version <url>

Commands added
--------------
    bk alias - manage aliases for lists of components
    bk attach - attach a component repository to a product repository
    bk comps - list the components belonging to a product
    bk detach - create a stand-alone clone of a component repository
    bk gate - set or show the gate status of a nested collection
    bk here - list or change the set of populated repositories
    bk partition - transform a single repository into a nested collection
    bk populate - add one or more components to a nested collection
    bk port - pull changes from a different nested collection or standalone
    bk portal - set or show the portal status of a nested collection
    bk repotype - display repository type
    bk unpopulate - remove one or more components to a nested collection

Other changes
-------------

SCCS directories are no more
    SCCS directories are no longer stored each directory in the repository.
    A new directory at the top level, .bk, stores all BK data.
    In Windows, the .bk directory is hidden similar to the SCCS
    directories being hidden.  A repository cannot be transformed in
    place, but can be transformed as part of a clone.  Without options,
    clone does not transform.

progress bars are now the default
    As we move to larger repositories, the old verbose output became too
    verbose.  You can turn it back on with "-v", but the default is a 
    progress bar.

Announcing "New version of BK available"
    Tell users about new versions of BitKeeper when they quit out
    of the GUIs or when they run 'bk help'. In the former case, a
    "bk prompt" is launched, and in the latter case the upgrade info
    is inserted into the help text.

Deleted files now in a subdir
    BK stores deleted files in subdirectories under BitKeeper/deleted
    to avoid problems with filesystems that have problems with large
    numbers of files in a single directory.
    An example filename is like this:
	BitKeeper/deleted/07/slib.c~f3733b2c327712e5
	2 hex digits, the basename of the 1.1 delta, and the random
	bits for this file
    While not required, if you are experiencing performance problems in
    your deleted directory you can try this:
	bk -rBitKeeper/deleted rm -f
	bk commit -y'mv deleted files'

emacs - Experimental backend for Emacs VC users
    With remap, the traditional trick of Emacs users relying on VC's
    SCCS support no longer works.

    In this version, we are shipping an experimental version of a BK
    backend for VC that is known to work with Emacs versions 22 and 23.

    See `bk bin`/contrib/vc-bk.el for source and install instructions.

log file 
    Operations during a pull were logged in the RESYNC and the log deleted
    with the RESYNC at the end of the pull.  Now the commands that are run
    are logged in the repository's cmd_log file.

newroot log
    every 'bk newroot' or commands which do a newroot, like csetprune,
    will now be logged.

setup defaults
    Newly created repositories default to the following:

    compression: gzip
    autofix: yes
    checkout: edit
    clock_skew: on
    partial_check: on

triggers
    post-commit: The exit codes from post-commit triggers are ignored.
    pre-delta triggers:
    Fixes BUGID 2008-04-02-002 (set $BK_FILE relative from repo root)
    Fixes BUGID 2005-03-31-001 (running pre-delta from outside a repo)
    Fixes running a pre-delta specified by trigger path to be outside
    of a repository when no pre-delta triggers are in the repository.

Fixes:

- Bug 2006-05-12-001:
  bk get core dumped when symlink is edited and type changed and regotten.

- Bug 2002-03-02-001: fix bk help initscripts to replace HUP with a TERM

- Bug 2000-10-30-002
  If the merge result hasn't been created yet, do the automerge.

- Bug 2001-04-23-002
  If there's a log file, log BAD CMD attempts as well.  This covers both
  unknown commands and commands disabled by -x.

- Allow the nosync config option to also prevent calls to fsync when
  SCCS files are written.

- Fixed some bugs related to compression over a ssh transport.
  Avoid multiple compression passes.

- Windows now flush modified data on the disk after a resolve has
  completely applying new changes.  This matches the unix behavior.
  This flush can be disabled with the nosync config option.

- Fix a long standing bug in the file urls.  We don't support
  non-absolute path file URLs, all file://whatever means whatever is
  treated as /whatever.  But that should have been file:///whatever.
  Oops.  We do support relative paths, such as ../project, but not in
  a file:// form.
  Now the code accepts either file://whatever or file:///whatever, but
  only generates the last form.

- BitKeeper will now refuse to run a different version of bk as a
  subprocess.  We have had cases where users have forgotten to restart
  their bkd's after upgrade BitKeeper and this cases bugs.  BitKeeper
  will now notice this and error until the bkd is restarted.

- Environment variables that are used to control BitKeeper's behavior
  can not longer be set to an empty string.  So for example:
    BK_NO_TRIGGERS="" bk push
  won't work.  Use BK_NO_TRIGGERS=1 instead.

Platforms
---------

AIX 4.x is no longer supported, 5.3 is the oldest supported release.
    If you get malloc errors, try setting this:
    LDR_CNTRL=MAXDATA=0x40000000
    and retry the BK command.  AIX limits you to a rather small process size
    and this fixes that.

Linux/MIPS
Linux/s390
    Supported upon request only.

Windows/Vista
    Supported but strongly discouraged.  Use XP or Windows 7.
