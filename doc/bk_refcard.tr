.\" File: bk_refcard %K%
.\" groff bk_refcard
.nr HM 0.25i      \" Header Margin
.nr FM 0.25i      \" Footer Margin
.nr LL 3.0i       \" Line Length
.nr GUTTER .5i	  \" Gutter
.nr PO 0.5i      \" Page Offset
.nr PL 8.5i	  \" Page length
.nr PS 9	  \" Point size
.nr VS \n[PS]+2   \" Vertical spacing
.nr COL 1	  \" Current column
.nr COLS 3	  \" Max number of columns
.ll \n[LL]u
.po \n[PO]u
.pl \n[PL]u
.ps \n[PS]
.vs \n[VS]
.\" Define our own box drawing routines using some nifty features of
.\" GNU troff.
.de B1
.	br
.	ne 1.5i
.	mk a
.	sp .25
..
.de B2
.	sp -.5
.	in 0
.	nf
.	nr HEIGHT \\n[nl]u-\\n[a]u
.	nr WIDTH \\n[LL]u+.1i
.	po -.05i
\\D't 500'
.	sp -1
\\D'p 0 0 \\n[WIDTH]u 0 0 -\\n[HEIGHT]u -\\n[WIDTH]u 0'
.	po +\\n[WIDTH]u
.	sp -1
.	nr HEIGHT -.05i
\\D't .1'
.	sp -1
\\D'P 0 0 .05i 0 0 -\\n[HEIGHT]u -.05i 0'
.	po
.	po +.05i
.	sp -.7
\\D'P 0 0 \\n[WIDTH]u 0 0 -.05i -\\n[WIDTH]u 0'
.	po \\n[PO]u
..
.\" Section header with optional size adjust
.de SH
.	RESET
.	ie \\n[.$]=1 .ps +\\$1
.	el .ps +4
.	ft B
.	nr INDENT1 .10i
.	nr INDENT2 .4i
..
.de H1
.	SH 4
.	sp 1
..
.de H2
.	SH 2
.	sp .2
..
.de RESET
.	br
.	fi
.	po \\n[PO]u
.	ll \\n[LL]u
.	in 0
.	ps \\n[PS]
.	vs \n[VS]
.	ft R
..
.de IP
.	RESET
.	if \\n[.$]=2 .nr INDENT2 \\$2
.	in \\n[INDENT2]u
.	ta \\n[INDENT1]u \\n[INDENT2]u
.	ti 0
.	ft B
\t\\$1\t\ \c
.	ft R
..
.de LP
.	RESET
.	in \\n[INDENT1]u
..
.de FOOTER
.	nr COL +1
.	ie \\n[COL]>\\n[COLS] \{\
.		bp
.		sp |\n[HM]u
.		nr COL 1
.		nr PO .5i \}
.	el \{\
.		sp |\\n[TOP]u
.		nr PO +\\n[LL]u
.		nr PO +\\n[GUTTER]u \}
..
.wh \n[PL]u-\n[FM]u FOOTER
.sp |\n[HM]u
.mk TOP
.ce 1000
.sp 1
.ps 16
.ft B
BitKeeper Reference Card
.sp 1.25
.ps 10
BitMover, Inc.
.br
415-401-8808
.br
http://www.bitkeeper.com 
.br
.ce 0
.sp .5
.B1
.H1
BitKeeper Command Syntax
.LP
bk [\fIglobal_options\fP] \fIcommand\fP [\fIcommand_options\fP] [\fIargs\fP]
.H1
\fBGlobal Options:
.IP -R
Perform operation at root of repository
.IP -r
Perform recursive operations
.SP 1
.H2
\fBOptions common to most commands:
.LP
.IP -v
Run verbosely
.IP -q
Run quietly
.B2
.\" ############################
.\" #
.\" # Repository-Level Commands
.\" #
.\" ############################
.B1
.H1
Repository-Level Commands
.\" # 
.\" # Abort
.\" # 
.H2
bk abort
.LP
Abort a failed pull, push, or resync
.\" # 
.\" # Changes
.\" # 
.H2
bk changes
.LP
List changesets in this repository.  See also 
\fBbk revtool\fP.
.\" # 
.\" # Check
.\" # 
.H2
bk -r check -a [\fIoptions\fP]
.LP
Run a consistency check (like fsck).
.IP -w
List writable files without lock files.
.\" # 
.\" # Clone
.\" # 
.H2
bk clone [\fIoptions\fP] \fIsource \fIdestination\fP
.LP
Make a copy of a repository
.IP -r\fIrev|tag\fP
clone backwards to the changeset specified by \fIrev\fP or \fItag\fP.
.H2
.\" # 
.\" # Commit
.\" # 
.H2
bk commit [\fIoptions\fP]
.LP
Group checked in changes into a changeset
.\" .IP -Smsg
.\" Tag tree with \fImsg\fP when committing
.IP -yx
Set check-in comment to \fIx\fP
.\" .IP -Yx
.\" Get check-in comment from file \fIx\fP
.LP
See also \fBbk citool\fP.
.\" # 
.\" # Export
.\" # 
.H2
bk export [\fIoptions\fP] [\fIsource\fP] \fIdest\fP
.LP
Extract a particular version as a tree or a patch
.IP -i\fIpat\fP    
Export only pathnames matching pattern \fIpat\fP.
.IP -k             
Do not expand keywords.
.IP -r\fIrev\fP        
Export the tree as of revision \fIrev\fP.
.IP -t\fIpatch\fP
Export the specified revision[s] as a traditional patch.
.IP -x\fIpat\fP    
Export all pathnames not matching pattern \fIpat\fP.
.H2
bk import [\fIoptions\fP] \fIsource\fP \fIdest\fP
.LP
Import external changes into a BK repository.
.IP -t\fIpatch\fP
Import a patch (can be done repeatedly).
.IP -t\fICVS\fP
Import a CVS (one time only).
.sp 1.1
.B2
.B1
.H1
Repository-Level Commands...
.sp .5
.\" # 
.\" # Parents
.\" # 
.H2
bk parent [\fIrepository\fP]
.LP
Show or set the repository from which we pull or to which we push
.\" # 
.\" # Pending
.\" # 
.H2
bk pending 
.LP
Show checkins made to files in this repository which have not been
committed to a changeset.
.\" # 
.\" # Pull
.\" # 
.H2
bk pull [\fIoptions\fP] [\fIsource\fP]
.LP
Pulls changes from the parent or source to this repository
.IP -i
Turn off automerge
.IP -l
Verbose listing of changesets to be pulled
.IP -n
Dry run, list changes (-l for verbose listing)
.\" # 
.\" # Push
.\" # 
.H2
bk push [\fIoptions\fP] [\fIdestination\fP]
.LP
Push changes from this repository to the parent or dest
.IP -a
Automatically do a pull if the push has conflicts
.IP -l
Verbose listing of changesets to be pushed
.IP -n
Dry run, list changes (-l for verbose listing)
.\" # 
.\" # Receive
.\" # 
.H2
bk receive [\fItakepatch_options\fP] [\fIrepository\fP]
.LP
Apply patches received via email (see also bk send)
.IP -a
Call resolve to apply the changes
.\" # 
.\" # Resolve
.\" # 
.H2
bk resolve [\fIoptions\fP] [\fIproject_root\fP]
.LP
Merge conflicts created by a pull
.IP -a
Automerge if possible
.IP -l
Show more status on stderr
.IP -t
Text-only mode, use no GUI tools.
.IP -y[\fImsg\fP]
Use \fImsg\fP as the check-in message
.\" # 
.\" # Send
.\" # 
.sp .5
.H2
bk send [\fIoptions\fP] email_address
.LP
Synchronize repositories using email as the transport.
.IP -d
Prepend the patch with unified diffs.
.IP -w\fIcmd\fP
Wrap the patch with \fIcmd\fP before sending it.
.IP -r\fIrevs\fP
Specify the list of changesets to send.
.\" # 
.\" # Setup
.\" # 
.H2
bk setup [\fIoptions\fP] [\fIdirectory\fP]
.LP
Create a new BitKeeper package
.IP -c\fIfile\fP
Use \fIfile\fP as the configuration file
.LP
Use \fBbk clone\fP to create copies, \fBbk setup\fP
is for the creation of a new package.
.\" # 
.\" # Status
.\" # 
.H2
bk status [\fIoptions\fP] [\fIrepository\fP]
.LP
Shows repository information such as number of files,
uncommitted files, bk version, etc.
.H2
.\" # 
.\" # Tags
.\" # 
bk tag [\fIoptions\fP] \fIsymbol\fP
.LP
Tags the most recent changeset with a symbolic name
.IP
-r\fIrev\fP
Tag \fIrev\fP instead of most recent changeset.
.LP
See also \fBbk clone -r\fP.
.H2
.\" # 
.\" # Version
.\" # 
.\" XXX not sure how important this is.
bk version
.LP
Shows BitKeeper software version.
.sp .5
.B2
.B1
.\" ############################
.\" #
.\" # File-Level Commands
.\" #
.\" ############################
.H1
File-Level Commands
.H2
Specifying file argument lists
.LP
\fBbk\fP \fIcmd\fP - invokes \fIcmd\fP on \fI./SCCS/s.*\fP
.LP
\fBbk\fP \fIcmd *.c\fP - invokes \fIcmd\fP on \fI./SCCS/s.*.c\fP
.LP
\fBbk -r\fP \fIcmd\fP - invokes \fIcmd\fP on all revision controlled files
.LP
\fBbk -r\fP\fIdir cmd\fP - as above, starts at \fIdir\fP instead of repository
root
.LP
\fBbk -c -r\fP \fIcmd\fP - invokes \fIcmd\fP on all modified files
.LP
\fBbk -x -r\fP \fIcmd\fP - invokes \fIcmd\fP on all files \fBnot\fP under
revision control
.LP
See also \fBbk sfiles\fP.
.sp .5
.\" # 
.\" # Ci
.\" # 
.H2
bk ci [\fIoptions\fP] [\fIfiles\fP]
.LP
Checks in locked and modified files
.IP -y\fIstr\fP
Sets the revision comment to \fIstr\fR
.IP -p
Prints differences before prompting for comments
.\" # 
.\" # Clean
.\" # 
.H2
bk clean [\fIoptions\fP] [\fIfiles\fP]
.LP
Unlock and remove unmodified working files
.IP -p
Shows differences for all modified files
.\" # 
.\" # Co
.\" # 
.H2
bk co [\fIoptions\fP] [\fIfiles\fP]
.LP
Check out files 
.\" # 
.\" # Diffs
.\" # 
.H2
bk diffs [\fIoptions\fP] [\fIfiles\fP]
.LP
Show differences in revision controlled files
.IP -c
Do context diffs
.IP -D
Prefix diffs with dates (2 revisions only)
.IP -f
Prefix lines with file names
.IP -M
Prefix lines with revision numbers
.IP -r\fIrev\fP
Diff working file against revision \fIrev\fP
.IP -r\fIr1..r2\fP
Diff revision \fIr1\fP against revision \fIr2\fP
.IP -U
Prefix lines with user names
.IP -u
Do unified diffs
.\" # 
.\" # Edit
.\" # 
.H2
bk edit [\fIoptions\fP] [\fIfiles\fP]
.LP
Checks out and locks files for editing.
.\" # 
.\" # Mv
.\" # 
.H2
bk mv \fIsource\fP \fIdestination\fP
.LP
move file, recording the move
.\" # 
.\" # Mvdir
.\" # 
.H2
bk mvdir \fIsource\fP \fIdestination\fP
.LP
move directory, recording the move for all files
.\" # 
.\" # New
.\" # 
.H2
bk new [\fIoptions\fP] [\fIfiles\fP]
.LP
Add a new file to the repository
.\" # 
.\" # Prs
.\" # 
.H2
bk prs [\fIoptions\fP] [\fIfiles\fP]
.LP
View revision history of a file or repository
.IP -c\fIdate\fP
Cut-off dates.
.IP -d\fIspec\fP
Specify output data specification
.IP -h
Suppress headers
.IP -r\fIrev\fP
Specify a revision, or part of a range
.\" # 
.\" # Rm
.\" # 
.H2
bk rm \fIfiles\fP
.LP
Remove a file in a recoverable way
.B2
.B1
.sp .5
.\" # 
.\" # Sccslog
.\" # 
.H2
bk sccslog [\fIoptions\fP] [\fIfiles\fP]
.LP
Time ordered listing of deltas over all files
.\" # 
.\" # Sfiles
.\" # 
.H2
bk sfiles [\fIoptions\fP] [\fIdirectory\fP]
.LP
Generates a list of files.
.IP -c
List locked and modified files
.IP -d
List directories under revision control
.IP -n
List files not in the correct location (names)
.IP -p
List files with pending deltas
.IP -x
List files not under revision control
.\" # 
.\" # Undo
.\" # 
.H2
bk undo [\fIoptions\fP] [\fIfiles\fP]
.LP
Remove one or more changesets
.IP -a\fIrev\fP
Remove all changesets which occurred after \fIrev\fP
.IP -f
Do not prompt for confirmation
.IP -s
Do not save undone changes as a patch
.IP -r\fIrevs\fP
Remove the list of changesets specified by \fIrevs\fP
.\" # 
.\" # What
.\" # 
.H2
bk what \fIfiles\fP
.LP
Shows SCCS keywords embedded within a file
.B2
.B1
.sp .5
.\" ############################
.\" #
.\" # Files
.\" #
.\" ############################
.H1
BitKeeper File Types
.sp .25
.IP foo.c 1i
gfile, this is your source file
.IP SCCS/s.foo.c
s.file - file with all revision history
.IP SCCS/p.foo.c
p.file - lock file created when file is edited
.IP SCCS/z.foo.c
z.file - lock file created when checking in a new version 
.IP SCCS/x.foo.c
x.file - temporary file containing s.file underway
.B2
.\" ############################
.\" #
.\" # Other stuff
.\" #
.\" ############################
.B1
.sp .5
.H1
Common operations
.H2
Get a working copy of a tree
.LP
\fBbk clone bitmover.com:/home/bk/bugfixes\fP
.H2
Edit some files
.LP
\fBcd bugfixes/src
.br
\fBbk vi sccs.h slib.c\fP
.H2
Check in the files, creating a changeset
.LP
\fBbk citool\fP
.H2
Push the changes back up
.LP
\fBbk push\fP
.H2
Pull updates
.LP
\fBbk pull\fP
.H2
Graphically browse a file's history
.LP
\fBbk revtool\fP \fIfile\fP
.H2
Graphically browse a project's history
.LP
\fBbk revtool\fP
.B2
.\"# 
.\"# Graphical Tools
.\"# 
.B1
.sp .5
.H1
Graphical Tools
.sp .25
.H2
bk citool [\fIdir or file list\fP]
.LP
Graphical checkin tool, shows all modified files and all files not
under revision control.  Click on a modified file and the differences
are shown and a comment window is available for checkin comments.
Can pop up an editor tool to walk through changes; can pop up
revtool to view history.  Integration with the bug database is coming.
.H2
bk csettool [-r\fIrevs\fP]
.LP
View all changes contained in a changeset or set of changesets.  Lists
the changesets, the deltas in each file in each changeset, and shows
the differences of each file.
.H2
bk difftool \fIleft\fP \fIright\fP
.LP
Side-by-side file difference viewer.  If \fIright\fP is a directory the
implied name is \fIright/left\fP, like diff(1).
.H2
bk fmtool \fIlocal\fP \fIremote\fP \fImerge\fP
.LP
Side-by-side merge tool for resolving differences.  Walks through each
change, allows you to select either, places the selection in a merge
window which can then be edited directly.
.H2
bk helptool [\fItopic\fP]
.LP
Online help system with search facility.
.H2
bk repotool
.LP
Graphical tool to manage projects and bug database
.H2
bk revtool [\fIfilename\fP]
.LP
Graphically browse file or project history.  Click left on a node and
then click right on a later node to view differences.  Double click on 
a node to get an annotated listing of that version of the file.  Hit
"c" to get an annotated listing of \fBall\fP versions of a file
(\fBtry this!\fP).  Click
on any line in an annotated listing to jump to that node of the revision
history.  Click "View Changeset" to see all other files changed at the
same time as the selected line.
.B2
.\" ############################
.\" #
.\" # Ranges and Dates
.\" #
.\" ############################
.sp 2.1
.B1
.H1
Range and Date Syntax
.sp .25
.ps 10
Commands that take a revision option, \fI-r\fP, can
take either a range of deltas or a range of dates as
the argument.
.sp .5
Specify both endpoints:
.br
-r1.1..1.5
.br
.sp .5
Specify dates:
.br
-c98..98
.sp .5
.B2
.\" ############################
.\" #
.\" # Merging
.\" #
.\" ############################
.B1
.H1
Merging
.sp .5
.H2
bk help merging
.LP
Get help on the merge process
.H2
bk help merge-binaries
.LP
Get help on merging binaries
.B2
.\" ############################
.\" #
.\" # Searching
.\" #
.\" ############################
.B1
.H1
Searching
.sp .5
.H2
bk grep [\fIoptions\fP] pattern [\fIfiles\fP]
.LP
Search some/all revisions of one or more files for a string.
.IP -r+
Search only the most recent revision
.H2
bk annotate [\fIoptions\fP] [\fIfiles\fP]
.LP
Show an annotated listing
.H2
bk sccscat [\fIoptions\fP] [\fIfiles\fP]
.LP
Show an annotated listing of \fBall\fR versions of a file
.B2
.\" ############################
.\" #
.\" # More help
.\" #
.\" ############################
.B1
.H1
Getting more help
.sp .5
.H2
Other commands
.LP
This reference card is not a complete listing of the commands and their
options; it lists the most commonly used combinations.  See the help
facilities described below for a complete listing.
.H2
bk helptool [\fIcmd\fP]
.LP
Graphical, hyperlinked, searchable help tool.  Shows all man pages,
can search on words, page views stack like Netscape.
.H2
bk help \fIcmd\fP
.LP
Shows man page like help for \fIcmd\fP.
.H2
http://www.bitkeeper.com/UG
.LP
Online user guide.
.H2
bk sendbug
.LP
To report a bug or request a feature.
.H2
mail support@bitmover.com
.LP
For support from the development team.
.H2
+1-415-401-8808
.LP
For \fBright now\fP support.
.B2
