.so ../bk-macros
.TH "bk bkd" "\*[BKVER]" %E% "\*(BC" "\*(UM"
.SH NAME
bk bkd \- the \*(BK daemon
.SH SYNOPSIS
.B bk bkd
.[OPT] options
.SH DESCRIPTION
.LP
The \*(BK daemon, bkd, is used to synchronize and query repositories.
It is typically run in one of the following ways:
.LI
automatically started when accessing a remote repository via rsh, ssh, http,
and/or the file system;
.LI
automatically started via ssh as a login shell;
.LI
manually started as a long running stand-alone daemon;
.LI
automatically started as a long running service at boot time.
.LP
The method used usually depends on how the remote repository is named.
See 
.B bk help url
for details on the naming syntax.
.LP
The stand-alone daemon method has no security, other than the
ability to run in read-only mode and/or the ability to limit chdir.
If security is a requirement, use 
.B ssh
to get to the daemon.  See below for information on
configuring the daemon as a login shell.
.SH "ANONYMOUS ACCESS"
.LP
The most common use of the stand-alone daemon is for anonymous access
to a repository.  To provide read-only, anonymous access, you can run:
.DS
bk bkd \-d \-xpush
.DE
.LP
This will allow anyone to read (but not write) all repositories at or below
the directory in which the bkd was started.
.LP
If you want to export a single repository, pick a port number, and 
do this:
.DS
cd /home/bk/linux-2.6
bk bkd \-d \-p5555 \-xcd \-xpush
.DE
.LP
This says to run in daemon mode, bind to port 5555, and disallow the
"cd" and "push" commands.  By disallowing the "cd" command, the daemon
at port 5555 is tied to the repository in the current working directory
(bkd needs to be run at the root of the repository).  By disallowing the
"push" command, the repository is protected from updates.
.LP
Clients can get to this repository by using the BK URLs of
.DS    
bk://host.domain:5555
http://host.domain:5555
.DE
.br
i.e.,
.DS
$ bk clone bk://host.domain:5555 my_tree
.DE
Use the http URLs allows access through most firewalls.  \*(BK supports
accessing repositories through http proxies, including authenticated
proxies.
.SH SECURED ACCESS VIA SSH
Secure access is provided via 
.BR ssh .
There two ways to invoke 
.BR ssh :
.tp 4
a)
when the repository is specified in this form: 
[\c
.ARGc user @]
.ARGc host :
.ARG pathname ,
.B ssh
will be called to run
.B bk bkd
on the remote host.  When the client command completes, the 
.B ssh 
connection is broken and the 
.B bkd
daemon goes away.
.tp
b)
when the repository is specified in this form: 
.Bc bk://user@host[
.ARG pathname \fB]\fR,
.B ssh
will be called to remote login to 
.B host
and will expect that the login shell is the \*(BK daemon.
.LP
.SS BKD LOGIN SHELL
On Red Hat Linux, the following steps are necessary to add a \*(BK 
daemon login shell:
create a simple shell script, call it 
.BR bkd , 
put it someplace like 
.BR /usr/libexec/bitkeeper/bkd ,
add the full path to the script in 
.BR /etc/shells ,
and add a user with that path as their shell.
.LP
An example 
.B bkd
shell script which works is known to work:
.DS
#!/bin/sh
exec bk bkd -C -xcd
.DE
.LP
.B Note:
using the bkd as a login shell when accessing the system using
.B rsh 
is unsupported and is known not to work due to a long standing rsh bug.
.SH BK/WEB
The bkd is a self contained http server which provides the optional
BK/Web feature of \*(BK.  In order for this feature to work the 
repository served by the bkd must contain (or reference) a commercial
license which has the BK/Web option enabled.
.SH WINDOWS BASED BKD
.LP
It is possible to install a one or more bkd's as Windows services,
see 
.B bk help service.
.SH OPTIONS
.TP 1i
.B \-C
This option provides a slightly more secure mode of
operation in that the bkd will refuse to change directories up out of 
the directory in which it was started.
.tp
.B \-B
This option make clones from this bkd be buffered in
.B BitKeeper/tmp
before being transfered to the remote user rather than being
transfered directly.  This allows the repository read lock to be
released early so that users on a slow network connection won't
deadlock the repository.  The tradeoff is the diskspace requirement
for the repository will double.  Multiple clones in parallel will only
generate one copy of the repository and share it.  This option can be
enabled by default by adding
.DS
buffer_clone:yes
.DE
to
.B BitKeeper/etc/config.
.br
(This option is not supported on the Windows platform.)
.tp
.B \-d
Run as a daemon, typically in the background (but see the next option).
.tp
.B \-D
Debug mode, do not fork and run in the background.
.tp
.B \-h
Make bkd print http headers on all outgoing bk push, bk pull,
and bk clone messages.  Use when bkd is called from a cgi script.
.tp
.OPTreq \-l log
Log accesses in 
.ARG log ;
if
.ARG log
is not specified, then log to stderr.
.tp
.OPTreq \-P pfile
Write the pid of daemon process into this file at startup.
.tp
.OPTreq \-p port
Specify an alternative port.  The default port is 0x3962 (aka 14690).
This option implies \-d.
.tp
.OPTreq \-i cmd
Include
.ARG cmd
from the by default excluded command list.
.tp
.OPTreq \-x cmd
Exclude 
.ARG cmd
from the allowed command list.  The list of commands which may be excluded
currently are:
abort,
cd,
check,
clone,
get,
httpget,
pull,
push,
pwd,
rclone,
rootkey,
status,
synckeys,
and
version.
.SH EXAMPLES
.LP
We use the following in 
.B /var/bitkeeper/repositories
to provide anonymous read only access to some \*(BK repositories:  
.DS
#----------------------\ cut\ here\ --------------------------
nobody /home/bk/bk-3.2.x -C -xpush -p3200
nobody /home/bk/bk-3.3.x -C -xpush -p3300
#----------------------\ cut\ here\ --------------------------
.DE
.LP
The following init script is known to work on Red Hat Linux based systems.
The init script shown can be generated with a 
.DS
$ bk getmsg bitkeeper.init
#----------------------\ cut\ here\ --------------------------
#!/bin/sh
#
# chkconfig: 2345 24 84
# description: BitKeeper server

# Source networking configuration.
if [ \-f /etc/sysconfig/network ]
then	. /etc/sysconfig/network

	# Check that networking is up.
	[ ${NETWORKING} = "no" ] && exit 0
fi
[ \-x /usr/bin/bk ] || exit 0
VAR=/var/bitkeeper

case "$1" in
    start_msg)	echo "Start BitKeeper daemons"
		;;
    stop_msg)	echo "Stop BitKeeper daemons"
		;;
    restart)	$0 stop
			$0 start
		;;
    start)	cd $VAR || exit 1
		test \-f repositories || {
			echo Nothing advertised
			exit 0
		}
		while read user dir opts
		do	(
			cd $dir || exit 1
			F=\`basename $dir\`
			CMD="bk bkd \-d $opts \-l$VAR/log.$F \-P$VAR/pid.$F"
			su -c "$CMD" $user 2>> $VAR/errors
			echo Started $CMD in $dir
			)
		done < repositories
	    	;;

    stop)	
		cd $VAR || exit 1
		echo Shutting down BitKeeper daemons
		for i in pid.*
		do	kill \`cat $i\`
			rm $i
		done
		;;

    status)	cd $VAR || exit 1
		for i in pid.*
		do	echo This pid should be running: \`cat $i\`
		done
		ps \-axf | grep bkd
		
		;;

    *)		echo "Usage: bitkeeper {start|stop}"
    		exit 1
		;;
esac

exit 0
#----------------------\ cut\ here\ --------------------------
.DE
.SH BUGS/NOTES
Needs 
.B ssh
to provide access controlled, authenticated users.
One could argue that this is code reuse rather than a bug.
.LP
\*(BM
does not ship
.B ssh
since it is widely available.
.LP
On Windows the bkd service does not work when started from a network drive.
.LP
On Windows the bkd service does not work when started from a subst'ed drive.
.SH "SEE ALSO"
.SA parent
.SA "service (Windows only)"
.SA url
.SA Howto-bkd
.\" help://anonymous
.\" help://deamon
.\" help://daemon
.\" help://demon
.\" help://security
.\" help://secure
.\" help://bkweb
.\" help://bk/web
.SH CATEGORY
.B Repository
.br
.B Admin
