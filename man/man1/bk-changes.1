.so ../bk-macros
.TH "bk changes" "\*[BKVER]" %E% "\*(BC" "\*(UM"
.SH NAME
bk changes \- show changeset history
.SH SYNOPSIS
.B bk changes
.[ARG] options
.[OPTreq] \-r revs " | \-"
.br
.B bk changes
.[ARG] options
.ARG repo
.[ARG] repo "\ .\|.\|."
.br
.B bk changes 
.B \-L
.[ARG] options
.[ARG] repo "\ .\|.\|."
.br
.B bk changes 
.B \-R
.[ARG] options
.[ARG] repo "\ .\|.\|."
.br
.B bk changes 
.B \-L
.B \-R
.[ARG] options
.[ARG] repo "\ .\|.\|."
.SH DESCRIPTION
The changes command is used to get an overview of the changes made to
a repository.  There are options to search for particular changesets,
view only tagged changesets, limit the search to a particular user,
view only local changes, view only remote changes, view changes relative
to a set of repositories, etc.
.LI 
The first form shown above shows changes in the local repository.
If the last argument is a \*(lq\-\*(rq then the revisions to be listed are 
specified, as keys, tags, and/or revisions, on stdin.
.LI
The second form shown above shows changes in the named repository.
.\" XXX: this was in 3.2.x, but was not implemented:
.\" If the second to the last argument is a "-" then the revisions to be
.\" listed are specified, as keys, tags, and/or revisions, on stdin.
.LI
The third form shown above lists changes found in the local repository
but not in the remote repository.
If the remote repository is not specified, the outgoing parent[s] of the
local repository is/are used, i.e.,
the listing is what would be sent on a push (when used with
.QR \-a ).
.LI
The fourth form shown above lists changes found in the remote repository
but not in the local repository.
If the remote repository is not specified, the incoming parent[s] of the
local repository is/are used, i.e.,
the listing is what would be received on a pull (when used with
.QR \-a).
.LI
The fifth form shown above lists changes unique to either the remote or the 
local repository.
The local changes are listed first, then the remote changes, and both
sets of changes have a title line to separate them.
.LP
In all but the second form, the changes command must be run from within
a repository, and that repository is the local repository while the
named repository is the remote repository.  All the other selection
options are applied to the list of local or remote only changesets.
.LP
The changesets to be listed may be specified as a revision, a range of
revisions, or a list of revisions on stdin.
The default is all revisions.
Specifying revisions is incompatible with the 
.Q \-R/\-L
options.
.SH OPTIONS
.TP \-/\*<str\*>/[i]
.OPTreq \-/ str \fB/\fP[\fBi\fP]
List only those changesets whose comments contain the string
.ARG str .
.ARG str
may be a regular expression.
If there is a trailing \*(lqi\*(rq then ignore case in the search.
.tp
.B \-a
List all deltas, including tag deltas.  Implies
.QR \-e .
An additional
.Q \-e
after this option will turn off the listing of the empty merge deltas (the
.Q \-e 
option is inverted from its previous value each time the option is seen).
.tp
.OPTreq \-c dates
Specifies the changesets to be listed as a date range, i.e.,
.Q \-c\-6W
lists the last 6 weeks worth of changes.
.tp
.B \-D
When showing local or remote only changes and there are multiple local or
remote repositories specified (or implied via the parent pointer[s]),
there may be duplicate changesets which are present in more than one
repository.
If this option is specified, then the duplicates are filtered out such
that the changesets listed are a unique set.
This option combined with
.QR \-aL
or
.QR \-aR
is used to answer the questions: \*(lqWhat is only in this
repository relative to all of the specified repositories?\*(rq or \*(lqWhat is
only in one or more of the remote repositories but not in this local
repository?\*(rq respectively.
.tp
.OPTreq \-d dspec
Override the default dspec, allows for arbitrary output formats.
.tp
.B \-e
Show empty merge changesets.  By default, these are not shown.
.tp
.B \-f
print the changes in forward (oldest to newest) order.  The default is
backwards in time, i.e., most recent to least recent order.
.tp
.B \-h
Produce html as output.  May not be combined with
.QR \-d .
.tp
.OPTreq \-i pat
Include information only from files matching
.ARG pat
pattern (see below).
.tp
.B \-k
Produce a list of matching changeset keys, usually for scripts.
Equivalent to 
.QI \-Dand:KEY:
.tp
.B \-L
List only those changesets which are unique to the local repository.
Requires either a BK url or a valid repository parent.
Will not report tags, or empty merges.
Use with
.QR \-a
to see tags and empty merges,
i.e., everything which would be sent back with a bk push.
.tp
.B \-m
Do not show any merge changesets, empty or not.
.tp
.B \-n
add a newline to each printed record (sometimes useful with
.QR \-d ).
.tp
.B \-q
When listing local/remote changes from multiple parents (or remote
repositories) do not print the location of the remote repositories.
This option is implied by
.QR \-D .
.tp
.OPTreq \-r revs
Specifies the changesets to be listed, i.e., 1.100..
.tp
.B \-R
List only those changesets which are unique to the remote repository,
Requires either a BK url or a valid repository parent.
Will not report tags, or empty merges.
Use with
.QR \-a
to see tags and empty merges,
i.e., everything which would be brought over with a bk pull.
.tp
.B \-t
Only list changesets which are tagged.
.tp
.B \-T
Sort the deltas in a changeset in time order.
The default is to sort by current file name.
This option only affects verbose (\c
.QR \-v )
output.
.tp
.OPTreq \-u user
Only list changesets created by
.ARG user .
This option may appear multiple times in which case the changeset is listed
if it matches any of the specified users.
.tp
.OPTreq \-U user
Only list changesets created by someone other than
.ARG user .
This option may appear multiple times in which case the changeset is not
listed if it matches any of the specified users.
.tp
.B \-v
Shows individual file change history as well as changeset history.
.tp
.B \-vv
Same as
.Q \-v
except that each file's change history is followed by unified diffs
for that change (using the :DIFFS_UP: keyword).
.tp
.OPTreq \-x pat
Exclude information from files matching
.ARG pat
pattern (see below).
.SH
INCLUDE/EXCLUDE PROCESSING
.LP
Include and/or exclude patterns may be used to control which
files are included in verbose reporting (\c
.QR \-v /\c
.QR \-vv ;
see above).
There may be multiple include and/or exclude patterns.
The patterns are a file glob the same as used by 
.B bk ignore.
Patterns are matched against the partial pathname from the root
of the repository.
If the partial pathname matches any of the exclude patterns then
the file is skipped.
If there are one or more include patterns but the partial
pathname does not match any of the include patterns then the
file is skipped.
Exclude processing takes precedence over include processing.
.LP
When reporting information there can be ambiguity as to which name is used 
for include/exclude processing because some files may have been moved 
since the changeset in question.
The include/exclude processing always applies to the file name as it was
as of the changeset in question.
For example, suppose you have a file that is currently deleted but
at the time of the changeset was in
.BR src/foo.c .
If you told the system to report
.B src/*
then the file will
be in the set.
.SH EXAMPLES
Sample output:
.DS
ChangeSet@1.607, 2000-02-21 14:05:25-08:00, awc@host.com
  update citool to use the "bk unedit" interface. 

ChangeSet@1.606, 2000-02-21 13:35:21-08:00, awc@host.com
  This fix allows \*(BK to be installed in a non-standard directory.
  The install directory is computed from the $PATH variable and 
  the bk symlink.

ChangeSet@1.605, 2000-02-20 01:32:19-08:00, lm@host.com
  Fix a diagnostic in pull.
  An aborted attempt at key compression.
.DE
.SH EXIT STATUS
.LP
.B bk changes
returns exit status:
.TP
0
on success.
.tp
1
on failure.
.SH "SEE ALSO"
.SA commit
.SA glob
.SA pending
.SA log
.SA pull
.SA push
.SA regex
.SA revtool
.SA sccslog
.SA set
.SH CATEGORY
.B Common
.br
.B Repository
