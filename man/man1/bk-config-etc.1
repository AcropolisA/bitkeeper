.so ../bk-macros
.TH "bk config-etc" "\*[BKVER]" %E% "\*(BC" "\*(UM"
.SH NAME 
bk config-etc \- configuring \*(BK
.SH DESCRIPTION
\*[BK] config files contain repository configuration information including
project description, licensing information, 
user preferences, BK/Web preferences, and contact information.
Config file entries take the form of key-value pairs.
This page describes the various configuration keys and their
possible values.
.LP
Each \*(BK repository must have some minimum configuration
information available in order to properly execute \*(BK commands;
this information can be stored in a number of different
locations.
For more about this and how the \*[BK] configuration is derived
for a particular repository, see
.BR "bk help config" .
.SH "CONFIG FILE ENTRIES"
.SS AUTOFIX
.br
The 
.B "bk check"
command can automatically fix a number of problems found in a repository.
The default is that this variable is on in newly created repositories,
and that the variable will be passed through as the 
.Q \-f
option to bk check.
To enable
or disable autofix, one of the following should be in
.B BitKeeper/etc/config
file:
.DS
autofix:yes
autofix:no
.DE
.SS BKWEB PREFERENCES
.LP
BKWeb preferences can be specified in the
.B BitKeeper/etc/config
file.
If these preferences are specified, information given will appear on the
BKWeb site for the project.
.TP \fBhomepage\fP
.B bkweb
specify the BKWeb address for a project
.tp
.B homepage
the home page for your project or company
.tp
.B master
the location from which source can be cloned
.LP
For example,
.DS
bkweb:    http://mysql.bkbits.net:8080/mysql-5.0
master:   bk://mysql.bkbits.net/mysql-5.0
homepage: http://www.mysql.com
.DE
.SS CHECKOUT MODE
.br
Specify checkout mode for a repository. 
If the variable is unset, the default is to not show gfiles unless
files are checked out.
To override the default, to have gfiles checked out in read-only
or read-write mode, a line must be added to the
.B BitKeeper/etc/config
file as follows:
.DS
checkout:option
.DE
where option is one of:
.TP \fBnone \fP
.B get
Automatically do a bk co
.ARG file
after doing a bk ci
.ARG file .
(Checkout in read-only mode.)
.tp
.B edit
Automatically do a bk edit
.ARG file
after doing a bk ci
.ARG file .
Note: This will also
adjust the modification time of the s.file to be two seconds before the 
modification time
of the gfile, which is needed in order to prevent make(1) from attempting
to re-get the file.
(Checkout in edit mode.)
.tp
.B last
Preserve the previous state of
.ARG file .
This is like
.B checkout:none
for a clone.
If the file was later locked and then checked in, it will be checked out
again with a lock.
.tp
.B none
Clear the gfile after doing a bk ci
.ARG file .
(This is the default.)
.LP
For those repositories with BAM data, there is a checkout mode 
specifically for those files:
.DS
BAM_checkout:option
.DE
where option is as above.
.LP
BitMover recommends "BAM_checkout:last".
.SS CLOCK_SKEW
.br
When using the 
.Q \-c
option to 
.BR "bk sfiles" ,
file time stamps may be compared to a cached list to determine when
files are unmodified and don't need to be diff'ed again.  The
.Q clock_skew
parameter controls how old a file must be before file time stamps are to 
be trusted.  
A certain amount of clock skew is strongly advised since the use of network
file systems can can cause the time stamps to be incorrect.
The time is in seconds and defaults to 604800 (one week).
.DS
clock_skew: on          # use system defaults
clock_skew: 86400       # one day
clock_skew: off         # disable trusting of time stamps
.DE
.SS COMPRESSION
.br
By default, when you setup a repository the compression algorithm
will be set to gzip in the
.B BitKeeper/etc/config
file with a line as follows:
.DS
compression:gzip
.DE
This results in the compression of stored
s.files.  In other words, when you run
.DS
bk new
.DE
what really happens is
.DS
bk new -Zgzip
.DE
To make the repository use no compression by default, 
change the compression line in the
.B BitKeeper/etc/config
file to be:
.DS
compression:none
.DE
.B Note:
Setting this option affects
.I only
files created subsequently.
See
.B bk help admin
for more information about the
.Q \-Z
option for compression.
.SS "CONTACT INFORMATION"
.LP
By filling in the contact information, you are providing a contact
person for the project in the event that \*[BK] discovers a 
problem that requires local intervention.
The email field is the only required field.
.DS
contact:
email:
.DE
.SS "DESCRIPTION"
.LP
The config file can contain information that helps describe the project.
The description field is required.
.DS
description:
.DE
The value for this entry can be anything.
.SS KEYWORD EXPANSION
.br
Keyword expansion is turned OFF by default.  To have keyword expansion
flags applied to a file automatically upon checkin, add the keyword
preference to the
.B BitKeeper/etc/config
file.
.LP
Keyword preference options are:
.TP "\fBper repository\fP"
.B sccs
expand SCCS keywords (%keyword%).
.tp
.B expand1
expand keywords in the first line that contains keywords only (avoids printf
conflicts).
.tp
.B rcs
expand rcs keywords ($keyword$)
.LP
For example, having
.DS
keyword: sccs, expand1
.DE
in the config file will expand SCCS keywords only in the first line
encountered that contains sccs keywords. 
.B Note:
Setting this option affects
.I only
files created subsequently.
.SS LICENSE KEY
.LP
The use of \*(BK requires a commercial
license key.  You can obtain a 30-day license for evaluation by
emailing a request to sales@bitmover.com.
.LP
Once a license key is obtained, add lines to
.B BitKeeper/etc/config
that look like:
.DS
license: <license key>
licsig1: <sig1>
licsig2: <sig2>
licsig3: <sig3>
.DE
.SS LINE TERMINATION
.br
The \*[UN] and Windows operating systems use different characters to
represent line terminations (eoln).
\*(BK, by default, sets the
.B eoln
preference to
.B native
when an sfile
is created.
This means that files checked out on Windows will have
the Windows eoln and files checked out on \*[UN] will have the \*[UN]
eoln.
.LP
Line-termination preference options are:
.TP "\fBwindows\fP"
.B native
Set line termination to the native sequence for the platform
(\*(lq\en\*(rq on  
\*[UN] and Linux; \*(lq\er\en\*(rq on Windows).  (This is the default.)
.tp
.B unix
Force line termination to the \*[UN] standard (\*(lq\en\*(rq).
.tp
.B windows 
Force line termination to the Windows standard (\*(lq\er\en\*(rq).
.LP
To force the UNIX eoln mode on all platforms use:
.DS
eoln:unix
.DE
to the
.B BitKeeper/etc/config
file.  
To force Windows line termination use:
.DS
eoln:windows
.DE
In general, the default of native line terminations is the right answer and
for exceptions the
.B bk admin 
command may be used to set this option on a per file basis.
.SH NOSYNC
By default, BitKeeper does an fsync() after each update of a history file
and a sync() after a resolve.
Both of these may be performance problems, especially on some Linux file
systems where a fsync() is implemented as a system wide sync.
The syncs may be 
disabled temporarily with
.DS
"BK_CONFIG=nosync:on! "
.DE
or permanently with
.DS
nosync:on
.DE
in the config file.
.SS PARTIAL CHECK
.LP
By default, BitKeeper does a full repository integrity check after
each update.
The integrity check validates both internal BitKeeper metadata and
file checksums.
The integrity checks have been shown to catch hardware problems
such as bad memory chips, bad disk drives, and software problems
such as NFS inserting blocks of nulls in the middle of files.
If you have a large repository (more than 5,000 files and/or more
than 100MB) then you might want to trade off safety for
performance.
There is a partial check mode in which BitKeeper only does full
checks once every 24 hours.
.DS
partial_check: on
.DE
Subsequent checks validate the metadata and file integrities only
for files that are updated.
.LP
We recommend that you start in full check mode and turn on partial
check later if needed.
.SS TRIGGER PATHS
.LP
By default, triggers are stored in the repository under the
.B BitKeeper/triggers/
directory and this is the only directory searched when looking for
triggers.
More than one triggers directory may be used by setting the
.B triggers
variable.
The format is is one or more paths separated by a vertical bar.
For example, if you wanted to run triggers from
.B /etc/BitKeeper/triggers
and from the repositories'
.BR BitKeeper/triggers ,
set the variable as follows:
.DS
triggers:	/etc|.
.DE
The directories are processed in the order found in the variable.
.LP
If the variable contains the value "none" then no triggers are processed.
.SS UPGRADE URL
.LP
The upgrade command normally looks for new versions of \*[BK] here:
.B http://upgrades.bitkeeper.com/upgrades/
but that location may be overridden by setting the
.I upgrade-url
field to an different URL.
.LP
For example,
.DS
upgrade-url:	http://www.example.com/bk-release/
.DE
The contents of that directory will need to be manually mirrored from BitMover.
.SS USER PREFERENCES
.LP
Repository preferences can be defined in the
.B BitKeeper/etc/config
file.
The general format for the repository preference config file is 
.DS
[filter]preference:option
.DE
.LP
The optional filter can be any of the following:
.TP "\fBper repository\fP"
.B no filter
preference:option
.tp
.B empty filter
[]preference:option
.tp
.B per user
[jdoe]preference:option
.tp
.B per host
[@xyz.com]preference:option
.tp
.B per pathname
[:/path/to/repo]preference:option
.tp
.B per user@host
[jdoe@xyz.com]preference:option
.tp
.B per repository
[:/path/to/repo]preference:option
.br
[@xyz.com:/path/to/repo]preference:option
.br
[jdoe@xyz.com:/path/to/repo]preference:option 
.LP
Preferences can be listed multiple times with different filters.
The filters are examined in order and the first line that
matches the current user, host, and pathname is used.  So in general
the most restrictive directives should appear first.
.SH "SEE ALSO"
.SA admin
.SA config-gui
.SA config
.SA setup
.SA upgrade
.\" help://configuration
.\" help://user preferences
.\" help://repository preferences
.SH CATEGORY
.B Overview
.br
.B Admin
