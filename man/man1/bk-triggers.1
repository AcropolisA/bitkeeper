.so bk-macros
.TH "bk triggers" 1 2000/11/30 "\*(BC" "\*(UM"
.SH NAME
bk triggers \- using \*(BK event triggers
.SH DESCRIPTION
.LP
\*(BK supports a variety of trigger types. Triggers are 
arbitrary commands, compiled into an executable shellscript, 
which run before or after a repository level command.  These 
triggers can be used for event notification 
and/or to implement control over the events.
.LP
When a trigger is called, it is called at the root of the
repository.  When an event occurs, if there exists a 
file BitKeeper/triggers/\c
.ARG event_class
in the repository root that corresponds to the event, 
\*(BK will execute that trigger.  For example, if there is
a push from repository B going into repository A 
and repository A has a file BitKeeper/triggers/pre-incoming 
the pre-incoming script will be run before the push event 
applies to repository A.
.LP
There are three event classes which activate triggers: incoming
events, outgoing events, and commits, and they can be set up to
trigger before or after those events, pre- and post-,
respectively.   The difference between
pre- and post- event triggers is that pre-triggers may cause events
to fail, but post-triggers are strictly informational.   The event
classes are as follows:
.if t .TP
.if n .TP 4
.B pre-commit
\(bu called before a changeset is committed
.br
\(bu exit !0 fails the commit
.br
\(bu typically used for integrity checks
.tp
.B post-commit
\(bu called after a changeset is committed
.br
\(bu typically used for notification
.tp
.B pre-incoming
\(bu called before an incoming push/pull is started
.br
\(bu exit !0 fails the incoming event
.br
\(bu typically used for locking down a repository
.tp
.B pre-resolve
\(bu called after the data has been union-ed in the RESYNC directory
.br
\(bu called in the RESYNC directory, not the enclosing repository
.br
\(bu exit 0 allows the pull/push
.br
\(bu exit 1 fails the entire pull/push
.br
\(bu exit 2 fails the entire pull/push but leaves the patch in PENDING
.br
\(bu typically used to examine changes before taking them
.tp
.B pre-apply
\(bu note that pre-apply is
.B not yet implemented
.br
\(bu called in the RESYNC directory, not the enclosing repository
.br
\(bu called after the data has been merged in the RESYNC directory but
before it is applied to the tree.  Last chance to say no, allows examination
of the merge changes.
.br
\(bu exit 0 allows the pull/push
.br
\(bu exit 1 fails the entire pull/push
.br
\(bu exit 2 fails the pull/push but leaves the patch in PENDING
.br
\(bu exit 3 fails the pull/push but leaves the patch in PENDING and the
RESYNC tree in PENDING/RESYNC-<date>.
.br
\(bu typically used to examine changes before taking them
.tp
.B post-incoming
\(bu called after the data has been applied to the tree
.br
\(bu typically used for notification
.tp
.B pre-outgoing
\(bu called before an outgoing pull/push/clone event
.br
\(bu exit !0 fails the outgoing event
.br
\(bu typically used for locking down a repository
.tp
.B post-outgoing
\(bu called after the outgoing event
.br
\(bu typically used for notification
.LP
.\" Commented out because pre-apply doesn't yet exist....
.\" Because triggers can propogate and because they can do bad things like
.\" .B rm -rf .
.\" it is a wise idea to put a non-propogating paranoid trigger like so in
.\" your tree:
.\" .DS
.\"     cat > BitKeeper/triggers/pre-apply-paranoid <<EOF
.\"     #!/bin/sh
.\" 
.\"     # This is running in the RESYNC tree, we're looking for any new
.\"     # triggers and/or changes to triggers.
.\"     # Done after the resolve stage because they could be sneaky and create
.\"     # the file in an earlier changeset and then move it and we'd miss it
.\"     # because it hasn't been moved yet.
.\"     test `bk sfiles BitKeeper/triggers | wc -l` -gt 0 && {
.\"         echo Changes delayed until they are reviewed
.\"         exit 3
.\"     }
.\"     exit 0
.\"     EOF
.\" .DE
.LP
Triggers can be structured to run in all copies of a project 
and/or in a specific instance of a project.  
An example on how to customize for a particular repository is as follows:
.DS
#!/bin/sh

if [ $BK_LOCAL_ROOT = /home/bk/stable ]
then	echo whatever | mail \-s 'event in stable' lm
fi
.DE

Trigger status is stored environment variables, which are available
as follows:
.LP
All events:
.if t .TP
.if n .TP 4
.B BK_LOCAL_HOST
BK's idea of the local host name.
.tp
.B BK_LOCAL_ROOT
The root of the local repository.
.tp
.B BK_LOCAL_TIME_T
The Unix style timestamp of the local version of BK. 
.tp
.B BK_LOCAL_USER
BK's idea of the local user name.
.tp
.B BK_LOCAL_UTC
The timestamp of the local version of BK expressed as YYYYMMDDHHMMSS.
.tp
.B BK_LOCAL_VERSION
The version of the local BK either as the symbolic name or the UTC.
.LP
All events other than 
.BR commit ,
which is a local operation:
.tp
.B BK_REMOTE_HOST
Same as the local version only for the remote repository or BK.
.tp
.B BK_REMOTE_ROOT
Same as the local version only for the remote repository or BK.
.tp
.B BK_REMOTE_TIME_T
Same as the local version only for the remote repository or BK.
.tp
.B BK_REMOTE_USER
Same as the local version only for the remote repository or BK.
.tp
.B BK_REMOTE_UTC
Same as the local version only for the remote repository or BK.
.tp
.B BK_REMOTE_VERSION
Same as the local version only for the remote repository or BK.
.LP
Operation-specific variables that are only available for that operation:
.tp
.B BK_CSETLIST
If set, contains the name of a file which contains the list of changesets
being received.
.tp
.B BK_CSETS
If set, contains the list of changesets being sent.
.tp
.B BK_EVENT
Set to the event type (pull/push/etc)
.tp
.B BK_LOCALCSETS
If set, the number of local changesets (and/or tags) which are not
present in the remote repository.
.tp
.B BK_PENDING
Set in the commit triggers; contains the name of a file which contains
the list of files with pending deltas.
.tp
.B BK_REMOTECSETS
If set, the number of remote changesets (and/or tags) which are not
present in the local repository.
.tp
.B BK_STATUS
If set, contains status about the command associated with the trigger.
.tp
.B BK_TRIGGER
Set the the trigger class (but not instance).  I.e., pre-incoming.
.\" help://Repository/notification
.\" help://Repository/notify
.SH AVAILABILITY
Pull and push triggers available
with \*(BK Professional only.
.SH CATEGORY
.B Overview
.br
.B Repository
