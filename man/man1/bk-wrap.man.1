.so ../macros
.TH "bk wrap" 1 08/18/00 "*(BC" *(BK
.SH NAME 
wrap
.SH DESCRIPTION
.LP
For various reasons, you may wish to wrap a patch which is transmitted
through email.  The typical reason is that the patch is going through
some mailer which chops long lines or performs some other unwanted
transformation on the data.
.LP
BitKeeper provides a simple wrapper and unwrapper to do this.  The programs
are small shell scripts which call
.B uuencode
and
.BR uudecode .
The files, which you can examine in the
.I bin
directory, are called
.B uuwrap
and
.BR unuuwrap .
.LP
To use a different style of wrapper (base64, encrypted, etc),
create two programs, one of which takes a stream of bytes on stdin
and produces the wrapped stream of bytes, and another which takes a
wrapped stream of bytes and produces an unwrapped stream of bytes.
.LP
These programs must be placed the BitKeeper
.I bin
directory and have names of the form:
.sp
.if t \{\
.IB type wrap
.br
.BI un type wrap
\}
.if n \{\
<type>wrap
.br
un<type>wrap
\}
.sp
i.e.,
.B uuwrap
and
.BR unuuwrap .  
.LP
If the programs work correctly, then the following two commands produce
identical data:
.AX
$ ls -1 | uuwrap | unuuwrap
$ ls -1
.XA
If you create new wrappers and place them in BitKeeper's
.I bin
directory on the sending and receiving machines, you can then invoke them when
sending patches.  Suppose you created simple rotate-13 wrappers
(shifts all character values 13 over, a common net news filter) and
you called them
.B rot13wrap
and
.BR unrot13wrap .
Send patches by doing:
.AX
$ bk send -wrot13 | mail user@where.ever.com
.XA
The user at the other end needs the rot13 wrapper scripts or they will not
be able to apply the patch.
.SH SEE ALSO
.SA send
.br
.SA receive
.SH CATEGORY
.B File
