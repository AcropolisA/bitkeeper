[Wed Mar 25 09:49:27 PDT 2009]

We've long wanted a way to "know" where our repos are, this a strawman
proposal on how we might do that.  It's not perfect, there is no
guarantee that you will see all repos, you only see the ones you have
touched.  That's a pretty big limitation, we might want to kill this
idea because of that.

User interface

    The intent is that this is modeled on ls(1).

    bk repos [opts] [repo]

    With no options, lists urls to each repo accessed from this host.

    -a	read all files (see on disk format below) instead of just `bk gethost`
    -l	long listing
    -p	restrict listing to urls which are paths, not bk:// or ssh:// etc
    -r	recursive listing (? is this weird)
    -t	sort by cset_time
    -u	sort by bk_time

    The long listing format is undecided, I'm really not sure what it should
    be.  If we ever implement access control then we'd want the perms but
    right now we side step that.

On disk format

    `bk dotbk`/repos/`bk gethost`/path.log - a list of paths to
    repositories, first released in bk-4.4, and updated in check.
    This is just a list of repos accessed since the last time we've
    generated the detailed file (repos below).

    To come: running 'bk repos' will use the above file to generate `bk
    dotbk`/repos/`bk gethost`/repos, and then delete the path.log file.
    The repos file has multiple KV records, each recording:

    	url => /home/bk/ob/whatever
	bk_time => time_t of last bk cmd
	cset_time => time_t of last changeset
	s_time => time_t of the s.ChangeSet file so we don't always init
	csets => number of changesets
	repoid => `bk id -r`
	id => `bk id`
	description => `bk config description`
	type => regular | product | component

Recording repos

    Any command which alters the tipkey (commit, push, pull, undo) will
    alter the path.log (someday after bk repos is implemented).

    Use kv{cset_time} to not bother
    initting the changeset file to record kv{ctime} unless it's changed.
    LMXXX - I'm thinking that this is too much work, flip it around and
    only update the file when we have the changeset file initted (and
    only consider doing it when (a) we are writing the changeset file
    or (b) we are a top level (not spawned) bk and we're more recent
    than the record (requires a read of the KV file).

    I wouldn't get excited about locking, slurp it in an addlines of
    KV records, update the one you care about, write it out to a tmp
    file, unlink, rename.  If there is a race, you may lose one repo
    but it will come back.  First release of path.log writer does locking.

XXX's
    We need a way to refresh the list, a recache or something.

In case there are problems and we need to disable in the field:

    touch $BK_DOTBK/repos -- this will cause error in mkdirf and
    stop the update.
