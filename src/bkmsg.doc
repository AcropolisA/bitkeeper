#get_C
The bk co -C option has been replaced with the -r@rev syntax.
To get the same effect as

	bk co -p -C foo.c
try
	bk -r co -r@+ foo.c
$
#diffs_C
The diffs -C option has been replaced with the -r@rev syntax.  To get the
same effect as

	bk diffs -C1.123
try
	bk -r diffs -r@1.123 -r.
$
#monotonic
If a file is marked as monotonically increasing, and that file has "dangling
deltas", i.e., deltas which are ahead of the top changeset, then the monotonic
flag may not be removed unless the dangling deltas are removed first.  You
may remove those deltas with the following command:

    bk prs -hnd'$if(:DANGLING:){:GFILE:|:I:}' <file> | bk stripdel -dC -

and then you may remove the MONOTONIC flag.
$
#chk1
A file is marked as gone (in BitKeeper/etc/gone) but is present in your
repository, possibly missing some deltas.  This can happen if a different 
repository had lost the file, marked it as gone so that "bk -r check -a" 
would pass, and then your repository was updated with that information.
Since your repository still has the file, it may be possible to restore
it in the other repository if you wish.

The other case is that someone is trying to destroy all instances of the
file's revision history.  Suppose a large file were added by mistake,
perhaps a derived (compiled) file or binary.  

Examine the files listed and if it is clear that the file is obsolete, remove
the revision history from your repository to be consistent with your parent.

If it is clear that the file is valuable then you should have the
owner of the other repository restore the file from your repository.
After the file is restored, remove the file identifier (root key) from
the BitKeeper/etc/gone file.  If you have only part of the revision
history then remove the root key from the BitKeeper/etc/gone but add
the missing keys with a

	bk -r check -aggg | bk gone -

$
#chk2
A pointer to a delta was found in the ChangeSet file but the delta was
not found in the corresponding file.  This should only happen if one or
more files have been lost in a repository, or copied from another repository,
but they were incomplete.

To get the list of missing deltas, run "bk -r check -agg".

To see if any of the deltas exist in another repository, use "bk findkey".

If the deltas exist in another repository it is possible to migrate them
into your repository.  The process to do this is to generate the list of 
changesets which contain the missing deltas, make a patch, and apply the
patch.  You should probably contact BitMover for help with this the first
time you try this process.

If the deltas cannot be found in any other repository, then you will
not be able to completely reproduce that changeset.  You can make
BitKeeper stop complaining about the problem by running

	bk -r check -agg | bk gone -

and then committing the changeset.
$
#chk3
One or more files are recorded as existing by the ChangeSet file but were
not found in the repository.  This can happen if the files were deleted,
either accidentally or on purpose.

If the files exist in another repository it is possible to add them back
to your repository.  The process is to find the files, copy them into
your repository, and strip off any extra deltas which should not be part
of your repository.  You should probably contact BitMover for help with
this the first time you try this process.

If the files cannot be found, or if the files were deliberately removed,
then the file identifiers (root keys) need to be added to the gone file.
Do this by running

	bk -r check -ag | bk gone -

and then committing the changeset.
$
#chk4
One or more files has LOD data in it.  The first approach we took to
LODs was not a good one, and we are trying to remove all vestiges of
that approach.  Other than the MySQL repository, we know of no examples
of LOD usage at the current time.  If this is the MySQL tree, you may
safely run

	bk -r check -aff

to fix up your repository.  If it is somewhere other than the MySQL 
tree, contact BitMover.
$
#cset1
An attempt was made to include or exclude a merge changeset.
This is not currently supported.
If you would like to be able to exclude one side
of the merge, then please contact BitMover.
$
#write_perms
One or more directories which need updating do not have write permission.
Please examine the list and fix the permissions.

You can restart the resolve with a 

    bk resolve

after fixing the permissions.
$
#saw_blanknonl
The file #BKARG# is corrupted because of a bug in
BitKeeper version 3.0.1 and earlier.  It was caused by a 
file on Windows that has a carriage return as the last 
character of the file without a following new line.
Please contact BitMover by running 'bk support'
to request help in repairing this file.
$
#setup_1

You are about create a new repository.  You may do this exactly once
for each package stored in BitKeeper.  If there already is a BitKeeper
repository for this package, you should do

    bk clone package_dir my_package_dir

If you create a new package rather than cloning a copy, you will not
be able to exchange work between the two packages.

$
#setup_2
Please create a description of this package.  A brief description is
probably best. For example:

    The Linux Kernel
or
    The GNU C compiler

If you are using a word processor to edit the package description,
please save the file as a plain text document.
$
#setup_3
Please fill out the configuration template in your editor.
This is used for support purposes as well as licensing.
$
#chkconfig_missing

Your BitKeeper package is missing the config file

    BitKeeper/etc/SCCS/s.config

This should not have occurred, but since it did, you can fix it
by doing the following:

    cp #BKARG#/bitkeeper.config BitKeeper/etc/config
    # edit it to reflect your site
    vi BitKeeper/etc/config
    bk new BitKeeper/etc/config

and then try your command again.

$
#chkconfig_inaccurate

Your config file, BitKeeper/etc/config, does not reflect your site.
Please check it out ("bk edit BitKeeper/etc/config"), modify the file
to reflect your site, check it in, and then try your command again.

$
#license_grace
Your license for BitKeeper has expired but you are still
within the grace period.  This changeset will be created
as normal, but you need to contact BitMover to purchase an
updated license.

BitMover can be reached at:
   +1-408-370-9911 (international and California)
   888-401-8808 (toll free in the US & Canada) 
during business hours (PST) or via email at sales@bitmover.com.
Thanks!
$
#license_almost
Your evaluation license for BitKeeper is less than one week away from
expiring.  This changeset will be created as normal, but you need to
contact BitMover to purchase a commercial license.

BitMover can be reached at:
   +1-408-370-9911 (international and California)
   888-401-8808 (toll free in the US & Canada) 
during business hours (PST) or via email at sales@bitmover.com.
Thanks!
$
#license-expired
Your license for BitKeeper has expired.  You are beyond the
grace period and you may not create any changesets until you
have contacted BitMover to purchase a new license.

BitMover can be reached at:
   +1-408-370-9911 (international and California)
   888-401-8808 (toll free in the US & Canada) 
during business hours (PST) or via email at sales@bitmover.com.
Thanks!
$
#license-none
You do not have a license for BitKeeper and you need one to create
any changesets.

You can get a temporary license by sending a mail request
to sales@bitmover.com.  

BitMover can be reached at:
   +1-408-370-9911 (international and California)
   888-401-8808 (toll free in the US & Canada) 
during business hours (PST) or via email at sales@bitmover.com.
Thanks!
$
#authentication-failed
The bkd license proxy had problems determining the version of BitKeeper
used for this connection.  Please contact BitMover for support at
support@bitmover.com.
$
#badurl
The URL provided to contact a bk license proxy cannot be parsed.
	#BKARG#

Please see 'bk help url' for how valid bkd URLs should be formed.
$
#lease-bkd-error
An unexpected error was received from the remote bkd when making a license
request:
	#BKARG#

Please correct the problem or contact BitMover for help. support@bitmover.com
$
#unexpected-response
An unexpected response was received from the remote bkd when making a license
request:
	#BKARG#

Please correct the problem or contact BitMover for help. support@bitmover.com
$
#cannot-connect
BitKeeper was unable to make a connection to the license server at:
	#BKARG#

Please correct the problem or contact BitMover for help. support@bitmover.com
$
#http-err
An unexpected http error response was returned when trying to make a
license request.  The response was:
	#BKARG#

Perhaps the licenseurl config field was set incorrectly?
Please correct the problem or contact BitMover for help. support@bitmover.com
$
#missing_config_install
No config file was found containing a license.  A license is required
to install BitKeeper.

If you have a BitKeeper repository with a valid license, retry the
install from within that repository and it will use that license.

If you have a license that was sent to you, place that license in 

	#BKARG#/config

and retry the install.

If you have no license then contact BitMover to get one.

BitMover can be reached at:
   +1-408-370-9911 (international and California)
   888-401-8808 (toll free in the US & Canada)
during business hours (PST) or via email at sales@bitmover.com.
$
#seat_info
Your user count has exceeded the number of purchased licenses.
To purchase more seats, please email sales@bitmover.com.  Thank you.

$
#no_accept_no_cset
Changeset not created due to license rejection.
$
#config_pending
Warning:  You have unsent config logs which are more than 2 weeks old.

bk commit will try to send the pending logs automatically before it exits.
Please verify the pending count is zero after bk commit is done.  To get
a count of the pending logs: use the following command:

	bk _lconfig -p

If the pending count is still non-zero after bk commit is done, please run
the following command and include its output in an email to
support@bitmover.com.

	bk _lconfig -d
$
#config_max
Error: Max pending config messages exceeded, commit aborted.

This error indicates that the BitKeeper program was unable to contact
www.bitkeeper.com to send the configuration log.

There are two possible causes for this error:

a) Network connectivity problems such as firewall/proxy configuration.
b) Problems with the server at www.bitkeeper.com


Please run the following command and include in an email to
support@bitmover.com.

	bk _lconfig -d
$
#eval_max
Error: Evaluation license are limited to #BKARG# changesets.  You are over 
that limit and you will need to get a commercial license to make any
more changesets.
BitMover can be reached at:
   +1-408-370-9911 (international and California)
   888-401-8808 (toll free in the US & Canada) 
during business hours (PST) or via email at sales@bitmover.com.
Thanks!
$
#eval_warn
Warning: Evaluation licenses have a limited number of changesets. Your
changeset quota is now down to #BKARG# changesets.  You will not be
able to commit any more changesets when the quota reaches zero.
Please upgrade to a commercial license.
BitMover can be reached at:
   +1-408-370-9911 (international and California)
   888-401-8808 (toll free in the US & Canada) 
during business hours (PST) or via email at sales@bitmover.com.
Thanks!
$
#takepatch-chksum
Error: A checksum in the patch for the ChangeSet file does not match
the checksum of the data in the patch.
Please verify the integrity of the source and destination repositories
by running "bk -r check -acv" in each.  If that passes, and a pull still
fails, run in the source repository "bk -R checksum ChangeSet".  If the
source repository has a problem that cannot be fixed, please run
"bk support" and fill out the form.  If the source repository has no
problems, and you were doing a push or pull, try the operation again. 
If you were running takepatch, then generate a new patch file from the
source repository using the same method as you have.  If the problem
occurs again, please run "bk support" and fill in the details. 
$
#takepatch-collapsed
This patch contains the following cset, which is listed in the
BitKeeper/etc/collapsed file as being replaced:
   #BKARG#

This usually indicates that the cset has been collapsed with the 
'bk collapse' command and replaced by a new cset containing the
same functionality.  It appears that cset #BKARG#2# in this tree
is the cset that replaced the cset in the incoming patch.

If you really do want this new patch in the tree, rerun pull or
takepatch with the -D option.
$
#tp1
When a file is modified in the destination repository and an incoming
patch also modifies that file, the incoming patch is not applied; the
pull/push is aborted.  The reason for this is that BitKeeper has no
way of performing a "bk unpull" if it auto-merges your uncommitted work;
there is no audit trail to use to unpull the work.

In order to complete the pull or push, the pending work in the destination
repository must be committed first.
$
#bugtemplate
BitKeeper Bug Report
--------------------

Please fill in the fields below as much as possible.  We parse this
automatically, so please follow the format guidelines.

Fields marked with [whatever] are single line fields.

The Description, Suggestions, and Contact sections can be multi line.

------------------------------------------------------------------------------

Bug/RFE:
	[a bug is obvious, RFE is a request for enhancement]

Severity:
	[5 - annoying, 1 - cannot use BitKeeper until this is fixed]

Priority:
	[5 - fix sometime, 1 - fix RIGHT NOW]

Program:
	[cset, co, delta, etc.  If you know which one caused the problem]

Release:
	#BKEXEC# bk version | head -1

OS:
	#BKEXEC# uname -a

Synopsis:
	[one line: i.e., sfiles dumps core when running on CP/M]

Description:
	Please tell us:
	- what you were doing
	- what happened
	- can you make it happen again, if so, how?
	- what you think went wrong
	- machine / OS / etc. on which the bug occurred
	- anything else that you think might be useful
	Take as much space as you need, but leave a blank line
	between this and the next field.

Suggestions:
	Any suggested fix is most welcome.
	Take as much space as you need, but leave a blank line
	between this and the next field.

Interest list:
	[emails of others who care about this like so: a@foo.com,b@foo.com]

Contact info:
	Your contact information here.
	A phone number and a time to call is useful if we need more
	information.
	You can also specify a preferred email address.
	Take as much space as you need, but leave a blank line between
	this and the ----- below.

------------------------------------------------------------------------------
$
#supporttemplate
BitKeeper Support Request
-------------------------

Please fill in the fields below as much as possible.  We parse this
automatically, so please follow the format guidelines.

Fields marked with [whatever] are single line fields.

The Description, Suggestions, and Contact sections can be multi line.

------------------------------------------------------------------------------

Program:
	[cset, co, delta, etc.  If you know which caused the problem]

Release:
	#BKEXEC# bk version | head -1

OS:
	#BKEXEC# uname -a

Synopsis:
	[one line: i.e., sfiles dumps core when running on CP/M]

Description:
	Please tell us what support you would like.
	In general, this is what helps us help you:
	- what you were doing
	- what happened
	- can you make it happen again, if so, how?
	- what you think went wrong
	- machine / OS / etc on which the bug occurred
	- anything else that you think might be useful
	Take as much space as you need, but leave a blank line
	between this and the next field.

Interest list:
	[emails of others who care about this like so: a@foo.com,b@foo.com]

Contact info:
	Your contact information here.
	A phone number and a time to call is useful if we need more
	information.
	You can also specify a preferred email address.
	Take as much space as you need, but leave a blank line between
	this and the ----- below.

------------------------------------------------------------------------------
$
#duplicate_IDs
You have two files with the same ID.  You must determine why,
and correct that situation before this ChangeSet can be created.
$
#undo_error

BitKeeper is unable to undo the requested changeset[s].  This is
usually because undoing the requested list of changesets would leave the
repository in an error state.  Please look at the error message below
and try to find a set of ChangeSets which will work.  The typical
problems are:

    - Removing a delta in the middle of the history which leaves
      a parent-less child delta.
    - The merge delta and a portion of a branch is deleted which
      leaves two open branches in the ChangeSet file.
    - Removing a delta which is included by another delta.

It is frequently helpful to look at the ChangeSet file using revtool to
get a feel for which changesets must be undone together to leave a clean
tree.

The error caused by this undo is:
$
#version
BitKeeper version is @version@
Options: #BKARG#
Built by: @builder@
Built on: @built_date@
$
#config_preamble
This is the BitKeeper configuration for this package.

Please take a minute to fill it out carefully, it needs to be accurate.
$
#config_setup
The setup program is used when creating the initial package stored 
in BitKeeper.  Running this tool will create the master repository.
You may do this exactly once for each package stored in BitKeeper.  

If this package is already stored somewhere in BitKeeper, get out
of this tool and do the following:

        bk clone package_dir my_workarea

instead.

$
#config_description

Name of the project, such as "BitKeeper" or "The GNU C compiler".

$
#config_category
$
#config_license

Enter the license information for BitKeeper here.

You can get a temporary license by sending a mail request to
sales@bitmover.com

$
#config_contact

Contact person for this project.  This is whoever is the person that
should be contacted with update information or contacted if BitKeeper
discovers a problem which requires local intervention.  Please make the
contact information accurate so we can support you.

$
#config_email

It is very important that this email address is filled out and accurate.

$
#config_compression

Default compression algorithm for stored s.files is gzip.
If you want no compression, set this to "none".

$
#config_autofix

Default is to autofix problems found by check.
If you want to manually fix them, set this to "no".

$
#config_template
description
license
licsign1
licsign2
licsign3
compression
autofix
contact
email
$
#warn_poly
Warning: this repository has been found to have deltas which
belong to multiple csets (not an error, but annoying).
This happens if a repository with uncommitted deltas is copied
and then committed in both copies.
Please use only 'bk clone <from> <to>' to copy a repository.
$
#reserved_name
BitKeeper is unable to create a file with the following path name:
        #BKARG#
This usually happens if your path name contains a reserved name used on
the destination file system.  Known reserved names for FAT/NTFS/Samba/CIFS
file system are as follows:
        "aux", "con", "prn", "nul", "lpt?", "?:"
Please rename the file and retry (see also "bk helptool mv")
Note: You must perform the rename in the sending repository.
$
#setuptool_step_BadUser
You are logged in as '#BKARG#'. You may not create repositories when
logged in as Administrator or root. Please log in as another user
before trying to create a repository.
$
#setuptool_step_Begin
You are about to create a new repository. Creating a new repository is
something which is done if the data which you wish to manage is not
already under BitKeeper control in a different repository. If there
already is a BitKeeper repository for this package, you should do the 
following:

bk clone package_dir my_package_dir

If you create a new repository rather than cloning a copy you will not
be able to exchange work between the existing and new repositories.
In other words, a repository is set up only once; after that you use
bk clone to get a copy of the repository


If you are ready to create a new BitKeeper repository, press Next.
$
#setuptool_step_EndUserLicense
Please take a moment to read the license agreement now. If you accept 
the terms below, click "I Agree", then "Next". Otherwise click Cancel.
$
#setuptool_step_LicenseKey
Please enter the license key and signatures exactly as they were given to
you.

If the license keys are in a file, click the "From file..." button and the 
values will be extracted from the file. This should work even if the file 
has mail headers or other text, and it is the easiest way to ensure the keys 
are entered properly.
$
#setuptool_step_RepoInfo
The following information uniquely identifies this repository. The fields
highlighted in blue are required to be non-empty.
$
#setuptool_step_ContactInfo
The following information is optional.
$
#setuptool_step_Finish
There is now enough information to create the repository. Please review the 
following information. If it is correct, press the Finish button to create 
your repository.

The config file that is created will be saved as a standard revision controlled
file at BitKeeper/etc/config; it can be edited later to make changes. See the
config-etc man page for detailed information on the format and options that
are supported. 
$
#setuptool_step_KeywordExpansion
BitKeeper can automatically expand SCCS or RCS keywords in files when they are 
checked out in read-only mode. This feature is off by default, but you can
change this behavior by selecting the expansion options that best meet your 
needs.

Select the "sccs" and/or "rcs" options to have the appropriate
keywords expanded. In addition, you can select "expand1" to mean you
only want keywords to be expanded in the first line that contains
keywords. This helps avoid conflicts with printf statements or other
code that may contain strings that look like keywords.
$
#setuptool_step_CheckoutMode
By default, working files will not be visible in a repository until they
are checked out by you.  You can modify this behavior by defining the
checkout mode.

A value of "get" will cause a "bk co <file>" command to be executed
automatically after each checkin, causing the file to be checked out in
read-only mode.  Use this mode if you depend on expanded keywords.

A value of "edit" will prevent a checkin from removing the editable
version of the file so that there is always an editable version of
the file.  Note that keywords are not expanded in this mode.

A value of "none" will clear the working file from the repository after a
"bk ci".   Use this mode if your repository has some files which do not
need to be checked out all the time, or if you use make(1) to build your
tree, make will check out the files for you as needed.
$
#setuptool_step_Compression
By default, when you set up a repository the files in the repository are
compressed. If you do not wish for the s.files in your repository to be 
compressed you may turn this feature off by selecting "none".
$
#setuptool_step_Autofix
The bk check command can automatically fix a number of problems found
in a repository. By default this feature is turned on when a repository
is created. To turn this feature off select the value "no", in which case
the bk check command will not attempt to automatically fix problems it
detects.
$
#setuptool_invalid_license
The license key or license signatures are invalid. 
Please check the values that you entered. If you 
continue to have problems please contact BitKeeper 
support at support@bitkeeper.com.

$
#bitkeeper.init
#!/bin/sh
#
# chkconfig: 2345 24 84
# description: BitKeeper server for work

# Source networking configuration.
if [ -f /etc/sysconfig/network ]
then	. /etc/sysconfig/network

	# Check that networking is up.
	[ ${NETWORKING} = "no" ] && exit 0
fi
[ -x /usr/bin/bk ] || exit 0
VAR=/var/bitkeeper

case "$1" in
    start_msg)	echo "Start BitKeeper daemons"
		;;
    stop_msg)	echo "Stop BitKeeper daemons"
		;;
    restart)	$0 stop
		$0 start
		;;
    start)	cd $VAR || exit 1
		test -f repositories || {
			echo Nothing advertised
			exit 0
		}
		while read user dir opts
		do	(
			cd $dir || exit 1
			F=`basename $dir`
			CMD="bk bkd -d $opts -l$VAR/log.$F -P$VAR/pid.$F"
			su -c "$CMD" $user 2>> $VAR/errors
			echo Started $CMD in $dir as $user
			)
		done < repositories
	    	;;

    stop)	
		cd $VAR || exit 1
		echo Shutting down BitKeeper daemons
		for i in pid.*
		do	kill `cat $i`
			rm $i
		done
		;;

    status)	cd $VAR || exit 1
		for i in pid.*
		do	echo This pid should be running: `cat $i`
		done
		ps -axf | grep bkd
		
		;;

    *)		echo "Usage: bitkeeper {start|stop}"
    		exit 1
		;;
esac

exit 0
$
#bkl_new_preamble
In order to use the BitKeeper software, you must accept the BitKeeper
Commercial license.  This license grants you specific rights and also
contains various restrictions.  Please read the license carefully,
it is a contract and you must abide by the terms.

Your acceptance will be recorded on this machine and you will not be
asked again during the term of this license.
$
#bkl_upgrade_preamble
The BitKeeper license required for the use of this repository has changed
and you need to accept the new version in order to make changes in this
repository.  Your acceptance will be recorded on this machine and you will
not be asked again.
$
#repo_new_preamble
In order to use BitKeeper in this repository, you need to accept the
associated Repository license.  The Repository license is part of the
the repository and it is a condition of the BitKeeper license that you
agree with the Repository license.  Please read the license carefully,
it is a contract and you must abide by the terms.  Your acceptance will
be recorded on this machine and you will not be asked again.

This license was associated with this repository by the party who
initially created the repository.  Unless BitMover, Inc. created this
repository, this license was not written by BitMover and BitMover is
not responsible for the content of the license.
$
#repo_upgrade_preamble
The Repository license associated with the use of this repository has
changed and you need to accept the new version in order to make changes in
this repository.  Your acceptance will be recorded on this machine and you
will not be asked again.
$
#missing-key-sig
This repository is configured to use a commercial license 
	#BKARG#
but does not contain a license key signature in
the BitKeeper config key: licsign1.
Please contact BitMover to get a valid license signature.
BitMover can be reached at:
   +1-408-370-9911 (international and California)
   888-401-8808 (toll free in the US & Canada) 
during business hours (PST) or via email at sales@bitmover.com.
Thanks!
$
#invalid-key-sig
The configured license key signature for the current repository
doesn't match the current license key: #BKARG#

The config variables should look like

license: #BKARG#
licsign1: long string of characters
licsign2: long string of characters
licsign3: long string of characters

A possible cause of this problem is a cut and paste error when adding
those signatures to the config file or BK_CONFIG environment variable.
$
#lease_nonet
Unable to fetch a new license from #BKARG#
Either that server is not responding or you have a network
problem.

Look at 'bk help url' if you need to tell 'bk' about a proxy.
$
#lease_unsupported_version
The version of BK that you are currently using (#BKARG#) is no
longer supported by your license server.  Please use 'bk upgrade'
to obtain the latest version of BitKeeper.
$
#lease-other-error
The error code returned from BitKeeper was:
	#BKARG#
Please send mail to support@bitmover.com to request assistance.
$
#timesync
The time on the local machine is out of sync with your license server.
Please verify the time on your computer and that the timezone is set
correctly and try again.
$
#lease-eval-limit
You are using an evaluation license and it appears that you have  
reached the usage limit allowed for this license.  To continue  
your work you will need a commercial license.  Please contact  
sales@bitmover.com
$
#bkd-err-nolease
The remote BitKeeper daemon was unable to obtain a valid license for
this operation.
$
#bkd-err-other
The remote BitKeeper daemon for this connection had an error.
The error code returned from BitMover was:
	#BKARG#
Please send email to support@bitmover.com for assistance.
$
#gui-support-submitter
Please enter your valid email address here so we can reach you
to provide support.
$
#gui-support-summary
One line: i.e., "sfiles dumps core when running on CP/M"
$
#gui-support-program
cset, co, delta, etc -- if you are having problems with a specific one
$
#gui-support-os
On what operating system did the problem occur?
$
#gui-support-release
What release of bitkeeper do you have installed?
$
#gui-support-description
Please tell us:
    - What you were doing.
    - What happened.
    - Can you make it happen again. If so, how?
    - What you think went wrong.
    - Anything else that you think might be useful
$
#gui-support-interest
Email addresses of others who care about this problem.
If more than one, then as a comma separated list, such as:
user1@mywork.com,user2@mywork.com
$
#gui-support-attachment
Please attach any files that may help responding to your request.
$
#gui-support-projemail
Email address where to send this support request.
$
#gui-support-project
For what project is support being requested?
$
#gui-support-help
Please fill in all the fields that you can. You may use the TAB key
to move between fields. As you move to each field this help window
will change to describe what it is that you should put in the field.
Some fields are automatically filled in and may not be editable, but
are displayed so you can see what will be sent to BitMover.
Required fields may appear with a different background color.
$
#gui-bug-type
The two choices are: Bug or Request for Enhancement
$
#gui-bug-severity
5 - annoying. 1 - cannot use BK until this is fixed
$
#gui-bug-priority
5 - fix sometime. 1 - fix RIGHT NOW
$
#gui-bug-program
cset, co, delta, etc. If you know which cause the problem
$
#gui-bug-suggestion
Any suggested fix is most welcome. Take as much space as you need.
$
#gui-bug-projemail
Email address where to send this bug submission.
#gui-bug-project
For what project is this bug being submitted?
$
#gui-bug-attachment
Please enter the path of a file that will be attached to the bug report.
You can either type the path, or use the button to the right of the field
to select the file using a standard file open dialog. 

You can only attach one file to the bug report. Attaching directories or
symbolic links is not supported.
$
#unrelated_repos
You are trying to synchronize with an unrelated package.
Please check the names and try again.
$
#no_repo
You are trying to synchronize with directory that does not contain a
BitKeeper repository, it is empty.  Please check the names and try again.
$
#missing_dfile
check: #BKARG# has pending deltas but no d.file, please fix by running

    "bk -R sfiles -P"

$
#missing_rsh
Cannot find #BKARG#.

The programs rsh/ssh are not bundled with the BitKeeper distribution.
The recommended way for transferring BitKeeper files on Windows is via the
bkd daemon.  If you have a bkd daemon configured on the remote host, try

    bk push/pull bk://HOST:PORT

If you prefer to transfer BitKeeper files via a rsh/ssh connection,
you can install the rsh/ssh programs separately.  Please note that the
rsh command bundled with Windows NT is not compatible with Unix.
$
#unknown_proxy
Unknown proxy entry: "#BKARG"
If this is a legal proxy entry please file a bug report.
$
#http_delay
Note: since httpd batches a large block of output together before it
sends back a reply, this can take a while, please wait...
$
#win_trailing_dot
#BKARG#:
warning: trailing dot in file name will be stripped by the Windows
file system.
$
#file_dir_conflict
File/directory conflict: #BKARG#1#
The name above is both a #BKARG#2# and a revision controlled file.
The revision controlled file can not be checked out because the #BKARG#2#
is where the file wants to be.  To correct this, either 
    move the #BKARG#2# to a different name
or
    remove the revision controlled file #BKARG#1# with "bk rm"
or
    move the revision controlled file to someplace else with "bk mv".
$
#case_conflict
Sfio has detected a name conflict between the following files:
    #BKARG#1#
    #BKARG#2#
This usually happens when you transfer a file from a case-sensitive file
system (e.g. Unix) to a case insensitive file system (e.g FAT, NTFS)
Please rename one of the files and retry (see also "bk helptool mv")
Note: You must do the rename (bk mv) in the sending repository.
$
#read_locked
WARNING: process #BKARG#1# is exiting and it has left the repository at
#BKARG#2# read locked.
This is the result of a process that has been killed or is a bug.
The stale lock will be removed.
$
#write_locked
ERROR: process #BKARG#1# is exiting and it has left the repository at
#BKARG#2# write locked.
This is the result of a process that has been killed or is a bug.
$
#symlink
You are attempting to create this symlink on a win32 file system:
#BKARG#
This file type is not supported on this platform.
$
#smerge_examples
Summary of bk smerge output formats
default		(3 way format (shows gca))
    <<<<<<< gca slib.c 1.642.1.6
    		  sc = sccs_init(file, INIT_NOCKSUM|INIT_SAVEPROJ, s->proj);
    		  assert(sc->tree);
    		  sccs_sdelta(sc, sc->tree, file);
    <<<<<<< local slib.c 1.645
    		  sc = sccs_init(file, INIT_NOCKSUM|INIT_SAVEPROJ, s->proj);
    		  assert(HASGRAPH(sc));
    		  sccs_sdelta(sc, sccs_ino(sc), file);
    <<<<<<< remote slib.c 1.642.2.1
    		  sc = sccs_init(file, INIT_NOCKSUM|INIT_SAVEPROJ, p);
    		  assert(sc->tree);
    		  sccs_sdelta(sc, sc->tree, file);
    >>>>>>>

-g	(Shows local and remove files as a diff from the GCA)
    <<<<<<< local slib.c 1.642.1.6 vs 1.645
    		  sc = sccs_init(file, INIT_NOCKSUM|INIT_SAVEPROJ, s->proj);
    -             assert(sc->tree);
    -             sccs_sdelta(sc, sc->tree, file);
    +             assert(HASGRAPH(sc));
    +             sccs_sdelta(sc, sccs_ino(sc), file);
    <<<<<<< remote slib.c 1.642.1.6 vs 1.642.2.1
    -             sc = sccs_init(file, INIT_NOCKSUM|INIT_SAVEPROJ, s->proj);
    +             sc = sccs_init(file, INIT_NOCKSUM|INIT_SAVEPROJ, p);
    		  assert(sc->tree);
    		  sccs_sdelta(sc, sc->tree, file);
    >>>>>>>

-2	(2 way format (like diff3))
    <<<<<<< local slib.c 1.645
    		  sc = sccs_init(file, INIT_NOCKSUM|INIT_SAVEPROJ, s->proj);
    		  assert(HASGRAPH(sc));
    		  sccs_sdelta(sc, sccs_ino(sc), file);
    <<<<<<< remote slib.c 1.642.2.1
    		  sc = sccs_init(file, INIT_NOCKSUM|INIT_SAVEPROJ, p);
    		  assert(sc->tree);
    		  sccs_sdelta(sc, sc->tree, file);
    >>>>>>>

-n	(newonly (like -2 except marks added lines))
    <<<<<<< local slib.c 1.642.1.6 vs 1.645
    		  sc = sccs_init(file, INIT_NOCKSUM|INIT_SAVEPROJ, s->proj);
    +             assert(HASGRAPH(sc));
    +             sccs_sdelta(sc, sccs_ino(sc), file);
    <<<<<<< remote slib.c 1.642.1.6 vs 1.642.2.1
    +             sc = sccs_init(file, INIT_NOCKSUM|INIT_SAVEPROJ, p);
    		  assert(sc->tree);
    		  sccs_sdelta(sc, sc->tree, file);
    >>>>>>>
$
#tp_changeset_exists
You are trying to create a ChangeSet file in a repository which already
has one.  This usually means you are trying to apply a patch intended
for a different repository.  You can find the correct repository by
running the following command at the top of each repository until you
get a match with the changeset ID at the top of the patch:

    bk -R prs -hr1.0 -nd':KEY:' ChangeSet

$
#tp_gone_error
File #BKARG#
is marked as gone in this repository and therefor cannot accept updates.
The fact that you are getting updates indicates that the file is not gone
in the other repository and could be restored in this repository.
if you want to "un-gone" the file(s) using the s.file from a remote
repository, try "bk repair <remote repository>"
$
#tp_noconflicts
takepatch was instructed not to accept conflicts into this tree.
Please make sure all pending deltas are committed in this tree,
resync in the opposite direction and then reapply this patch.
$
#tp_notfirst
takepatch: when creating a package, as you are currently doing, you need a
patch which includes all of the history.  Please try again, with one of

	bk makepatch -r.. 
or
	bk send -r.. user@host.com

takepatch has not cleaned up your destination, you need to do that.
$
#tp_ahead
takepatch: can't find parent ID
	#BKARG#1#
	in #BKARG#2#
This patch is ahead of your tree, you need to get an earlier patch first.
Look at your tree with a "bk changes" and do the same on the other tree,
and get a patch that is based on a common ancestor.
$
#tp_badpath
The location vs recorded location don't match.  The file is currently
here	"#BKARG#"
but has	"#BKARG#2#"
as its recorded pathname.  If the file is where you want it to be,
then update its name with the following command:

    bk edit #BKARG#
    bk ci -yRename #BKARG#

If the file should be in the other location then restore it to that
location by running 

    bk names #BKARG#

The patch has been saved in the PENDING directory and may be reapplied
after you fix the name problem.

$
#tp_nothingtodo
takepatch: nothing to do in patch, which probably means a patch version
mismatch.  You need to make sure that the software generating the patch is
the same as the software accepting the patch.  This typically means you 
need to upgrade the sending or receiving BitKeeper software.
$
#tp_noversline
takepatch: the version line in #BKARG# is missing
or does not match the format understood by this program.  You need to
make sure that the software generating the patch is the same as the
software accepting the patch.  This typically means you need to upgrade
the sending or receiving BitKeeper software.
$
#tp_badXsum
takepatch: patch checksum is invalid#BKARG#.
The patch was probably corrupted in transit, sometimes mailers do this.
Please get a new copy and try again.
$
#tp_uncommitted
takepatch: #BKARG# has uncommitted changes.
Please commit pending changes with "bk commit" and reapply the patch.
$
#no_pull_part1
Remote does not understand "pull_part1" command.  There are two
possible causes:
    a) Remote bkd has disabled "pull" command.
    b) We are talking to an old 1.x bkd.
If it is the former, talk to whoever owns that repository.
If it is the latter, upgrade to a more recent version of BitKeeper.
$
#upgrade_remote
You need to upgrade the version of BitKeeper in the remote repository, it
is so old it is no longer supported.
$
#restore_failed
Unable to complete the restore of your repository.  Please examine the 
list of errors above and figure out why it was not restored.  Once you
have corrected those errors, you may finish the restore by running 

    bk restore #BKARG#

$
#restore_checking
Your repository should be restored to its previous state.
We are running a full consistency check to verify this, please wait.
$
#restore_check_failed
The integrity check failed after the backup was restored.
This almost always means that the repository had a problem before
the previous operation (i.e., clone -r, undo, pull, resolve) started.
Please examine the error messages produced by check and see if you can
fix them.  If not, contact BitMover for technical support.
$
#case_folding
BitKeeper has detected a "Case-Folding file system". e.g. FAT and NTFS.
What this means is that your file system ignores case differences when it
looks for directories and files.  This also means that it is not possible
to rename a path correctly if there exists a similar path with only
upper/lower case differences.

BitKeeper wants update this file:
    #BKARG#
Your file system is changing the name as follows:
    #BKARG# -> #BKARG#2#
BitKeeper considers this an error, since this may not be what you have
intended.  The recommended work around for this problem is as follows:
a) Exit from this resolve session.
b) Run "bk mv" to move the directory or file with upper/lower case
   changes to a temporary location.
c) Run "bk mv" again to move from the temporary location to
   #BKARG#
d) Run "bk commit" to record the new location in a changeset.
e) Run "bk resolve" or "bk pull" again.
f) You should also inform owners of other repositories to avoid using 
   similar names.
$
#win32-mailer-error
Can not find a working mailer.

If you have access to a SMTP server, you can install the "blat" mailer
with the following command:

	blat -install <smtp_server_address> <your email address>

If you have a non-standard connection, you can supply a bk_mail.bat
file to connect BitKeeper to your mail server; the bk_mail.bat file
should accept the three auguments, as follows:

	bk_mail.bat file recipient subject

(recipient is a comma seperated list if there is more than one)

You should put the bk_mail.bat file in the BitKeeper directory.
The bk_mail.bat command should exit with status zero when the mail is
sent sucessfully.
$
#install-cygwin-upgrade
Thanks for installing BitKeeper.  We noticed that this was an upgrade
from an earlier version of BitKeeper.  Earlier versions of BitKeeper
required Cygwin (http://cygwin.com) and we did not uninstall Cygwin.

Versions 3.2.0 and later of Bitkeeper no longer require Cygwin in
order to function.  It is fine if Cygwin is left there, BitKeeper
doesn't need it but BK will work fine from a Cygwin shell.

We did not remove Cygwin as part of your upgrade because it is
common for people to have customized their Cygwin installation.
If you don't need or want Cygwin, the Cygwin documentation says that
you may remove Cygwin by manually removing the following items:

* The registry tree `Software\Cygnus Solutions' under
   HKEY_LOCAL_MACHINE and/or HKEY_CURRENT_USER .
* Anything under the Cygwin root folder, `C:\cygwin' by default.
* Anything created by setup in its temporary working directory.

For more information see http://cygwin.com/faq/faq0.html#SEC19
$
#bad-linux-kern-tree
This copy of the Linux Kernel tree contains a bad ChangeSet file that
needs to be repaired manually.  If at all possible please delete this
repository and clone a new copy.  Otherwise contact BitMover and
request assistance.
$
#upgrade-badperms
The current user does not have permissions to replace the version of
BitKeeper installed at:
	#BKARG#
Please rerun the upgrade command from an account with the needed
permissions.
$
#upgrade-require-license
The bk upgrade process requires a valid commercial license.
Please chdir to a repository setup with a current commercial license
and then repeat this upgrade command.
$
#upgrade-nomsys
The upgrade command may not be run from an Msys shell, the removal of the
existing BitKeeper will fail.  Please try again from a command shell.
$
#upgrade-install-other-platform
If the upgrade command is given the -a option to request the binary
for another architecture, then it cannot also be given the -i option to
install that binary.
$
#license-restricted
A license request was rejected by the license server.

If this error occurs in 'bk upgrade' you may be attempting to fetch a release
with a limited distribution.

Please send mail to support@bitmover.com to request assistance.
$
#comments-badfmt
Illegal format for input to the 'bk comments' command.  Lines should
match this format:
   ### Comments for <file1>|<rev1>
   New comments

   ### Comments for <file2>|<rev2>
   Other changes
$
#license-invalid-bkl5
#license-parse
The license used by this repository is not valid.
	#BKARG#

Please contact BitMover at sales@bitmover.com and request assistance.
$
#missing_parent
This repository has no parent.  You must set a parent with "bk parent" or
specify a repository on the command line for this command to work.
$
#no-pull-dash-r
pull: remote version of BitKeeper is not capable of
responding to the '-r' option.  Either upgrade the
remote version of BitKeeper, or use:
  bk clone -r<rev> <remote-URL> <local-temp-repo>
  bk pull <local-temp-repo>
$
