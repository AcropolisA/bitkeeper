# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2000 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.

# Copyright (c) 2004 Larry McVoy
# %K%

test -d "$HERE/home" || mkdir "$HERE/home"
export BK_TEST_HOME="$HERE/home"
OUT="$HERE/out"
RC="`bk dotbk`/diff.rc"

echo $N Simple startup with no args and nothing to diff..............$NL
commercial project
    bk guitest difftool >"$OUT" 2>&1 <<'EOF'
    test_buttonPress Quit
    test_die 99
EOF
err=$?
test "X$PLATFORM" != XWIN32 && {
	expected='There were no files available to diff' 
	grep -q "$expected" "$OUT" || {
		echo failed
		echo "expected: '$expected'"
		echo "  actual: '`cat "$OUT"`'" 
		exit 1 
	}
}
if [ $err -ne 0 ]; then echo failed; echo "exited $err expected 0"; exit 1; fi
echo OK

# this tests that the gui properly creates the rc file.
# this requires that there's something to diff since the tool doesn't
# save the prefs unless the GUI fully starts up.
echo $N Create dotbk/diff.rc ........................................$NL
test -f "$RC" && rm -f "$RC"
echo "this is file 1" > file1
echo "this is file 2" > file2
bk guitest difftool file1 file2 >"$OUT" 2>&1 <<'EOF'
    test_buttonPress Quit
    test_die 99
EOF
err=$?
if [ $err -ne 0 ]; then echo failed; echo "exited $err expected 0"; exit 1; fi
test -f "$RC" || (echo ".rc wasn't created" ; exit 1; )
echo "OK"

echo $N Proper count of diffs and files when there is only 1.........$NL
bk guitest difftool file1 file2 >"$OUT" 2>&1 <<'EOF'
    global diffCount
    set files [.menu.fmb cget -text]
    puts "$files diffCount=$diffCount"
    test_buttonPress Quit
    test_die 99
EOF
err=$?
if [ $err -ne 0 ]; then echo failed; echo "exited $err expected 0"; exit 1; fi
expected='Files (1) diffCount=1'
grep -q "$expected" "$OUT"
if [ $? -ne 0 ]; then 
    echo failed
    echo "expected: '$expected'"
    echo "  actual: '`cat "$OUT"`'" 
    exit 1 
fi
echo "OK"

if [ "$PLATFORM" = "WIN32" ]; then
	echo $N Testing windows path in command line.........................$NL
	cd "$HERE"/project
	echo "some stuff" > afile
	bk new $Q afile
	bk commit $Q -ycomment
	WINFILE=$(bk pwd -w "`pwd`")\\afile
	BKFILE=$(bk pwd "`pwd`")/afile
	bk difftool "$WINFILE" >GOT 2>&1
	err=$?
	if [ $err -ne 1 ]; then
	    echo failed
	    echo "exited $err; expected 1"
	    exit 1
	fi
	echo "$BKFILE is the same as the checked in version." > WANT
	cmpfiles WANT GOT
	echo OK

	echo $N Testing windows path from stdin..............................$NL
	cd "$HERE"/project
	WINFILE=$(bk pwd -w "`pwd`")\\afile
	BKFILE=$(bk pwd "`pwd`")/afile
	echo "$WINFILE" | bk difftool - >GOT 2>&1
	err=$?
	if [ $err -ne 1 ]; then
	    echo failed
	    echo "exited $err; expected 1"
	    exit 1
	fi
	echo "$BKFILE is the same as the checked in version." >WANT
	cmpfiles WANT GOT
	echo OK
fi
