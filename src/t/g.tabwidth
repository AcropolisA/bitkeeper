# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2000 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.

# Copyright (c) 2004 Larry McVoy
# %K%

test -d $HERE/home || mkdir $HERE/home
export BK_TEST_HOME=$HERE/home
OUT=$HERE/out
CONFIG=`bk dotbk`/config-gui

echo $N Create initial repository ...................................$NL
commercial project
if [ ! -d BitKeeper/etc ]; then echo failed to make BitKeeper/etc; exit 1; fi
if [ ! -f SCCS/s.ChangeSet ]; then echo failed to make ChangeSet; exit 1; fi
P=`bk pending | wc -l`
if [ $P -ne 0 ]; then echo files are pending; bk pending; exit 1; fi
echo OK


# unfortunately we can't test that setting -tabwidth actually affects
# the display, but we can at least test that the gc value is getting
# passed on to the widgets
echo $N 'Sanity check that gc(tabwidth) affects text widgets..........'$NL
mkdir $HERE/project/src
cd $HERE/project/src
echo 'set gc(tabwidth) 4' > $CONFIG
bk guitest helptool >$OUT 2>&1 <<'EOF'
    # get text widget and test that its tabwidth is set appropriately
    text .testwidget
    if {[catch {set tabwidth [.testwidget cget -tabwidth]} error]} {
	puts "tk doesn't support -tabwidth option ($error)"
	exit 1
    }
    puts "tab width: $tabwidth"
    exit 0
EOF
expected='tab width: 4' 
grep -q "$expected" $OUT
if [ $? -ne 0 ]; then 
    echo failed
    echo "expected: '$expected'"
    echo "  actual: '`cat $OUT`'" 
    exit 1 
fi
echo "OK"

echo $N Tool-specific setting overrides global setting...............$NL
echo 'set gc(tabwidth) 4' > $CONFIG
echo 'set gc(help.tabwidth) 6' > $CONFIG
bk guitest helptool >$OUT 2>&1 <<'EOF'
    # get text widget and test that its tabwidth is set appropriately
    if {[catch {set tabwidth [.text.help  cget -tabwidth]} error]} {
	puts "tk doesn't support -tabwidth option"
	exit 1
    }
    puts "tab width: $tabwidth"
    exit 0
EOF
expected='tab width: 6' 
grep -q "$expected" $OUT
if [ $? -ne 0 ]; then 
    echo failed
    echo "expected: '$expected'"
    echo "  actual: '`cat $OUT`'" 
    exit 1 
fi
echo "OK"

