# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2000 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.

# Copyright (c) 2004 Larry McVoy
# %K%


test -d $HERE/home || mkdir $HERE/home
export BK_TEST_HOME=$HERE/home
export BK_LICENSE=ACCEPTED

echo $N Create test data ............................................$NL
no_logging project
if [ ! -d BitKeeper/etc ]; then echo failed to make BitKeeper/etc; exit 1; fi
if [ ! -f SCCS/s.ChangeSet ]; then echo failed to make ChangeSet; exit 1; fi
mkdir $HERE/project/src
cd $HERE/project/src
cat >file1 <<EOF
1: this is file1
2: this is part of the original file
3: this is part of the original file
4: this is part of the original file
5: this is part of the original file
6: this is part of the original file
7: this is part of the original file
EOF
cat >file2 <<EOF
1: this is file2
2: this is part of the original file
3: this is part of the original file
4: this is part of the original file
5: this is part of the original file
6: this is part of the original file
7: this is part of the original file
EOF
bk ci $Q -i file1 file2
bk commit $Q -y"initial checkin"
if [ ! -f SCCS/s.file1 ]; then echo failed to create history; exit 1; fi
# create clones
cd $HERE
bk clone $Q $HERE/project $HERE/remote
bk clone $Q $HERE/project $HERE/local
# introduce conflicts
cd $HERE/remote/src
bk get $Q -e file1
cat >file1 <<EOF
1: this is file1
2: this has changed in the remote project
3: this has changed in the remote project
4: this is part of the original file
   this has been added in the remote project
   this has been added in the remote project
5: this is part of the original file
6: this has changed in both the local and remote project
7: this is part of the original file
EOF
bk ci $Q -y"introduced conflicts" file1
bk commit $Q -y"introduced conflicts in file1"
cd $HERE/local/src
bk get $Q -e file1
cat >file1 <<EOF
1: this is file1
2: this has changed in the local project
3: this is part of the original file
4: this is part of the original file
5: this is part of the original file
6: this has changed in both the local and remote project
7: this is part of the original file
EOF
bk ci $Q -y"introduced conflicts" file1
bk commit $Q -y"introduced conflicts in file1"
# pushing remote changes to parent
cd $HERE/remote
bk push $Q
# pulling changes to local
cd $HERE/local
bk pull $Q 2>pull.err
if [ ! -d RESYNC ]; then echo failed to create RESYNC directory; exit 1; fi
echo OK

echo $N "Starting fm3tool interactively; you must quit manually.......$NL"
cd $HERE/local/RESYNC
bk fm3tool -f 1.1.1.1 1.1 1.2 src/file1
echo OK

echo $N Boundary bug - left click on left block, then type s.........$NL
# Need a license to get smerge to do its thing
cd $HERE
cat - <<EOF > c
logging: none
description: BitKeeper Test repository
email: nobody@nowhere.bk
license: $BKL_PRO
licsign1: $BKL_P1
licsign2: $BKL_P2
licsign3: $BKL_P3
EOF
bk setup -f -cc boundary
cd boundary
# 1.1 of foo
cat - <<'EOF' > foo
orig line
EOF
bk new $Q foo
# 1.2
bk edit $Q foo
cat - <<'EOF' > foo
left click on this line, then type s
orig line
EOF
bk delta $Q -y1.2 foo
# 1.1.1.1 - simple replace line
bk _get $Q -er1.1 foo
cat - <<'EOF' > foo
replaced line
EOF
bk delta $Q -y1.1.1.1 foo
# 1.3 - same patch as 1.1.1.1
bk edit $Q foo
cat - <<'EOF' > foo
left click on this line, then type s
replaced line
EOF
bk delta $Q -y1.3 foo
# "merge" and run fm3tool - fails in bk-3.2.4
bk edit $Q -M1.1.1.1 foo
bk fm3tool -f 1.3 1.1 1.1.1.1 foo
bk get $Q foo
cat - <<'EOF' > WANT
left click on this line, then type s
replaced line
EOF
bk undos < foo > GOT
checkfiles WANT GOT
echo OK
