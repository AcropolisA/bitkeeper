# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2000 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.

# Copyright (c) 2004 Larry McVoy
# %K%


test -d "$HERE/home" || mkdir "$HERE/home"
export BK_TEST_HOME="$HERE/home"
export BK_LICENSE=ACCEPTED

echo $N Create initial repository ...................................$NL
commercial project
if [ ! -d BitKeeper/etc ]; then echo failed to make BitKeeper/etc; exit 1; fi
if [ ! -f SCCS/s.ChangeSet ]; then echo failed to make ChangeSet; exit 1; fi
P=`bk pending | wc -l`
if [ $P -ne 0 ]; then echo files are pending; bk pending; exit 1; fi
echo OK

echo $N Create some data ............................................$NL
mkdir "$HERE/project/src"
cd "$HERE/project/src"
perl -e '
for ($i = 1; $i <= 400; $i++) {
    printf "%3s: this is part of the original file\n", $i;
}' > file1
bk ci $Q -i file1
bk commit $Q -y"initial checkin"
if [ ! -f SCCS/s.file1 ]; then echo failed to create history; exit 1; fi
# create clones
cd "$HERE"
bk clone $Q "$HERE/project" "$HERE/remote"
bk clone $Q "$HERE/project" "$HERE/local"
# introduce conflicts
cd "$HERE/remote/src"
bk get $Q -e file1
# There's no science here; I just played around until I got a jumbled mess
sed '4s/this.*/expect to see a conflict through line 10/;
5,10s/this.*$/this was changed in the remote/;
29s/this.*/expect to see a conflict through line 45/;
30,45s/this.*$/this was changed in the remote/;
70s/this.*/this is a single line change in the remote/;
75s/this.*/this was changed in the remote/;
76s/this.*/this was changed in the remote/;
77i\
     this was added in the remote\
     this was added in the remote\
     this was added in the remote\
     this was added in the remote\
     this was added in the remote\
     this was added in the remote\
     this was added in the remote;
99s/this.*/expect to see a conflict through line 175/;
100,175s/this.*$/this was changed in the remote/;
300,310s/this.*$/this was changed in the remote/;
' file1 > tmp
mv tmp file1
bk ci $Q -y"introduced conflicts" file1
bk commit $Q -y"introduced conflicts in file1"
cd "$HERE/local/src"
bk get $Q -e file1
sed '4s/this.*/expect to see a conflict through line 10/;
5,10s/this.*$/this was changed in the local/;
29s/this.*/expect to see a conflict through line 45/;
30,45s/this.*$/this was changed in the local/;
70s/this.*/this is a single line change in the local/;
75s/this.*/this was changed in the local/;
76i\
     this was added in the local\
     this was added in the local\
     this was added in the local\
     this was added in the local\
     this was added in the local\
 76: this is part of the original file\
     this was added in the local;
77i\
     this was added in the local\
     this was added in the local\
     this was added in the local\
     this was added in the local;
76s/this.*/this was changed in the local/;
99s/this.*/expect to see a conflict through line 175/;
100,175s/this.*$/this was changed in the local/' file1 > tmp
mv tmp file1
bk ci $Q -y"introduced conflicts" file1
bk commit $Q -y"introduced conflicts in file1"
# pushing remote changes to parent
cd "$HERE/remote"
bk push $Q
# pulling changes to local
cd "$HERE/local"
 bk pull $Q -s 2>pull.err
if [ ! -d RESYNC ]; then echo failed to create RESYNC directory; exit 1; fi
echo OK

echo $N "Starting fm3tool interactively; you must quit manually.......$NL"
cd "$HERE/local/RESYNC"
bk fm3tool -geometry 800x600 -o merge.raw -f -l1.1.1.1 -r1.2 src/file1
echo OK

echo $N Boundary bug - left click on left block, then type s.........$NL
# Need a license to get smerge to do its thing
cd "$HERE"
cat <<EOF > c
logging: none
description: BitKeeper Test repository
email: nobody@nowhere.bk
license: $BKL_PRO
licsign1: $BKL_P1
licsign2: $BKL_P2
licsign3: $BKL_P3
EOF
bk setup -f -cc boundary
cd boundary
# 1.1 of foo
cat <<'EOF' > foo
orig line
EOF
bk new $Q foo
# 1.2
bk edit $Q foo
cat <<'EOF' > foo
left click on this line, then type s
orig line
EOF
bk delta $Q -y1.2 foo
# 1.1.1.1 - simple replace line
bk _get $Q -er1.1 foo
cat <<'EOF' > foo
replaced line
EOF
bk delta $Q -y1.1.1.1 foo
# 1.3 - same patch as 1.1.1.1
bk edit $Q foo
cat <<'EOF' > foo
left click on this line, then type s
replaced line
EOF
bk delta $Q -y1.3 foo
# "merge" and run fm3tool - fails in bk-3.2.4
bk edit $Q -M1.1.1.1 foo
bk fm3tool -f -l1.3 -r1.1.1.1 foo
bk get $Q foo
cat <<'EOF' > WANT
left click on this line, then type s
replaced line
EOF
bk undos < foo > GOT
checkfiles WANT GOT
echo OK
