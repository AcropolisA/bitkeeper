# alias -- read and write the aliasdb

echo $N Test default alias setup ....................................$NL
nested project
# That gives us gcc and gdb
# and a default alias in the db defined to all
echo default > WANT
bk alias > GOT
cmpfiles WANT GOT
# 
echo all > WANT
bk alias default > GOT
cmpfiles WANT GOT
echo OK

echo $N Test illegal entries for alias in the list command ..........$NL
# bad name - start with alpha, only alphanumeric, +, -, _, = (why '=' ?)
bk alias '8foo' 2> ERR && exit 1
grep -q "alias: invalid alias name: 8foo" ERR || exit 1
bk alias "foo#" 2> ERR && exit 1
grep -q "alias: invalid alias name: foo#" ERR || exit 1
# valid but non-existent alias
bk alias foo 2> ERR && exit 1
grep -q "alias: no alias: foo" ERR || exit 1
# valid keyword, but not valid key 
bk alias all 2> ERR && exit 1
grep -q "alias: use -e when expanding reserved alias; all" ERR || exit 1
echo OK

echo $N Test showing keys with the list command .....................$NL
bk log -r1.0 -nd:KEY: gcc/ChangeSet gdb/ChangeSet | bk _sort > WANT
bk alias -ek all > GOT
cmpfiles WANT GOT
bk alias -ek default > GOT
cmpfiles WANT GOT
(echo gcc; echo gdb) | bk alias -ek - > GOT
cmpfiles WANT GOT
bk log -r1.0 -nd:MD5KEY: gcc/ChangeSet gdb/ChangeSet | bk alias -ek - > GOT
cmpfiles WANT GOT
cd gcc
bk alias -ek .  > ../GOT
bk alias -ek ../gdb >> ../GOT
cd ..
cmpfiles WANT GOT
bk alias -ek 'g*' > GOT
cmpfiles WANT GOT
echo OK

echo $N Test showing paths with the list command ....................$NL
printf "./gcc\n./gdb\n" > WANT
bk alias -e all > GOT
cmpfiles WANT GOT
bk alias -e default > GOT
cmpfiles WANT GOT
(echo gcc; echo gdb) | bk alias -e - > GOT
cmpfiles WANT GOT
bk log -r1.0 -nd:MD5KEY: gcc/ChangeSet gdb/ChangeSet | bk alias -e - > GOT
cmpfiles WANT GOT
cd gcc
bk alias -e .  > ../GOT
bk alias -e ../gdb >> ../GOT
cd ..
cmpfiles WANT GOT
bk alias -e 'g*' > GOT
cmpfiles WANT GOT
echo OK

echo $N Show that changing an alias in HERE will populate ...........$NL
cd "$HERE"
bk clone -l $Q project copy3
cd copy3
bk alias new $Q STUFF gdb
test -d gcc || fail
bk alias set $Q DEFAULT STUFF
test -d gcc && fail
echo OK

echo $N Show that we can change set HERE to empty ...................$NL
bk here set $Q || fail
test `bk comps -h | wc -l` -eq 0 || fail
echo OK

echo $N And show default can be empty ...............................$NL
bk alias set $Q DEFAULT || fail
bk clone $Q . ../copy4 || fail
cd ../copy4
test `bk here` = "default" || fail
test `bk comps -h | wc -l` -eq 0 || fail
echo OK

echo $N Show that a failed update to aliases reverts changes ........$NL
cd "$HERE/project"
bk portal $Q -r || fail
bk here set $Q DEFAULT || fail
bk alias set $Q DEFAULT 2> ERR && fail -f ERR should have failed
grep -q "No other sources for gcc known" ERR || fail -f ERR
bk -r check -ac || fail
echo OK

echo $N Local edits in alias file can be queried ....................$NL
bk edit $Q BitKeeper/etc/aliases || fail
(cd gcc; echo @FOO; bk id) >> BitKeeper/etc/aliases
cp BitKeeper/etc/aliases SAVE
bk alias FOO > GOT || fail
cat <<EOF > WANT
./gcc
EOF
cmpfiles GOT WANT
test `bk sfiles -gc` = "BitKeeper/etc/aliases" || fail
cmpfiles SAVE BitKeeper/etc/aliases
echo OK

echo $N New aliases are blocked with local edits ....................$NL
bk alias new BAR ./gcc 2>ERR && fail -f ERR should have failed
cat <<EOF > WANT
alias: local edits in BitKeeper/etc/aliases
EOF
cmpfiles ERR WANT
test `bk sfiles -gc` = "BitKeeper/etc/aliases" || fail
cmpfiles SAVE BitKeeper/etc/aliases
echo OK
