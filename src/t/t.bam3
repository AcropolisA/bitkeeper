# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2007 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.

#export _BK_TCP_CONNECT_FAIL=1

echo $N Create initial repository ...................................$NL
for f in 1 2 3 4 5 6 7 8 9
do	echo $f > F$f
	perl -e 'printf "a\000b\n"' >> F$f
done
commercial pmaster
bk bam server $Q . || exit 1
echo OK

echo $N Create some binary data and check BAM .......................$NL
cp "$HERE"/F1 bin.data
bk new $Q bin.data
cp ../F1 copy
bk new $Q copy
bk commit $Q -ybindata
test -d BitKeeper/BAM || exit 1
echo OK

echo $N Make sure that clone copies the BAM pool ....................$NL
cd "$HERE"
bk clone $Q -Bnone pmaster clone
cd clone
(cd ../pmaster && find BitKeeper/BAM -type f -print ) |
while read x
do	test -f $x || echo $x is missing
done > OUT 2>&1
for i in BitKeeper/log/BAM.index BitKeeper/log/BAM
do	test -f $i || echo $i
done >> OUT
test -s OUT && {
	echo failed
	cat OUT
	exit 1
}
echo OK

echo $N Make sure that clone w/ server does not copy BAM pool .......$NL
cd "$HERE"
bk clone $Q pmaster clone2
cd clone2
(cd ../pmaster && find BitKeeper/BAM -type f -print ) |
while read x
do	test -f $x && echo $x is present
done > OUT 2>&1
for i in BitKeeper/log/BAM
do	test -f $i || echo $i is not present
done >> OUT
test -s OUT && {
	echo failed
	cat OUT
	exit 1
}
echo OK

echo $N Make sure that clone w/ diff server does not copy BAM pool ..$NL
cd "$HERE"
BK_CONFIG="BAM_server:file://$HERE/clone" bk clone $Q pmaster clone3
cd clone3
(cd ../pmaster && find BitKeeper/BAM -type f -print ) |
while read x
do	test -f $x && echo $x is present
done > OUT 2>&1
for i in BitKeeper/log/BAM
do	test -f $i || echo $i is not present
done >> OUT
test -s OUT && {
	echo failed
	cat OUT
	exit 1
}
echo OK

if false
then
(cd "$HERE" && tar czf /tmp/TGZ .)
# This can't work, the env var makes it a shared server case.
echo $N Make sure that clone w/ empty server copies BAM pool ........$NL
cd "$HERE"
BK_SHOWPROC=YES BK_CONFIG="BAM_server:file://$HERE/clone2!" bk clone $Q pmaster clone4
cd clone4
(cd ../pmaster && find BitKeeper/BAM -type f -print ) |
while read x
do	test -f $x || echo $x is missing
done > OUT 2>&1
for i in BitKeeper/log/BAM.index BitKeeper/log/BAM
do	test -f $i || echo $i
done >> OUT
test -s OUT && {
	echo failed
	cat OUT
	find BitKeeper -type f -print
	exit 1
}
echo OK
fi

echo $N Make sure that clone -l copies the BAM pool .................$NL
cd "$HERE"
rm -rf clone
bk clone $Q -l pmaster clone || exit 1
cd clone
(cd ../pmaster && find BitKeeper/BAM -type f -print ) |
while read x
do	test -f $x || echo $x is missing
done > OUT 2>&1
for i in BitKeeper/log/BAM.index BitKeeper/log/BAM
do	test -f $i || echo $i
done >> OUT
test -s OUT && {
	echo failed
	cat OUT
	find BitKeeper -print
	exit 1
}
echo OK

# XXX rclone

test X$PREFER_RSH = XYES && {

echo $N Make sure that rclone copies the BAM pool ...................$NL
cd "$HERE"
P=`port 50000`
bk bkd -d -p$P -ikill -l"$HERE/XXX"
bk clone $Q pmaster bk://localhost:$P/rclone
bk _kill bk://localhost:$P || exit 1
cd rclone || exit 1
(cd ../pmaster && find BitKeeper/BAM -type f -print ) |
while read x
do	test -f $x || echo $x is missing
done > OUT 2>&1
for i in BitKeeper/log/BAM.index BitKeeper/log/BAM
do	test -f $i || echo $i
done >> OUT
test -s OUT && {
	echo failed
	cat OUT
	cat "$HERE/XXX"
	exit 1
}
echo OK

echo $N Make sure that rclone of server does not copy BAM pool ......$NL
cd "$HERE"
rm -f XXX
P=`port 50000`
BK_CONFIG="BAM_server:bk://localhost:$P/pmaster" \
    bk bkd -dp$P -ikill -l"$HERE/XXX"
BK_CONFIG="BAM_server:bk://localhost:$P/pmaster" \
    bk clone $Q pmaster bk://localhost:$P/rclone2
cd rclone2 || exit 1
(cd ../pmaster && find BitKeeper/BAM -type f -print ) |
while read x
do	test -f $x && echo $x is present
done > OUT 2>&1
for i in BitKeeper/log/BAM
do	test -f $i || echo $i should be present
done >> OUT
test -s OUT && {
	echo failed
	cat OUT
	cat "$HERE/XXX"
	exit 1
}
echo OK

echo $N Make sure we can get the data after the fact ................$NL
cd "$HERE/rclone2"
BK_CONFIG="BAM_server:bk://localhost:$P/pmaster" bk -r co $Q 
(cd ../pmaster && find BitKeeper/BAM -type f -print ) |
while read x
do	test -f $x || echo $x is not found
done > OUT 2>&1
for i in BitKeeper/log/BAM
do	test -f $i || echo $i should be present
done >> OUT
test -s OUT && {
	echo failed
	cat OUT
	exit 1
}
bk _kill bk://localhost:$P || exit 1
echo OK

echo $N Make sure that rclone w/ diff server does not copy BAM pool .$NL
cd "$HERE"
P=`port 50000`
BK_CONFIG="BAM_server:bk://localhost:$P/rclone" \
    bk bkd -dp$P -ikill -l"$HERE/XXX"
BK_CONFIG="BAM_server:bk://localhost:$P/rclone" \
    bk clone $Q pmaster bk://localhost:$P/rclone3
cd rclone3 || exit 1
(cd ../rclone && find BitKeeper/BAM -type f -print ) |
while read x
do	test -f $x && echo $x is present
done > OUT 2>&1
for i in BitKeeper/log/BAM
do	test -f $i || echo $i should be present
done >> OUT
test -s OUT && {
	echo failed
	cat OUT
	cat "$HERE/XXX"
	exit 1
}
echo OK

echo $N Make sure we can get the data after the fact ................$NL
cd "$HERE/rclone3"
BK_CONFIG="BAM_server:bk://localhost:$P/rclone" bk -r co $Q 
(cd ../pmaster && find BitKeeper/BAM -type f -print ) |
while read x
do	test -f $x || echo $x is not found
done > OUT 2>&1
for i in BitKeeper/log/BAM
do	test -f $i || echo $i should be present
done >> OUT
test -s OUT && {
	echo failed
	cat OUT
	exit 1
}
bk _kill bk://localhost:$P || exit 1
echo OK

}
exit 0
