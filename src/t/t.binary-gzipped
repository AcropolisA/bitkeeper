# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2000 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.

# Copyright (c) 1999 Larry McVoy
# %K%
if [ X$PLATFORM = X"WIN32" ]
then
	binary_data="`bk bin`/bk.exe"
	binary_data2="`bk bin`/bkmerge.exe"
else 
	binary_data="/bin/ls"
	binary_data2="/bin/rm"
fi
data="data"

no_logging proj
echo $N Trying to check in some binary data .........................$NL
cp ${binary_data} ${data}
chmod u+w ${data}
# This makes sure we aren't expanding keywords.
echo '@A@ @B@ @D@ @E@ @F@ @G@ @H@ @I@ @L@ @M@ @P@ @R@ @S@ @T@ @U@ @W@ @Y@ @Z@ @@@' | sed s/@/%/g >> $data
cp $data saved_bin
binary_data=saved_bin
bk admin $Q -i${data} -Ebinary uuencode
bk co $Q -l uuencode
cmp -s ${binary_data} uuencode
if [ $? -ne 0 ]; then echo Failed - files differ.; exit 1; fi
echo OK
echo $N Make sure symbols work on binary data .......................$NL
bk clean uuencode
bk admin $Q -Shi_there uuencode
bk co $Q -l uuencode
cmp -s ${binary_data} uuencode
if [ $? -ne 0 ]; then echo Failed - files differ.; exit 1; fi
echo OK
echo $N Trying to diffs unchanged binary data .......................$NL
bk diffs uuencode > d.out 2>&1
touch d.ref
cmp -s d.out d.ref
if [ $? -ne 0 ]; then echo Failed; diff d.out d.ref; exit 1; fi
echo OK
echo $N Trying to check in unchanged binary data ....................$NL
echo uuencode | bk ci $Q -y -
if [ $? -ne 0 ]; then echo Failed; exit 1; fi
bk co $Q -l uuencode
echo OK
echo $N Trying to change some binary data ...........................$NL
cp ${binary_data2} uuencode
bk diffs uuencode > d.out 2>&1
grep -q "uuencode differ" d.out
if [ $? -ne 0 ]; then echo Failed; exit 1; fi
bk ci $Q -y uuencode
bk co $Q uuencode
cmp -s ${binary_data2} uuencode
if [ $? -ne 0 ]; then echo Failed - files differ.; exit 1; fi
echo OK
echo $N Checking that revision 1.1 is still OK ......................$NL
bk co -r1.1 $Q uuencode
cmp -s ${binary_data} uuencode
if [ $? -ne 0 ]; then echo Failed - files differ.; exit 1; fi
echo OK
echo $N Trying to clean an encoded file .............................$NL
bk co $Q -l uuencode
bk clean uuencode
if [ $? -ne 0 ]; then echo Clean failed ; exit 1; fi
if [ -f uuencode ]; then echo Clean failed ; exit 1; fi
echo OK
echo $N Verifying data checksum .....................................$NL
bk admin $Q -fe0 uuencode
bk co $Q -kr1.1 uuencode
bk admin $Q -fe1 uuencode
A=`bk prs -r1.1 -hd:CHKSUM: uuencode`
B=`bk chksum < uuencode`
if [ $A -ne $B ]; then echo Failed - chksums $A $B differ.; exit 1; fi
echo OK
echo $N Trying to compress uuencoded data ...........................$NL
bk admin -Z uuencode
bk co -r1.1 $Q uuencode
cmp -s ${binary_data} uuencode
if [ $? -ne 0 ]; then echo Failed - files differ.; exit 1; fi
echo OK
echo $N Trying to check in some gzipped+uu data .....................$NL
cp ${binary_data} data
bk admin $Q -idata -Euugzip gzipuu
bk co -l $Q gzipuu
cmp -s ${binary_data} gzipuu
if [ $? -ne 0 ]; then echo Failed - files differ.; exit 1; fi
echo OK
echo $N Trying to change some gzipped+uu data .......................$NL
cp ${binary_data2} gzipuu
bk ci $Q -y gzipuu
bk co $Q -k gzipuu
cmp -s ${binary_data2} gzipuu
if [ $? -ne 0 ]; then echo Failed - files differ.; exit 1; fi
echo OK
echo $N Trying to clean a gzipped+uu file ...........................$NL
bk co $Q -l gzipuu
bk clean gzipuu
if [ $? -ne 0 ]; then echo Clean failed ; exit 1; fi
if [ -f gzipuu ]; then echo Clean failed ; exit 1; fi
echo OK
echo $N Verifying data checksum .....................................$NL
bk admin $Q -fe0 gzipuu
bk co $Q -kr1.1 gzipuu
bk admin $Q -fe1 gzipuu
A=`bk prs -r1.1 -hd:CHKSUM: gzipuu`
B=`bk chksum < gzipuu`
if [ $A -ne $B ]; then echo Failed - chksums $A $B differ.; exit 1; fi
echo OK
echo $N Trying to check in some gzipped data ........................$NL
# This creates a file of approximately 86kB, 16kB compressed.
# We need a file this large so all internal buffers will overflow
# at least once.
for h in 1 2 3 4 5 6 7 8 9 0
do for i in q w e r t y u i o p
do for j in a s d f g h j k l
do for k in z x c v b n m
do	echo $h $i $j $k $i $j $k >>X
done
done
done
done
bk undos X > gzipped
cp gzipped data
bk ci -i $Q gzipped
cp SCCS/s.gzipped SCCS/s.ref
bk admin $Q -Z gzipped
bk co -l $Q gzipped
grep -q '^.f e 4$' SCCS/s.gzipped
if [ $? -ne 0 ]; then echo Wrong encoding.; exit 1; fi
cmp -s data gzipped
if [ $? -ne 0 ]; then echo Failed - files differ.; diff data gzipped; exit 1; fi
echo OK
echo $N "admin -Z; admin -Znone should be a no-op ...................."$NL
cp SCCS/s.gzipped SCCS/s.cmp
bk admin $Q -Znone cmp
cmp SCCS/s.cmp SCCS/s.ref
if [ $? -ne 0 ]; then echo Failed - files differ.; diff SCCS/s.cmp SCCS/s.ref; exit 1; fi
echo OK
rm -f SCCS/s.cmp SCCS/s.ref
echo $N Check in gzipped data with delta -Z .........................$NL
bk delta $Q -i -Z data
grep -q '^.f e 4$' SCCS/s.data
if [ $? -ne 0 ]; then echo Wrong encoding.; exit 1; fi
echo OK
echo $N Uncompress and modify in one operation.......................$NL
bk get $Q -e data
echo '! @ # $ % ^ & * ( )' >>data
bk delta $Q -Znone -y data
grep -q '^.f e 0$' SCCS/s.data
if [ $? -ne 0 ]; then echo Wrong encoding.; exit 1; fi
echo OK
echo $N Trying to change some gzipped data ..........................$NL
echo "here is some data" > X
bk undos X > gzipped
cp gzipped ll
bk ci $Q -y gzipped
bk co $Q gzipped
cmp -s ll gzipped
if [ $? -ne 0 ]; then echo Failed - files differ.; exit 1; fi
echo OK
echo $N Trying to clean gzipped data ................................$NL
bk co $Q -l gzipped
bk clean gzipped
if [ $? -ne 0 ]; then echo Clean failed ; exit 1; fi
if [ -f gzipped ]; then echo Clean failed ; exit 1; fi
echo OK
echo $N Make a gzipped file ascii ...................................$NL
bk admin -Znone gzipped
grep -q '^.f e 0$' SCCS/s.gzipped
if [ $? -ne 0 ]; then echo Wrong encoding.; exit 1; fi
echo OK
echo $N Make sure it still has the same data ........................$NL
bk co $Q gzipped
cmp -s ll gzipped
if [ $? -ne 0 ]; then echo Failed - files differ.; exit 1; fi
echo OK
echo $N Make it gzipped again .......................................$NL
bk admin -Z gzipped
grep -q '^.f e 4$' SCCS/s.gzipped
if [ $? -ne 0 ]; then echo Wrong encoding.; exit 1; fi
echo OK
echo $N Make sure it still has the same data ........................$NL
bk co $Q gzipped
cmp -s ll gzipped
if [ $? -ne 0 ]; then echo Failed - files differ.; exit 1; fi
echo OK
echo $N Verifying data checksum .....................................$NL
bk co $Q -kr1.1 gzipped
A=`bk prs -r1.1 -hd:CHKSUM: gzipped`
B=`bk chksum < gzipped`
if [ $A -ne $B ]; then echo Failed - chksums $A $B differ.; exit 1; fi
echo OK
