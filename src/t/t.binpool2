# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2000 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.

echo $N Create initial repository ...................................$NL
for f in 1 2 3 4 5 6 7 8 9
do	echo $f > F$f
	printf 'a\0b' >> F$f
done
commercial pmaster
cd BitKeeper/etc
bk edit $Q config
cat <<EOF >> config
[:*/p*]binpool_server: file://$HERE/pmaster
[:*/c*]binpool_server: file://$HERE/cmaster
EOF
bk delta $Q -yc config || exit 1
bk commit $Q -yc || exit 1
cd "$HERE"/pmaster
echo OK

echo $N Create some binary data and check binpool ...................$NL
cp "$HERE"/F1 bin.data
bk new $Q bin.data
bk commit $Q -ybindata
test -d BitKeeper/binpool || exit 1
echo OK

echo $N Set up a remote fetch of a file .............................$NL
cd ..
bk clone $Q pmaster pcopy || exit 1
cd pmaster
cd ../pcopy
rm -fr BitKeeper/binpool
bk get $Q bin.data || exit 1
test -d BitKeeper/binpool || {
	echo Binpool not restored
	exit 1
}
test -f bin.data || {
	echo File not gotten
	exit 1
}
checkfiles "$HERE"/F1 bin.data
echo OK

echo $N Set up a remote fetch of a file to a -G file ................$NL
rm -fr BitKeeper/binpool
bk get $Q -G "pcopy data" bin.data || exit 1
test -d BitKeeper/binpool || {
	echo Binpool not restored
	exit 1
}
test -f "pcopy data" || {
	echo File not gotten
	exit 1
}
echo OK

echo $N Set up a remote fetch of a file to a -G file through - ......$NL
rm -fr BitKeeper/binpool "pcopy data"
echo bin.data | bk get $Q -G "pcopy data" - || exit 1
test -d BitKeeper/binpool || {
	echo Binpool not restored
	exit 1
}
test -f "pcopy data" || {
	echo File not gotten
	exit 1
}
checkfiles "$HERE"/F1 "pcopy data"
echo OK

echo $N Create local data and clone repo ............................$NL
cp "$HERE"/F2 F2
bk new $Q F2 || exit 1
bk mv bin.data F1 || exit 1
bk commit $Q -ylocal || exit 1
cd "$HERE"
bk clone $Q pcopy pclone1 || exit 1
cd pclone1
bk get $Q F1 F2 || exit 1
checkfiles "$HERE"/F1 F1
checkfiles "$HERE"/F2 F2
echo OK

echo $N Try pulling the same csets plus new local work ..............$NL
cp "$HERE"/F3 F3
bk new $Q F3 || exit 1
bk chmod +x F3 || exit 1
bk edit $Q F2 || exit 1
cat "$HERE"/F4 > F2
bk delta -y4 $Q F2 || exit 1
bk commit -ynew $Q || exit 1
cd "$HERE"
bk clone $Q pmaster pclone2 || exit 1
cd pclone2
bk pull $Q ../pclone1 || exit 1
bk get $Q F1 F2 F3 || exit 1
checkfiles "$HERE"/F1 F1
checkfiles "$HERE"/F4 F2
checkfiles "$HERE"/F3 F3
echo OK

echo $N Now create new work and push ................................$NL
cd "$HERE"/pclone2
cp "$HERE"/F4 F4
bk new $Q F4 || exit 1
bk edit $Q F2 || exit 1
cat "$HERE"/F5 > F2
bk delta $Q -y5 F2 || exit 1
bk commit -ypush $Q || exit 1
bk clone $Q ../pmaster ../pclone3 || exit 1
bk push $Q ../pclone3 || exit 1
cd ../pclone3
bk get $Q F1 F2 F3 F4 || exit 1
checkfiles "$HERE"/F1 F1
checkfiles "$HERE"/F5 F2
checkfiles "$HERE"/F3 F3
checkfiles "$HERE"/F4 F4
echo OK

echo $N Clone to different bp master ................................$NL
unset BK_CONFIG
cd ..
bk clone $Q pmaster cmaster || exit 1
cd cmaster
bk -Ur get $Q || exit 1
echo OK

echo $N Clone within czone and pull from p ..........................$NL
cd ..
bk clone $Q cmaster cclone1 || exit 1
cd cclone1
bk pull $Q ../pclone3 || exit 1

bk get $Q F1 F2 F3 F4 || exit 1
checkfiles "$HERE"/F1 F1
checkfiles "$HERE"/F5 F2
checkfiles "$HERE"/F3 F3
checkfiles "$HERE"/F4 F4
echo OK

echo $N Clone to repo without a bp master ...........................$NL
cd ..
bk clone $Q cclone1 zclone1 || exit 1
cd zclone1
bk -Ur get $Q || exit 1
echo OK

echo $N Push new data across zones ..................................$NL
cd "$HERE"/cclone1
cp "$HERE"/F5 F5
bk new $Q F5 || exit 1
bk mv F1 F6 || exit 1
bk edit $Q F6 || exit 1
cp "$HERE"/F6 F6
bk delta -y6 $Q F6 || exit 1
bk commit -y6 $Q || exit 1
bk push $Q ../pclone2 || exit 1
cd ../pclone2
bk -r get $Q || exit 1
echo OK

echo $N Try remote clone across zones ...............................$NL
cd "$HERE"
P=`port 50000`
bk bkd -d -p$P -ikill
bk clone $Q cclone1 bk://localhost:$P/zclone2 || exit 1
cd zclone2 || exit 1
bk -Ur get $Q || exit 1
echo OK

bk _kill bk://localhost:$P
