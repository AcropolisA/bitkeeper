# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2000 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.


# Copyright (c) 2000 Larry McVoy
# %K%

echo $N Create initial repository ...................................$NL
no_logging project
if [ ! -d BitKeeper/etc ]; then echo failed to make BitKeeper/etc; exit 1; fi
if [ ! -f SCCS/s.ChangeSet ]; then echo failed to make ChangeSet; exit 1; fi
P=`bk pending | wc -l`
if [ $P -ne 0 ]; then echo files are pending; bk pending; exit 1; fi
echo OK
echo $N Create some data ............................................$NL
for dir in d1 d2 d3 d1/sub1 d2/sub1 d3/sub d3/sub2
do	mkdir $dir
	for file in a b c d 
	do	echo "I am $dir/$file: %I%" > $dir/$file
	done
done
bk sfiles -x | bk ci $Q -i -
if [ ! -f d3/sub2/SCCS/s.a ]; then echo failed to create files; exit 1; fi
echo OK
echo $N Commit the data .............................................$NL
bk commit $S -a -yCset
if [ `bk sfiles -C | wc -l` -ne 0 ];
then	echo failed to commit all files; exit 1; fi
echo OK
echo $N Create another changeset ....................................$NL
bk -r edit $Q
bk sfiles -g | grep -v ChangeSet | grep -v BitKeeper | while read x
do	echo more data >> $x
done
bk -r ci $Q -ycset2
bk commit $S -a -yCset2
if [ `bk sfiles -C | wc -l` -ne 0 ];
then	echo failed to commit all files; exit 1; fi
echo OK
echo $N Create another changeset ....................................$NL
bk -r edit $Q
bk sfiles -g | grep -v ChangeSet | grep -v BitKeeper | while read x
do	echo more data >> $x
done
bk -r ci $Q -ycset3
bk commit $S -a -yCset3
if [ `bk sfiles -C | wc -l` -ne 0 ];
then	echo failed to commit all files; exit 1; fi
echo OK
echo $N Create another changeset with two deltas ....................$NL
bk -r edit $Q
bk sfiles -g | grep -v ChangeSet | grep -v BitKeeper | while read x
do	echo more data >> $x
done
bk -r ci $Q -ycset4
bk -r edit $Q
bk sfiles -g | grep -v ChangeSet | grep -v BitKeeper | while read x
do	echo more data >> $x
done
bk -r ci $Q -ycset4
bk commit $S -a -yCset4
if [ `bk sfiles -C | wc -l` -ne 0 ];
then	echo failed to commit all files; exit 1; fi
echo OK
echo $N Make sure that it checks clean ..............................$NL
bk -r check -a > OUT 2>&1
if [ $? -ne 0 ]; then echo failed to exit 0; exit 1; fi
#if [ -s OUT ]; then echo failed; cat OUT; exit 1; fi
echo OK
echo $N Make sure that it complains if a file is missing ............$NL
mv d1/sub1/SCCS/s.a d1/sub1/SCCS/junk.a
bk -r check -a > OUT 2>&1
if [ $? -eq 0 ]; then echo failed to exit non-zero; cat OUT; exit 1; fi
if [ ! -s OUT ]; then echo failed; cat OUT; exit 1; fi
echo OK

echo $N Make sure that it is happy when we put it back ..............$NL
mv d1/sub1/SCCS/junk.a d1/sub1/SCCS/s.a
bk -r check -a > OUT 2>&1 || {
	exit failed to exit cleanly
	cat OUT
	exit 1
}
echo OK

echo $N Make sure it complains about locked files w/o a gfile........$NL
bk get -eg $Q d1/sub1/SCCS/s.a
bk -r check -a > OUT 2>&1 && {
	echo should have exited with a failure
	exit 1
}
grep -q 'is locked but not checked out' OUT || {
	echo bad error message
	cat OUT
	exit 1
}
echo OK

echo $N Make sure it it fixes the above problem with -f .............$NL
bk -r check -af > OUT 2>&1 || {
	echo should have exited cleanly
	exit 1
}
test -f d1/sub1/SCCS/p.a && {
	echo failed to unlock the file
	exit 1
}
echo OK

echo $N Make sure it complains about locked files w/ RO gfile........$NL
bk edit $Q d1/sub1/SCCS/s.a
echo "new stuff" > d1/sub1/a
chmod 444 d1/sub1/a
bk -r check -a > OUT 2>&1 && {
	echo should have exited with a failure
	exit 1
}
grep -q 'is locked but not writable' OUT || {
	echo bad error message
	cat OUT
	exit 1
}
echo OK

echo $N Make sure unedit will fix the above problem .................$NL
bk unedit d1/sub1/SCCS/s.a
bk -r check -a > OUT 2>&1 || {
	echo should have exited cleanly
	exit 1
}
echo OK

echo $N Make sure it fixes locked files w/ unchanged RO gfile........$NL
bk edit $Q d1/sub1/SCCS/s.a
bk get $Q -r+ -p d1/sub1/a > d1/sub1/a
chmod 444 d1/sub1/a
bk -r check -a > OUT 2>&1 || {
	echo should have exited with ok status
	exit 1
}
echo OK

echo $N Make sure it complains about file/dir conflicts .............$NL
bk clean $Q d1/sub1/a
mkdir d1/sub1/a
bk -r check -a > OUT 2>&1 && {
	echo should have exited with a failure
	cat OUT
	exit 1
}
grep -q 'file/directory conflict' OUT || {
	echo bad error message
	cat OUT
	exit 1
}
rmdir d1/sub1/a
echo OK
echo $N Make sure it complains about cset pointer problems ..........$NL
echo hi > foo
bk new $Q foo || exit 1
csetfile=`bk prs -hr+ -d ':CSETFILE:\n' foo`stuff
bk admin -C$csetfile foo
bk -r check -a > OUT 2>&1 && {
	echo should have exited with a failure
	cat OUT
	exit 1
}
grep -q 'belongs to:' OUT || {
	echo bad error message
	cat OUT
	exit 1
}
echo OK
