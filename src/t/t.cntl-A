# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2000 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.

# Copyright (c) 1999 Andrew Chang
# %K%

commercial project
echo $N check text file /w leading and trailing cntl-A \(append\)......$NL
echo -e "\001\001\001\001" > data 
echo "hi mom" >> data
echo "hi dad" >> data
cp data data.ref_new
bk new $Q data
bk get $Q data
cmp -s data data.ref_new
if [ $? -ne 0 ]; then echo failed; exit 1; fi
bk edit $Q data
echo -e "\001this is a line with one leading cntl-A" >> data
echo -e "\001\001this is a line with two leading cntl-A" >> data
echo -e "this is a line with trailing cntl-A\001" >> data
echo -e "\001\001\001this is another line with three leading cntl-A" >> data
cp data data.ref_inst
bk ci $Q -ycntl-A data
bk get $Q -e data
cmp -s data data.ref_inst
if [ $? -ne 0 ]; then echo failed; exit 1; fi
bk clean data
bk get data 2> get.out 1>&2
grep -q "bad delta cksum"  get.out
if [ $? -eq 0 ]; then echo failed; exit 1; fi
cmp -s data data.ref_inst
if [ $? -ne 0 ]; then echo failed; exit 1; fi
bk admin -hhh data
if [ $? -ne 0 ]; then echo failed; exit 1; fi
echo OK
echo $N check text file /w leading and trailing cntl-A \(change\)......$NL
bk edit $Q -g data
#echo "hi mom" > data
echo -e "\001this is new changed line with one leading cntl-A" >> data
echo "hi dad" >> data
cp data data.ref_chg
bk delta $Q -yinsert data
bk edit $Q data
cmp -s data data.ref_chg
if [ $? -ne 0 ]; then echo failed; exit 1; fi
echo OK
echo $N check cnt-A in compress mode ................................$NL
bk admin -Zgzip data
bk edit $Q data
echo "hi mom" > data
echo -e "\001this is new cntl-A line" >> data
echo -e "more new stuff for compress mode" >> data
cp data data.ref_chg
bk delta $Q -yinsert data
bk edit $Q data
cmp -s data data.ref_chg
if [ $? -ne 0 ]; then echo failed; exit 1; fi
bk admin -hhh data
if [ $? -ne 0 ]; then echo failed; exit 1; fi
echo OK
echo $N check cnt-A when generating diff ............................$NL
bk clean $Q data
echo -e "\001\001" > pattern
bk get -D data | grep -q `cat pattern`
if [ $? -eq 0 ]; then echo failed; exit 1; fi
bk get -DD data | grep -q `cat pattern`
if [ $? -eq 0 ]; then echo failed; exit 1; fi
echo OK
echo $N check cnt-A when checking diff ..............................$NL
bk edit $Q data
bk sfiles -c data | grep -q SCCS/s.data
if [ $? -eq 0 ]; then echo failed; exit 1; fi
echo OK
echo $N check cnt-A when pushing stuff ..............................$NL
cd $HERE
bk clone $Q project copy || exit 1
cd $HERE/project
echo foo > foo
bk new $Q foo
bk edit $Q foo
echo -e "\001" >> foo
bk delta $Q -ynew foo
bk commit $Q -ynew
bk push $Q $HERE/copy || { echo failed; exit 1; }
echo OK

echo $N check cnt-A on delta command line ...........................$NL
bk edit $Q foo || exit 1
A=`cat foo`
bk delta $Q -y"$A odd comment" foo || exit 1
bk get $Q foo || exit 1
bk -r check -acf || exit 1
echo OK

# XX TODO need to get diff to produce 'i' command, and check
# the processing of this case.

echo $N more cnt-A tests ............................................$NL
echo -e "\001" > test2
echo -e "sdf" >> test2
echo -e "sss" >> test2
echo -e "\001" >> test2
bk ci -i -y1 $Q test2 || exit 1
bk edit $Q test2 2> get.out || exit 1
cat get.out
grep -q "bad delta cksum" get.out && exit 1
echo -e "\001" > test2
echo -e "sdf" >> test2
echo -e "sss2" >> test2
echo -e "\001" >> test2
bk ci -y2 $Q test2 || exit 1
bk edit $Q test2 2> get.out || exit 1
cat get.out
grep -q "bad delta cksum" get.out && exit 1
echo -e "sdf" > test2
echo -e "sss2" >> test2
echo -e "\001" >> test2
bk ci -y3 $Q test2 || exit 1
bk edit $Q test2 2> get.out || exit 1
cat get.out
grep -q "bad delta cksum" get.out && exit 1
echo -e "sdf" > test2
echo -e "sss2" >> test2
echo -e "\001a" >> test2
bk ci -y4 $Q test2 || exit 1
bk edit $Q test2 2> get.out || exit 1
cat get.out
grep -q "bad delta cksum" get.out && exit 1
echo OK
