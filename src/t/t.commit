# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2003 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.

# Copyright (c) 2003 BitMover, Inc
# %K%


commercial project
echo $N Test commit -y with multiline comments ......................$NL
echo hi there > file
bk new $Q file
bk commit $Q -y'this
is

a

test

' || exit 1
bk prs -r+ -hd':COMMENTS:' ChangeSet > GOT
bk undos <<EOF > WANT
C this
C is
C 
C a
C 
C test
C 
EOF
cmp -s WANT GOT || { echo failed; diff -u WANT GOT; exit 1; }
echo OK

echo $N Test commit with revs on stdin ..............................$NL
for i in 2 3 4 5
do	bk edit $Q file
	bk delta -fywhatever $Q file
done
bk sfiles -pA > BEFORE
echo 'SCCS/s.file|1.4' | bk commit $Q -ywhatever -
bk sfiles -pA > AFTER
bk pending > LEFT
grep -q 1.5 LEFT || exit 1
cmp -s BEFORE AFTER && {
	echo failed
	cat BEFORE
	cat AFTER
	exit 1
}
echo OK

echo $N Commit in bogus nested alias ................................$NL
mkdir subdir
cd subdir
test 1.3 = `bk prs -r+ -hnd:I: ../ChangeSet` || fail
bk commit $Q -sTCLTK -yfile-leftover 2>ERR && fail -f ERR should fail
echo 'commit: -sALIAS only allowed in product' > WANT
cmpfiles ERR WANT
bk commit $Q -sHERE -yfile-leftover || fail
test 1.4 = `bk prs -r+ -hnd:I: ../ChangeSet` || fail
echo OK

echo $N Commit using -S in a standalone repo to see that it works ...$NL
bk edit $Q ../file
bk delta -fywhatever $Q ../file
bk commit $Q -S -yfile-leftover || fail
echo OK

echo $N Commit should fail if cset marking fails.....................$NL
cd "$HERE"
commercial markcset
mkdir F
touch F/foo bar goo
bk new $Q F/foo bar goo
bk commit $Q -ybase
bk edit $Q F/foo
bk delta $Q -fynull F/foo
bk _cp F/SCCS/s.foo precommit
chmod 555 .bk/F/SCCS
bk commit -q -y"Foo" 2> OUT
RC=$?
chmod 755 .bk/F/SCCS
if [ "$PLATFORM" = WIN32 ]
then	bk _cp precommit F/SCCS/s.foo
	bk sfiles -P > GOT
	echo F/SCCS/s.foo > WANT
	cmpfiles WANT GOT
else	test "$RC" = 0 && fail commit should have failed
	grep -q 'Could not mark F/foo. Perhaps it is locked' OUT || fail -f OUT
fi
test -f "SCCS/x.foo" && fail left xfile behind
test `bk changes -d:C: -r+` = Foo || fail cset not made
cd "$HERE"
bk clone -q markcset markcset_copy 2>OUT && fail
grep -q "Missing delta (bk help chk2)" OUT || fail -f OUT wrong error
cd markcset_copy
test -d RESYNC || fail expected RESYNC lock in clone
# repair can replace a new file but not port a missing delta
bk repair 2>OUT && fail -f OUT repair fixed
grep -q "Missing delta (bk help chk2)" OUT || fail -f OUT wrong error
# check in the initial repo will repair itself
cd ../markcset
bk -r check -ac 2>OUT || fail -f OUT
grep -q 'F/foo: adding and/or removing missing csetmarks' OUT || fail -f OUT
bk repocheck $Q || fail
echo OK
