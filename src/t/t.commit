# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2003 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.

# Copyright (c) 2003 BitMover, Inc
# %K%


commercial project
echo $N Test commit -y with multiline comments ......................$NL
echo hi there > file
bk new $Q file
bk commit $Q -y'this
is

a

test

' || fail
bk prs -r+ -hd':COMMENTS:' ChangeSet > GOT
bk undos <<EOF > WANT
C this
C is
C 
C a
C 
C test
C 
EOF
cmp -s WANT GOT || { echo failed; diff -u WANT GOT; exit 1; }
echo OK

echo $N Verify commit metadata ......................................$NL
bk _heapdump ChangeSet | egrep '^([PS]|a/|serial|mode|flags|xflags)' > GOT
cat <<EOF > WANT
serial: 3 (1.2)
PARENT: 2 (1.1)
a/d/s: 1/0/1
xflags: 1061 (BITKEEPER,CSETMARKED,HASH)
flags: 1001 (CSET)
PATHNAME: ChangeSet
SORTPATH: ChangeSet
serial: 2 (1.1)
PARENT: 1 (1.0)
a/d/s: 5/0/1
xflags: 1061 (BITKEEPER,CSETMARKED,HASH)
flags: 1001 (CSET)
PATHNAME: ChangeSet
SORTPATH: ChangeSet
serial: 1 (1.0)
a/d/s: 0/0/0
xflags: 1061 (BITKEEPER,CSETMARKED,HASH)
flags: 1 ()
PATHNAME: ChangeSet
SORTPATH: ChangeSet
EOF
cmpfiles GOT WANT
echo OK

echo $N Test commit with revs on stdin ..............................$NL
for i in 2 3 4 5
do	bk edit $Q file
	bk delta -fywhatever $Q file
done
bk sfiles -pA > BEFORE
echo 'SCCS/s.file|1.4' | bk commit $Q -ywhatever -
bk sfiles -pA > AFTER
bk pending > LEFT
grep -q 1.5 LEFT || fail
cmp -s BEFORE AFTER && {
	echo failed
	cat BEFORE
	cat AFTER
	exit 1
}
echo OK

echo $N Commit in bogus nested alias ................................$NL
mkdir subdir
cd subdir
test 1.3 = `bk prs -r+ -hnd:I: ../ChangeSet` || fail
bk commit $Q -sTCLTK -yfile-leftover 2>ERR && fail -f ERR should fail
echo 'commit: -sALIAS only allowed in product' > WANT
cmpfiles ERR WANT
bk commit $Q -sHERE -yfile-leftover || fail
test 1.4 = `bk prs -r+ -hnd:I: ../ChangeSet` || fail
echo OK

echo $N Commit using -S in a standalone repo to see that it works ...$NL
bk edit $Q ../file
bk delta -fywhatever $Q ../file
bk commit $Q -S -yfile-leftover || fail
echo OK

test "$PLATFORM" != WIN32 && {
echo $N Commit should fail if cset marking fails.....................$NL
cd "$HERE"
commercial markcset
mkdir F
touch F/foo bar goo
bk new $Q F/foo bar goo
bk commit $Q -ybase
bk edit $Q F/foo
bk delta $Q -fynull F/foo
bk _cp F/SCCS/s.foo precommit
chmod 555 .bk/F/SCCS
bk commit -q -y"Foo" 2> OUT
RC=$?
chmod 755 .bk/F/SCCS
grep -q 'Could not mark F/foo. Perhaps it is locked' OUT || fail -f OUT
test `bk changes -d:C: -r+` = Foo && fail cset not reverted
test -f "SCCS/x.foo" && fail left xfile behind
bk repocheck $Q || fail should be fine
echo OK
}

echo $N Test gone file not gone and colliding on a cset boundary ....$NL
cd "$HERE/project"
bk clone $Q . ../copy
bk _rm SCCS/s.file
bk -r check -aggg | bk gone $Q -
touch file
bk new $Q file
bk commit $Q -ynewfoo
cd ../copy
bk mv file bar
bk pull -q 2> GOT && fail -f GOT expected failure
cat <<EOF > WANT
A path-conflict was found in existing csets
  ./bar|1.6
  with pending rename from ./file
conflicts with existing:
  ./file|1.1
Must include other renames in commit.
Check failed.  Resolve not completed.
Your repository should be restored to its previous state.
We are running a full consistency check to verify this, please wait.
check passed.
resolve: RESYNC directory left intact.
====================================================
EOF
cmpfiles WANT GOT
echo OK

echo $N Setup a failing commit that updates the attr file ...........$NL
bk abort -f
bk edit $Q BitKeeper/etc/collapsed
echo hi >> BitKeeper/etc/collapsed
bk ci $Q -yy -u BitKeeper/etc/collapsed
chmod +w BitKeeper/etc/collapsed
# force an attr file update to show it gets reverted
_BK_ATTR_TEST=foo bk commit $Q -yy > ERR 2>&1 && fail -f ERR should fail
rm BitKeeper/etc/collapsed
bk repocheck $Q || fail
bk sfiles -p > GOT
cat <<EOF > WANT
SCCS/s.bar
BitKeeper/etc/SCCS/s.collapsed
EOF
cmpfiles WANT GOT
# check again that all pending are marked
bk sfiles -P > GOT
cmpfiles WANT GOT
echo OK

echo $N Test out broken merge detection .............................$NL
# Setup this and next test for bad merge detection
cd "$HERE"
commercial base
touch foo bar
bk new $Q -l foo bar
bk commit $Q -f
bk clone $Q --checkout=edit . ../merge
bk delta $Q -lfynull foo bar
bk commit $Q -f
cd ../merge
echo content > bar
bk delta $Q -fynull foo bar
bk commit $Q -f
bk _rm SCCS/s.foo
bk -r check -ag | bk gone $Q -
bk commit $Q -f
cd ../base
bk delta $Q -fynull foo bar
bk commit $Q -f
bk _rm SCCS/s.foo
bk -r check -ag | bk gone $Q -
bk commit $Q -f
bk clone $Q . ../stuff
cd ../stuff
touch zoo
bk new $Q zoo
bk commit $Q -f
cd ../merge
bk pull $Q -R
# The gone file is in place, so the resolve would normally work.
# Reach in through the resolve and zero it.
# A conflict was set up in meaningless file 'bar'. Just sccs merge it.
bk resolve <<EOF 2> ERR && fail -f ERR
!bk edit -q BitKeeper/etc/gone
!echo > BitKeeper/etc/gone
!bk delta -q -ygone BitKeeper/etc/gone
s
C
EOF
grep -q "commit: ChangeSet is a merge but is missing" ERR || fail -f ERR
# restore gone, it commits!
bk edit $Q -x+ RESYNC/BitKeeper/etc/gone
bk resolve $Q || fail
echo OK

echo $N Test out broken merge in the past does not break things .....$NL
bk pull $Q ../stuff || fail
echo OK
