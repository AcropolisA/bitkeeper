# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2000 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.


# Copyright (c) 2000 Larry McVoy
# %K%

echo $N Create initial repository using setup .......................$NL
no_logging project
if [ ! -d BitKeeper/etc ]; then echo failed to make BitKeeper/etc; exit 1; fi
if [ ! -f SCCS/s.ChangeSet ]; then echo failed to make ChangeSet; exit 1; fi
P=`bk pending | wc -l`
if [ $P -ne 0 ]; then echo files are pending; bk pending; exit 1; fi
echo OK

echo $N Check for long keys only ....................................$NL
grep -q "BK key2" SCCS/s.ChangeSet 
if [ $? -ne 0 ]; then echo Failed to add long key symbol.; exit 1; fi
echo OK

echo $N Make sure that we can remove an earlier cset ................$NL
for file in A B C
do	for line in 1 2 3 4 5 6 7 8
	do	echo $line $file >> $file
	done
	bk new $Q $file
done
bk commit $Q -ywhatever
bk cset $Q -x+
bk co $Q A
if [ "`cat A`" != "" ]
then	echo failed to remove A contents
	exit 1
fi
echo OK

echo $N Make sure that we can include it back again .................$NL
bk cset $Q -i1.2
bk get $Q -r1.1 -pm A > A.1
bk get $Q -pm A > A.+
cmp -s A.1 A.+
if [ $? != 0 ]
then	echo failed to return A contents correctly
	exit 1
fi
echo OK

echo $N Cset -x with a modified file should fail ....................$NL
bk edit $Q C
echo foo >> C
bk cset $Q -x+ 2>/dev/null
if [ $? = 0 ]
then	echo failed to fail
	exit 1
fi
cat > DIFFS <<EOF
===== C 1.3 vs edited =====
8a9
> foo
EOF
bk diffs C > CMP1
diff CMP1 DIFFS > EMPTY
if [ -s EMPTY ]
then	echo failed to leave C alone
	bk diffs C  > CMP1
	diff CMP1 DIFFS 
	exit 1
fi
if [ `bk prs -hd:I: -r+ A` != 1.3 ]
then	echo failed to remove exclude delta from A
	bk prs A
	exit 1
fi
echo OK

echo $N Cset -x with a uncommitted deltas should fail ...............$NL
bk delta -ywhatever $Q C
bk cset $Q -x+ 2>/dev/null
if [ $? = 0 ]
then	echo failed to fail
	exit 1
fi
if [ `bk prs -hd:I: -r+ A` != 1.3 ]
then	echo failed to remove exclude delta from A
	bk prs A
	exit 1
fi
if [ `bk prs -hd:I: -r+ C` != 1.4 ]
then	echo Failed to leave pending deltas in C
	bk prs C
	exit 1
fi
echo OK
