# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2000 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.

# Copyright (c) 1999 Larry McVoy
# %K%

echo '%A%' > Mydiffs
echo 1.1 >> Mydiffs
bk new -q Mydiffs
# D 1.2 93/03/11 00:50:40.000 butthead 2 1  9/2/44
# C added 4.x etc targets
for i in 2 3 4 5 6 7 8 9 10
do	bk co $Q -l Mydiffs
	echo 1.$i >> Mydiffs
	echo "D 1.$i 20/03/11 00:00:0$i butthead a b c/d/e" | sed s/010/10/ | cat > Init
	echo "c Rev $i" >> Init
	echo "------------------------------------------------" >> Init
	bk delta $Q -IInit Mydiffs
done
echo $N Checking diff against edited file ...........................$NL
bk co $Q -l Mydiffs
echo foo >> Mydiffs
bk diffs Mydiffs > D || exit 1
bk undos > W <<EOF
===== Mydiffs 1.10 vs edited =====
11a12
> foo
EOF
cmp -s D W
if [ $? -ne 0 ]; then echo Failed to get correct diffs.; exit 1; fi
echo OK
echo $N Checking diff -r1.8 against edited file .....................$NL
bk diffs -r1.8 Mydiffs > D || exit 1
bk undos > W <<EOF
===== Mydiffs 1.8 vs edited =====
9a10,12
> 1.9
> 1.10
> foo
EOF
cmp -s D W
if [ $? -ne 0 ]; then echo Failed to get correct diffs.; exit 1; fi
echo OK
echo $N Checking diff -r1.8 w/ no file ..............................$NL
bk unedit Mydiffs
bk diffs -r1.8 Mydiffs > D || exit 1
bk undos > W <<EOF
===== Mydiffs 1.8 vs 1.10 =====
9a10,11
> 1.9
> 1.10
EOF
cmp -s D W
if [ $? -ne 0 ]; then echo Failed to get correct diffs.; exit 1; fi
echo OK
echo $N Checking diff -R1.8 w/ no file ..............................$NL
bk unedit Mydiffs
bk diffs -R1.8 Mydiffs > D || exit 1
bk undos > W <<EOF
===== Mydiffs 1.7 vs 1.8 =====
8a9
> 1.8
EOF
cmp -s D W
if [ $? -ne 0 ]; then echo Failed to get correct diffs.; exit 1; fi
echo OK
echo $N Checking diff -r1.8 -r1.9 ...................................$NL
bk diffs -r1.8 -r1.9 Mydiffs > D || exit 1
bk undos > W <<EOF
===== Mydiffs 1.8 vs 1.9 =====
9a10
> 1.9
EOF
cmp -s D W
if [ $? -ne 0 ]; then echo Failed to get correct diffs.; exit 1; fi
echo OK
echo $N Checking diff -r1.7 -r1.9 with no gfile .....................$NL
bk diffs -r1.7 -r1.9 Mydiffs > D || exit 1
bk undos > W <<EOF
===== Mydiffs 1.7 vs 1.9 =====
8a9,10
> 1.8
> 1.9
EOF
cmp -s D W
if [ $? -ne 0 ]; then echo Failed to get correct diffs.; diff D W; exit 1; fi
echo OK
echo $N Checking diff -r1.7 -r1.9 with wrong gfile ..................$NL
bk _get $Q -r1.1 Mydiffs || exit 1
bk diffs -r1.7 -r1.9 Mydiffs > D || exit 1
bk undos > W <<EOF
===== Mydiffs 1.7 vs 1.9 =====
8a9,10
> 1.8
> 1.9
EOF
cmp -s D W
if [ $? -ne 0 ]; then echo Failed to get correct diffs.; diff D W; exit 1; fi
echo OK
echo $N Checking diff -r1.7 -r1.9 with edited gfile .................$NL
bk edit $Q Mydiffs || exit 1
echo foo >> Mydiffs
bk diffs -r1.7 -r1.9 Mydiffs > D || exit 1
bk undos > W <<EOF
===== Mydiffs 1.7 vs 1.9 =====
8a9,10
> 1.8
> 1.9
EOF
cmp -s D W
if [ $? -ne 0 ]; then echo Failed to get correct diffs.; diff D W; exit 1; fi
echo OK
echo $N Checking diff -R1.7 .........................................$NL
bk diffs -R1.7 Mydiffs > D || exit 1
bk undos > W <<EOF
===== Mydiffs 1.6 vs 1.7 =====
7a8
> 1.7
EOF
cmp -s D W
if [ $? -ne 0 ]; then echo Failed to get correct diffs.; cat D; exit 1; fi
echo OK
echo $N Checking diffs with no gfile ................................$NL
bk unedit $Q Mydiffs
bk diffs Mydiffs > D 2>E || exit 1
if [ -s D ]; then echo Failed to get correct diffs.; cat D; exit 1; fi
## XXX This prints "diffs: no such file: Mydiffs"
##     Is that OK?
echo OK
echo $N Checking diffs with readonly wrong gfile ....................$NL
bk _get $Q -r1.1 Mydiffs || exit 1
bk diffs Mydiffs > D || exit 1
if [ -s D ]; then echo Failed to get correct diffs.; cat D; exit 1; fi
echo OK
echo $N Checking diffs -r1.8 with readonly wrong gfile ..............$NL
bk _get $Q -r1.1 Mydiffs || exit 1
bk diffs -r1.8 Mydiffs > D || exit 1
bk undos > W <<EOF
===== Mydiffs 1.8 vs 1.10 =====
9a10,11
> 1.9
> 1.10
EOF
cmp -s D W
if [ $? -ne 0 ]; then echo Failed to get correct diffs.; cat D; exit 1; fi
echo OK
echo $N Checking diffs -r+ with no gfile ............................$NL
bk clean Mydiffs
bk diffs -r+ Mydiffs > D || exit 1
if [ -s D ]; then echo Failed to get correct diffs.; cat D; exit 1; fi
echo OK
echo $N Checking diffs -r+ with readonly wrong gfile ................$NL
bk _get $Q -r1.1 Mydiffs || exit 1
bk diffs -r+ Mydiffs > D || exit 1
bk undos > W <<EOF
===== Mydiffs 1.10 vs ? =====
1c1
< @(#) Mydiffs 1.10@(#)
---
> @(#) Mydiffs 1.1@(#)
3,11d2
< 1.2
< 1.3
< 1.4
< 1.5
< 1.6
< 1.7
< 1.8
< 1.9
< 1.10
EOF
cmp -s D W
if [ $? -ne 0 ] 
then 	echo 'failed (bug 2002-02-08-004)'
else	echo 'bug 2002-02-08-004 passing!  update testcase.'
fi
echo $N Checking diffs -r+ with edited gfile ........................$NL
bk edit $Q Mydiffs || exit 1
echo foo >> Mydiffs
bk diffs -r+ Mydiffs > D || exit 1
bk undos > W <<EOF
===== Mydiffs 1.10 vs edited =====
11a12
> foo
EOF
cmp -s D W
if [ $? -ne 0 ]; then echo Failed to get correct diffs.; cat D; exit 1; fi
echo OK
echo $N Checking diff on lines with many carriage returns ...........$NL
echo > a
echo > b
bk diff --ignore-trailing-cr a b > DIFF || {
	echo Fail same
	echo output of diff:
	cat DIFF
	exit 1
}
echo '' > b
bk diff --ignore-trailing-cr a b > DIFF || {
	echo Fail simple
	echo output of diff:
	cat DIFF
	exit 1
}
bk diff --ignore-trailing-cr b a > DIFF || {
	echo Fail simple
	echo output of diff:
	cat DIFF
	exit 1
}
echo '' > b
bk diff --ignore-trailing-cr a b > DIFF || {
	echo Fail multiple cr
	echo output of diff:
	cat DIFF
	exit 1
}
bk diff --ignore-trailing-cr b a > DIFF || {
	echo Fail multiple cr
	echo output of diff:
	cat DIFF
	exit 1
}
echo 'a' > a
echo 'a' > b
bk diff -q --ignore-trailing-cr a b > DIFF && {
	echo Fail multiple cr
	echo output of diff:
	cat DIFF
	exit 1
}
bk diff -q --ignore-trailing-cr b a > DIFF && {
	echo Fail multiple cr
	echo output of diff:
	cat DIFF
	exit 1
}
echo 'a' > a
bk new $Q a
bk edit $Q a
echo 'a' > a
bk clean $Q a || {
	echo Fail clean
	exit 1
}
echo OK
