echo $N Create initial repository and clone .........................$NL
nested server
bk $Q bam server $Q .
bk clone $Q ../server ../clone || exit 1
# clone shouldn't have BAM data yet
test -d ../clone/BitKeeper/BAM && exit 1
echo OK

echo $N Create some binary data and check BAM .......................$NL
cd gdb
BK="`bk bin`/bk"
test $PLATFORM = WIN32 && BK=${BK}.exe
DATA="$HERE"/data
perl -e 'sysread(STDIN, $buf, 81920);
syswrite(STDOUT, $buf, 81920);' < $BK > "$DATA"
cp "$DATA" data
bk new $Q data || exit 1
RK=`bk id | sed 's/|/-/g'`
test -d ../BitKeeper/BAM/$RK || exit 1
bk commit $Q -ybam
cd ..
bk commit $Q -ybam
echo OK

echo $N Clone ensemble with BAM data ................................$NL
cd ..
bk clone $Q server clone2 || exit 1
echo OK

echo $N Create some binary data and check BAM .......................$NL
cd clone
bk pull $Q || exit 1
test -d BitKeeper/BAM && {
	echo should not have bam dir
	find BitKeeper/BAM
	exit 1
}
echo OK

echo $N Create a new component with BAM data ........................$NL
bk setup -f bam_comp || exit 1
cd bam_comp
RK=`bk id | sed 's/|/-/g'`
echo junk > file1
bk new $Q -b file1 || exit
bk commit $Q -ybam2 || exit 1
bk -P commit $Q -ybam2 || exit 1
echo OK

echo $N Pull repo with new BAM component ............................$NL
cd "$HERE"/clone2
bk pull $Q ../clone || exit 1
echo OK

echo $N Check that data from new component was pushed to server .....$NL
# server should have bam data for bam_comp
test -d ../server/BitKeeper/BAM/$RK || exit 1
# but shouldn't have bam_comp itself
test -d ../server/bam_comp && exit 1
echo OK

echo $N Clone of repo with new BAM component ........................$NL
cd ..
bk clone $Q clone clone3 || exit 1
echo OK

echo $N Pushing a updates to non-BAM components with a BAM product ..$NL
cd clone3
echo hi > prod_bam
bk new $Q -b prod_bam || exit 1
bk commit $Q -yprod || exit 1
bk push $Q || exit 1
cd gcc
touch hi > nonbam
bk new $Q nonbam || exit 1
bk commit $Q -ynonbam || exit 1
bk -P commit $Q -yprod_gcc || exit 1
bk -P push $Q || exit 1
echo OK

echo $N Try an rclone ...............................................$NL
cd "$HERE"
P=`port 50000`
bk bkd -q -d -p$P -ikill
bk clone $Q clone3 bk://localhost:$P/clone4 || {
	echo rclone failed
	bk _kill bk://localhost:$P || exit 1
	exit 1
}
bk _kill bk://localhost:$P || exit 1
echo OK
