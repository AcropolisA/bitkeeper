
echo $N Create an ensemble...........................................$NL
nested project
# XXX this fails badly in the current tree, but works enough
#     to complete test
BASEP=`bk changes -r+ -nd:MD5KEY:`
BASEGCC=`cd gcc; bk changes -C -r+ -nd:MD5KEY:`
bk clone $Q  "$HERE"/project "$HERE"/copy 2>ERR|| exit 1
# add some files
cd gcc
for i in 1 2 3
do
	touch file$i
	echo "stuff $i" > file$i
	bk new $Q -y"add" file$i || exit 1
done
bk commit $Q -y"Add $i to file$i" || exit 1
bk -P commit $Q -y"Commit cset in gcc" || exit 1
cd ../gdb
for i in 1 2 3 
do
	touch file$i
	echo "stuff $i" > file$i
	bk new $Q -y"add" file$i || exit 1
	bk commit $Q -y"add file $i" || exit 1
done
bk -P commit $Q -y"add csets to gdb" || exit 1
cd ../../copy/gcc
touch local1
echo "stuff 1" > local1
bk new $Q -yadd local1 || exit 1
bk commit $Q -yaddlocal || exit 1
bk -P commit $Q -ylocal || exit 1
bk edit $Q local1 || exit 1
echo new >> local1
bk delta $Q -ynewlocal || exit 1
bk commit $Q -ynew || exit 1
echo OK

echo $N Run project level changes....................................$NL
# expect on component csets that are committed in project
bk changes  -r+ -qvnd':GFILE: :C:' > OUT || exit 1
cat <<EOF > WANT
ChangeSet local
gcc/ChangeSet addlocal
EOF
cmpfiles OUT WANT
echo OK

echo $N Run project level changes -L ................................$NL
# again only commited stuff
bk changes -L -qvnd':GFILE: :C:' > OUT || exit 1
cat <<EOF > WANT
ChangeSet local
gcc/ChangeSet addlocal
EOF
cmpfiles OUT WANT
echo OK

echo $N Run changes -CL in component ................................$NL
# should compare matching component and show pending csets
bk changes -CL -qvnd':GFILE: :C:' > OUT || exit 1
cat <<EOF > WANT
ChangeSet new
local1 newlocal
ChangeSet addlocal
local1 add
local1 
EOF
cmpfiles OUT WANT
echo OK

echo $N Run changes -CL in product ..................................$NL
cd ..
bk changes -CL -qvnd':GFILE: :C:' > OUT || exit 1
cat <<EOF > WANT
ChangeSet local
gcc/ChangeSet addlocal
EOF
cmpfiles OUT WANT
echo OK

echo $N Check running repogca .......................................$NL
cd gcc
test `bk repogca -5` = $BASEP || {
     echo repogca got wrong key
     bk repogca -k
     exit 1
}
test `bk repogca -C5` = $BASEGCC || {
     echo repogca got wrong key
     bk repogca -C
     bk changes -C
     exit 1
}
echo OK
