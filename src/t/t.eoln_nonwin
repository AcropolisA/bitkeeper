# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2000 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.


# Copyright (c) 2000 Andrew Chang
# Copyright (c) 2002 Rick Smith
# %K%

if [ "$PLATFORM" = "WIN32" ]
then
	echo "For non win32 only ..........................................skipped"
	exit 0
fi

echo $N Create initial repository ...................................$NL
commercial project
if [ ! -d BitKeeper/etc ]; then echo failed to make BitKeeper/etc; exit 1; fi
if bk _test ! -f SCCS/s.ChangeSet; then echo failed to make ChangeSet; exit 1; fi
P=`bk pending | wc -l`
if [ $P -ne 0 ]; then echo files are pending; bk pending; exit 1; fi
echo OK

echo $N Check new and co with files having termination CRLF .........$NL
# create a file with line terminated with CRLF 
# reference file with only LF
printf 'data\r\r\n' > data
echo 'data' > data.ref
bk ci $Q -i data
bk co $Q data || fail
cmp -s data data.ref
if [ $? -ne 0 ]; then echo failed; exit 1; fi
bk edit $Q data || fail
cmp -s data data.ref
if [ $? -ne 0 ]; then echo failed; exit 1; fi
echo OK

echo $N Check edit and co with files having termination CRLF ........$NL
# File is checked out edit already
printf 'data\r\r\n' > data
bk sfiles -c > emptylist
test -s emptylist && fail -f emptylist
printf 'last line\r\r\n' >> data
echo 'last line' >> data.ref
bk ci $Q -m'newlastline' data
bk co $Q data || fail
cmp -s data data.ref
if [ $? -ne 0 ]; then echo failed; exit 1; fi
bk edit $Q data
cmp -s data data.ref
if [ $? -ne 0 ]; then echo failed; exit 1; fi
echo OK

echo $N Check edit and co with files having midline CR ..............$NL
# File is checked out edit already
echo -e 'last line\ranother last line' >> data
cp data data.ref
bk ci $Q -m'anothernewlastline' data
bk co $Q data  || fail
cmp -s data data.ref
if [ $? -ne 0 ]; then echo failed; exit 1; fi
bk edit $Q data
cmp -s data data.ref
if [ $? -ne 0 ]; then echo failed; exit 1; fi
echo OK

echo $N Reproduce a old broken sfile with CRLF in weave .............$NL

cat <<EOF | bk undos -r > testfile
1
2
3
4
5
EOF
cp testfile WANT
_BK_CRNL_BUG=1 bk new $Q testfile || fail
bk get $Q testfile || fail
bk checksum testfile || fail

# we don't fix old bug, so the next line isn't needed
#bk undos < testfile > WANT
# but we do want to check our assumptions about the checked out file
checkfiles testfile WANT

bk -r check -ac || fail
echo OK

echo $N Test hasDiffs with CRLF in weave ............................$NL
bk clean testfile
bk edit $Q testfile || fail
bk sfiles -c > OUT || fail -f OUT
test -s OUT && fail -f OUT should not have modified files
echo OK

echo $N Pull cset with CRLF in weave ................................$NL
bk clone $Q . ../copy || fail
bk commit $Q -yjunk || fail
cd ../copy
bk pull $Q || fail
echo OK
