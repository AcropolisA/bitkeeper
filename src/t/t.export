# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2000 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.

# Copyright (c) 1999 Larry McVoy
# %K%

echo $N Create initial repository ...................................$NL
commercial project
if [ ! -d BitKeeper/etc ]; then echo failed to make BitKeeper/etc; exit 1; fi
if [ ! -f SCCS/s.ChangeSet ]; then echo failed to make ChangeSet; exit 1; fi
P=`bk pending | wc -l`
if [ $P -ne 0 ]; then echo files are pending; bk pending; exit 1; fi
echo OK

echo $N Create first changeset with foo.c and bar.c .................$NL
cd $HERE/project
echo foo.c > foo.c
echo bar.c > bar.c
bk new $Q foo.c bar.c
bk commit $S -SCSET1 -y'foo.c and bar.c'
echo OK

echo $N Create 2nd changeset with a change to bar.c .................$NL
bk edit $Q bar.c
echo bar.c version 2 > bar.c
bk delta $Q -ywhatever bar.c
bk commit $S -SCSET2 -y'bar.c v2'
echo OK

echo $N Create 3rd changeset in which we bk rm foo.c ................$NL
bk rm foo.c
bk commit $S -y'rm foo.c'
if [ -f SCCS/s.foo.c ]
then	echo failed to remove foo.c; exit 1
fi
echo OK

echo $N Export 2nd cset and make sure foo.c is there ................$NL
bk export -rCSET2 ../EXPORT
if [ ! -f ../EXPORT/foo.c ]
then	echo failed to get foo.c; exit 1
fi
echo OK

echo $N Create 4th changeset in which we bk rm -d bar.c .............$NL
bk rm -d bar.c
bk commit $S -y'rm -d bar.c'
if [ -f SCCS/s.bar.c ]
then	echo failed to remove bar.c; exit 1
fi
if [ -f SCCS/s..del-bar.c ]
then	echo failed to remove bar.c into deleted dir; exit 1
fi
echo OK

echo $N Export 2nd cset and make sure bar.c is there ................$NL
rm -rf ../EXPORT
bk export -rCSET2 ../EXPORT
if [ ! -f ../EXPORT/bar.c ]
then	echo failed to get bar.c; exit 1
fi
echo OK

echo $N Set up for include/exclude tests ............................$NL
cd $HERE/project
for i in man src html
do	mkdir $i
done
for i in foo bar blech
do	echo $i > man/${i}.1
	echo $i > src/${i}.c
	echo $i > src/${i}.h
	echo $i > html/${i}.html
done
bk extras | bk new $Q -
bk commit $Q -ywhatever
bk sfiles -gU | bk _sort | while read x
do echo ./$x
done > ../LIST
echo OK

# ===========================================================================

echo $N Exclude src subdirectory ....................................$NL
rm -rf ../EXPORT
bk export -tplain -x'src/*' ../EXPORT
cd ../EXPORT
find . -type f | bk _sort > ../GOT
cd ..
grep -v src/ < LIST > WANT
checkfiles GOT WANT
echo OK

echo $N Exclude man and html subdirectories .........................$NL
cd $HERE/project
rm -rf ../EXPORT
bk export -tplain -x'man/*' -x'html/*' ../EXPORT
cd ../EXPORT
find . -type f | bk _sort > ../GOT
cd ..
grep -v man/ < LIST | grep -v html/ > WANT
checkfiles GOT WANT
echo OK

echo $N Exclude all .c and .h files .................................$NL
cd $HERE/project
rm -rf ../EXPORT
bk export -tplain -x'*.c' -x'*.h' ../EXPORT
cd ../EXPORT
find . -type f | bk _sort > ../GOT
cd ..
grep -v 'src/' < LIST > WANT
checkfiles GOT WANT
echo OK

echo $N Include html pages only .....................................$NL
cd $HERE/project
rm -rf ../EXPORT
bk export -tplain -i'*.html' ../EXPORT
cd ../EXPORT
find . -type f | bk _sort > ../GOT
cd ..
grep 'html/' < LIST > WANT
checkfiles GOT WANT
echo OK

echo $N Exclude all .c and .h files and include man pages ...........$NL
cd $HERE/project
rm -rf ../EXPORT
bk export -tplain -x'*.c' -x'*.h' -i'*.1' ../EXPORT
cd ../EXPORT
find . -type f | bk _sort > ../GOT
cd ..
grep man/ < LIST > WANT
checkfiles GOT WANT
echo OK

echo $N Include all .c and .h files .................................$NL
cd $HERE/project
rm -rf ../EXPORT
bk export -tplain -i'*.c' -i'*.h' ../EXPORT
cd ../EXPORT
find . -type f | bk _sort > ../GOT
cd ..
grep src/ < LIST > WANT
checkfiles GOT WANT
echo OK

echo $N Include all .c and .h files but exclude src/foo.c ...........$NL
cd $HERE/project
rm -rf ../EXPORT
bk export -tplain -i'*.c' -i'*.h' -xsrc/foo.c ../EXPORT
cd ../EXPORT
find . -type f | bk _sort > ../GOT
cd ..
grep src/ < LIST | grep -v foo.c > WANT
checkfiles GOT WANT
echo OK

# =================== Patch tests ===========================================

echo $N Exclude src subdirectory in a patch .........................$NL
cd $HERE/project
bk export -tpatch -x'src/*' > ../PATCH
grep -q b/src/ ../PATCH && {
	echo failed to exclude src directory
	cat ../PATCH
	exit 1
}
echo OK

echo $N Exclude man and html subdirectories in a patch ..............$NL
bk export -tpatch -x'man/*' -x'html/*' > ../PATCH
grep -q b/man/ ../PATCH && {
	echo failed to exclude man directory
	cat ../PATCH
	exit 1
}
grep -q b/html/ ../PATCH && {
	echo failed to exclude html directory
	cat ../PATCH
	exit 1
}
grep -q b/src/ ../PATCH || {
	echo failed to include src directory
	cat ../PATCH
	exit 1
}
echo OK

echo $N Exclude all .c and .h files in a patch ......................$NL
bk export -tpatch -x'*.c' -x'*.h' > ../PATCH
grep -q b/src/ ../PATCH && {
	echo failed to exclude some files
	cat ../PATCH
	exit 1
}
echo OK

echo $N Include html pages only in a patch ..........................$NL
bk export -tpatch -i'*.html' > ../PATCH
grep -q html ../PATCH || {
	echo failed to include html in patch
	cat ../PATCH
	exit 1
}
grep -q b/src/ ../PATCH && {
	echo failed to exclude src directory
	cat ../PATCH
	exit 1
}
grep -q b/man/ ../PATCH && {
	echo failed to exclude man directory
	cat ../PATCH
	exit 1
}
echo OK

echo $N Exclude all .c and .h files and include man pages in a patch.$NL
bk export -tpatch -x'*.c' -x'*.h' -i'*.1' > ../PATCH
grep -q b/src/ ../PATCH && {
	echo failed to exclude src directory
	cat ../PATCH
	exit 1
}
grep -q b/html/ ../PATCH && {
	echo failed to exclude html directory
	cat ../PATCH
	exit 1
}
grep -q b/man/ ../PATCH || {
	echo failed to include man directory
	cat ../PATCH
	exit 1
}
echo OK

echo $N Include all .c and .h files in a patch ......................$NL
bk export -tpatch -i'*.c' -i'*.h' > ../PATCH
grep -q b/man/ ../PATCH && {
	echo failed to exclude man directory
	cat ../PATCH
	exit 1
}
grep -q b/html/ ../PATCH && {
	echo failed to exclude html directory
	cat ../PATCH
	exit 1
}
grep -q b/src/foo.c ../PATCH || {
	echo failed to include src/foo.c
	cat ../PATCH
	exit 1
}
echo OK

echo $N Include all .c and .h files but exclude src/foo.c in a patch.$NL
bk export -tpatch -i'*.c' -i'*.h' -xsrc/foo.c > ../PATCH
grep -q b/src/foo.c ../PATCH && {
	echo failed to exclude src/foo.c
	cat ../PATCH
	exit 1
}
grep -q b/src/foo.h ../PATCH || {
	echo failed to include src/foo.h
	cat ../PATCH
	exit 1
}
echo OK

# XXX - todo, test case where a patch includes a rename

# 2004-02-06-001 - error out if source does not exist
echo $N Export should fail if source+dest specified but no source ...$NL
cd $HERE/project
bk export ../bar $HERE/whoops-plain 2>ERR
test -d $HERE/whoops-plain && {
	echo failed when exporting -tplain
	exit 1
}
echo OK
