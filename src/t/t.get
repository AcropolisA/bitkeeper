# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2000 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.

# Copyright (c) 1999 Larry McVoy
# %K%

SAVE=`bk getuser`
no_logging project
echo Hallo > date
bk admin $Q -n -idate date; rm date
echo $N Check for path in initial checkin ...........................$NL
grep -q '^.cP.*date$' SCCS/s.date
if [ $? -ne 0 ]; then echo No path found.; exit 1; fi
grep -q '^.cPdate$' SCCS/s.date
if [ $? -ne 0 ]; then echo Wrong path found.; exit 1; fi
echo OK
mkdir -p aa/bb/cc/dd
cd aa/bb/cc/dd
echo Hallo > date
bk admin $Q -n -idate date; rm date
echo $N Check for path in sub dir1 ..................................$NL
grep -q '^.cP.*date$' SCCS/s.date
if [ $? -ne 0 ]; then echo No path found.; exit 1; fi
grep -q '^.cPaa/bb/cc/dd/date$' SCCS/s.date
if [ $? -ne 0 ]; then echo Wrong path found.; exit 1; fi
echo OK
cd ../../../..
echo Hallo > aa/bb/cc/dd/date2
bk admin $Q -n -iaa/bb/cc/dd/date2 aa/bb/cc/dd/date2; rm aa/bb/cc/dd/date2
echo $N Check for path in sub dir2 ..................................$NL
grep -q '^.cP.*date2$' aa/bb/cc/dd/SCCS/s.date2
if [ $? -ne 0 ]; then echo No path found.; exit 1; fi
grep -q '^.cPaa/bb/cc/dd/date2$' aa/bb/cc/dd/SCCS/s.date2
if [ $? -ne 0 ]; then echo Wrong path found.; exit 1; fi
echo OK
bk co $Q -l date
echo Hi >> date
bk ci $Q -y date
bk co $Q -l date
echo Hi >> date
bk ci $Q -y date
echo $N Make sure -Gname works ......................................$NL
bk get $S -GA -r1.1 date
bk get $S -G B -r1.2 date
if [ ! -f A ]; then echo Failed to creat A.; exit 1; fi
if [ ! -f B ]; then echo Failed to creat B.; exit 1; fi
if writable B; then echo B is writable; exit 1; fi
if [ -f date ]; then echo Created date and it should not have; exit 1; fi
grep -q Hallo A
if [ $? -ne 0 ]; then echo Bad data in A.; exit 1; fi
grep -q HI A
if [ $? -ne 1 ]; then echo Bad data in A.; exit 1; fi
grep -q Hallo B
if [ $? -ne 0 ]; then echo Bad data in B.; exit 1; fi
grep -q Hi B
if [ $? -ne 0 ]; then echo Bad data in B.; exit 1; fi
echo OK
rm -f A B
echo $N Make sure -Ga/b/c/name works ................................$NL
mkdir -p a/b/c
bk get $S -Ga/b/c/A -r1.1 date
bk get $S -G a/b/c/B -r1.2 date
if [ ! -f a/b/c/A ]; then echo Failed to creat a/b/c/A.; exit 1; fi
if [ ! -f a/b/c/B ]; then echo Failed to creat a/b/c/A.; exit 1; fi
if [ -f date ]; then echo Created date and it should not have; exit 1; fi
if [ -f a/b/c/date ]; then echo Created date and it should not have; exit 1; fi
grep -q Hallo a/b/c/A
if [ $? -ne 0 ]; then echo Bad data in a/b/c/A.; exit 1; fi
grep -q HI a/b/c/A
if [ $? -ne 1 ]; then echo Bad data in a/b/c/A.; exit 1; fi
grep -q Hallo a/b/c/B
if [ $? -ne 0 ]; then echo Bad data in a/b/c/B.; exit 1; fi
grep -q Hi a/b/c/B
if [ $? -ne 0 ]; then echo Bad data in a/b/c/B.; exit 1; fi
echo OK
echo $N Check paths in file .........................................$NL
grep -q '^.cP.*date$' SCCS/s.date
if [ $? -ne 0 ]; then echo No path found.; exit 1; fi
echo OK
echo $N Check hosts in file .........................................$NL
hostname=free.bk
grep -q "^.cH.*$hostname\$" SCCS/s.date
if [ $? -ne 0 ]; then echo No host found.; exit 1; fi
X=`grep -c "^.cH.*$hostname\$" SCCS/s.date`
if [ $X -ne 1 ]; then echo Duplicate hosts.; exit 1; fi
echo OK
echo $N Check zones in file .........................................$NL
zone=`bk zone`
grep -q "^.cZ.*$zone\$" SCCS/s.date
if [ $? -ne 0 ]; then echo No zone found.; exit 1; fi
X=`grep -c "^.cZ.*$zone\$" SCCS/s.date`
if [ $X -ne 1 ]; then echo Duplicate zones; exit 1; fi
echo OK
echo $N Check paths in moved file ...................................$NL
cp SCCS/s.date SCCS/s.moved
bk get $Q -e moved
bk delta $Q -y moved
grep -q '^.cP.*date$' SCCS/s.moved
if [ $? -ne 0 ]; then echo Lost old path.; exit 1; fi
grep -q '^.cP.*moved$' SCCS/s.moved
if [ $? -ne 0 ]; then echo Did not add new path.; exit 1; fi
echo OK
#echo $N Make sure get -b works w/ no -b flag ........................$NL
#bk get $S -eb date
#grep -q '1.3 1.4 ' SCCS/p.date
#if [ $? -ne 0 ]; then echo Failed, bad rev.; exit 1; fi
#bk clean date
#echo OK
echo $N Make sure get -r1.1 works w/ no b flag ......................$NL
bk get $S -er1.1 date
if [ ! -f SCCS/p.date ]; then echo Failed, did not edit file.; exit 1; fi
grep -q '1.1 1.1.1.1 ' SCCS/p.date
if [ $? -ne 0 ]; then echo Failed, bad rev.; exit 1; fi
bk clean date
echo OK
#echo $N Make sure get -b works with -b flag .........................$NL
#bk admin $Q -fb date
#bk get $S -eb date
#grep -q '1.3 1.3.1.1 ' SCCS/p.date
#if [ $? -ne 0 ]; then echo Failed, bad rev.; exit 1; fi
#bk clean date
#echo OK
echo $N Make sure get -g does not get file ..........................$NL
bk get $S -g date
if [ -f date ]; then echo Failed, got file.; exit 1; fi
echo OK
echo $N Make sure get -k does not expand keywords ...................$NL
bk get $S -e date
if [ -f core ]; then echo core dumped; exit 1; fi
echo '@A@ @B@ @D@ @E@ @F@ @G@ @H@ @I@ @L@ @M@ @P@ @R@ @S@ @T@ @U@ @W@ @Y@ @Z@ @@@' | sed s/@/%/g > date
X=`wc date`
bk ci $Q -y date
bk get $S -k date
if [ -f core ]; then echo core dumped; exit 1; fi
if writable date; then echo date is writable and should not be; exit 1; fi
if [ "$X" != "`wc date`" ]; then echo Failed - wrong size.; exit 1; fi
echo OK
echo $N Make sure get does expand keywords ..........................$NL
bk get $S date
if [ -f core ]; then echo core dumped; exit 1; fi
if writable date; then echo date is writable and should not be; exit 1; fi
if [ "$X" = "`wc date`" ]; then echo Failed - wrong size.; exit 1; fi
echo OK
echo $N RCS keywords should fail w/o -fRCS ..........................$NL
bk get $S -e date
echo '$Id$' > date
bk ci $S -y date
bk get $S date
if writable date; then echo date is writable and should not be; exit 1; fi
if [ '$Id$' != "`cat date`" ]; then echo Failed.; exit 1; fi
echo OK
echo $N RCS keywords should work w/ -fRCS ...........................$NL
bk admin $Q -fRCS date
bk get $S date
if writable date; then echo date is writable and should not be; exit 1; fi
if [ '$Id$' = "`cat date`" ]; then echo Failed.; exit 1; fi
echo OK
echo $N Get -ep should fail .........................................$NL
bk get $S -ep date > junk 2>junk2
if [ -f "SCCS/p.date" ]; then echo failed, created p.file; exit 1; fi
echo OK
echo $N Get -eg should remove readonly gfile ........................$NL
bk get $S -eg date
if [ -f "date" ]; then echo failed, did not remove file; exit 1; fi
if writable date; then echo failed, added writable file; exit 1; fi
echo OK
echo $N Make sure get -n works ......................................$NL
echo HI > T
bk ci $Q -i T
if [ "`bk get $S -pn T`" != "T	HI" ]; then echo Failed.; exit 1; fi
echo OK
echo $N Make sure get -m works ......................................$NL
if [ "`bk get $S -pm T`" != "1.1	HI" ]; then echo Failed.; exit 1; fi
echo OK
echo $N Make sure get -u works ......................................$NL
if [ "`bk get $S -pu T`" != "bk	HI" ]; then echo Failed.; exit 1; fi
echo OK
echo $N Make sure get -na works .....................................$NL
echo HI > T
if [ "`bk get $S -pan T`" != "T     | HI" ]; then echo Failed.; exit 1; fi
echo OK
echo $N Make sure get -m works ......................................$NL
if [ "`bk get $S -pam T`" != "1.1   | HI" ]; then echo Failed.; exit 1; fi
echo OK
echo $N Make sure get -u works ......................................$NL
if [ "`bk get $S -pau T`" != "bk    | HI" ]; then echo Failed.; exit 1; fi
echo OK
