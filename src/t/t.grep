# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2000 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.

# Copyright (c) 2003 Andrew Isaacson
# %k%

test "$PLATFORM" = "WIN32" && USER=`bk getuser -r`

BK_YEAR4=1
export BK_YEAR4

echo $N Create initial repository ...................................$NL
commercial project
cat <<EOF > file1
The quick foxy
brown
fox
EOF
bk new $Q file1 || exit 1
mkdir dir1
cat <<EOF > dir1/file2
jumped foxily
over
the lazy
dog
EOF
bk new $Q dir1/file2 || exit 1
mkdir subdir
cd subdir
cat <<EOF > old
blah blah blah
yadda yadda
bitkeeper rocks!
I mean *rocks*
EOF
BK_DATE_TIME_ZONE="98/01/11 20:00:00.000-8:00" bk new $Q old
cat <<EOF > user
blah blah blah
yadda yadda
bitkeeper rocks!
I mean *rocks*
EOF
BK_DATE_TIME_ZONE="04/08/23 13:16:43-8:00" BK_USER=joe BK_HOST=blow.com \
    bk new $Q user
cd ..
echo OK

echo $N grep ........................................................$NL
bk grep fox > OUT || exit 1
cat <<EOF > expected
file1:The quick foxy
file1:fox
EOF
checkfiles OUT expected
echo OK

echo $N recursive grep ..............................................$NL
bk -r grep fox > OUT || exit 1
cat <<EOF > expected
file1:The quick foxy
file1:fox
dir1/file2:jumped foxily
EOF
checkfiles OUT expected
echo OK

echo $N annotated grep -ab ..........................................$NL
bk grep -ab bitkeeper subdir > GOT
cat <<EOF > WANT
old:bitkeeper rocks!
user:bitkeeper rocks!
EOF
checkfiles WANT GOT
echo OK

# XXX - year4
echo $N annotated grep -ad ..........................................$NL
bk grep -ad bitkeeper subdir/old > GOT
cat <<EOF > WANT
1998/01/11:bitkeeper rocks!
EOF
checkfiles WANT GOT
echo OK

echo $N annotated grep -ap ..........................................$NL
bk grep -ap bitkeeper subdir > GOT
cat <<EOF > WANT
subdir/old:bitkeeper rocks!
subdir/user:bitkeeper rocks!
EOF
checkfiles WANT GOT
echo OK

# XXX - need to have an extra delta
echo $N annotated grep -ar ..........................................$NL
bk grep -ar bitkeeper subdir > GOT
cat <<EOF > WANT
1.1:bitkeeper rocks!
1.1:bitkeeper rocks!
EOF
checkfiles WANT GOT
echo OK

echo $N annotated grep -au ..........................................$NL
bk grep -au bitkeeper subdir > GOT
cat <<EOF > WANT
bk/$USER:bitkeeper rocks!
joe/$USER:bitkeeper rocks!
EOF
checkfiles WANT GOT
echo OK

echo $N annotated grep -abdru .......................................$NL
bk grep -abdru bitkeeper subdir > GOT
cat <<EOF > WANT
old:1998/01/11:bk/$USER:1.1:bitkeeper rocks!
user:2004/08/23:joe/$USER:1.1:bitkeeper rocks!
EOF
checkfiles WANT GOT
echo OK

echo $N annotated grep -abdru -n ....................................$NL
bk grep -n -abdru bitkeeper subdir > GOT
cat <<EOF > WANT
3:old:1998/01/11:bk/$USER:1.1:bitkeeper rocks!
3:user:2004/08/23:joe/$USER:1.1:bitkeeper rocks!
EOF
checkfiles WANT GOT
echo OK

echo $N annotated grep -adru -n -H ..................................$NL
bk grep -n -H -adru bitkeeper subdir > GOT
cat <<EOF > WANT
subdir/old:3:1998/01/11:bk/$USER:1.1:bitkeeper rocks!
subdir/user:3:2004/08/23:joe/$USER:1.1:bitkeeper rocks!
EOF
checkfiles WANT GOT
echo OK

echo $N annotated grep -adru -H .....................................$NL
bk grep -H -adru bitkeeper subdir > GOT
cat <<EOF > WANT
subdir/old:1998/01/11:bk/$USER:1.1:bitkeeper rocks!
subdir/user:2004/08/23:joe/$USER:1.1:bitkeeper rocks!
EOF
checkfiles WANT GOT
echo OK

echo $N annotated grep -adpru .......................................$NL
bk grep -apdru bitkeeper subdir > GOT
cat <<EOF > WANT
subdir/old:1998/01/11:bk/$USER:1.1:bitkeeper rocks!
subdir/user:2004/08/23:joe/$USER:1.1:bitkeeper rocks!
EOF
checkfiles WANT GOT
echo OK

echo $N annotated grep -adb .........................................$NL
bk grep -adb bitkeeper subdir > GOT
cat <<EOF > WANT
old:1998/01/11:bitkeeper rocks!
user:2004/08/23:bitkeeper rocks!
EOF
checkfiles WANT GOT
echo OK

echo $N annotated grep -aub .........................................$NL
bk grep -aub bitkeeper subdir > GOT
cat <<EOF > WANT
old:bk/$USER:bitkeeper rocks!
user:joe/$USER:bitkeeper rocks!
EOF
checkfiles WANT GOT
echo OK

echo $N annotated grep -adpru, recursive ............................$NL
bk -r grep -apdru bitkeeper > GOT
cat <<EOF > WANT
subdir/old:1998/01/11:bk/$USER:1.1:bitkeeper rocks!
subdir/user:2004/08/23:joe/$USER:1.1:bitkeeper rocks!
EOF
checkfiles WANT GOT
echo OK

echo $N annotated grep -i -adpru, recursive .........................$NL
bk -Ur grep -i -apdru BITKEEPER > GOT
cat <<EOF > WANT
subdir/old:1998/01/11:bk/$USER:1.1:bitkeeper rocks!
subdir/user:2004/08/23:joe/$USER:1.1:bitkeeper rocks!
EOF
checkfiles WANT GOT
echo OK

echo $N grep -R .....................................................$NL
cat > file <<EOF
line1
line2
line3
EOF
touch anotherfile
bk new $Q file anotherfile
bk edit $Q file
echo line4 >> file
bk delta $Q -ywhatever file
# need to have more than one file to get file name prefixes listed
bk grep -R line file anotherfile > GOT
cat > WANT <<EOF
file:line1
file:line2
file:line3
file:line4
EOF
cmpfiles GOT WANT
echo OK
# fall through to ...

echo $N annotated grep -R -ab .......................................$NL
bk grep -R -ab line file > GOT
cat > WANT <<EOF
file:line1
file:line2
file:line3
file:line4
EOF
cmpfiles GOT WANT
echo OK

echo $N annotated grep -R+ -ab ......................................$NL
bk grep -R+ -ab line file > GOT
cat > WANT <<EOF
file:line4
EOF
cmpfiles GOT WANT
echo OK

echo $N annotated grep -R1.1 -ab ....................................$NL
bk grep -R1.1 -ab line file > GOT
cat > WANT <<EOF
file:line1
file:line2
file:line3
EOF
cmpfiles GOT WANT
echo OK

# echo $N recursive grep -a ...........................................$NL
# bk -r grep -a fox > OUT || exit 1
# cat <<EOF > expected
# The quick foxy
# fox
# jumped foxily
# EOF
# checkfiles OUT expected
# echo OK

GREP=grep
$GREP --version > VERS 2>/dev/null
grep -q 'grep 2.[456789]' VERS || {
	test -x /usr/local/bin/grep && GREP=/usr/local/bin/grep
}
$GREP --version > VERS 2>/dev/null
grep -q 'grep 2.[456789]' VERS || {
	echo This system has a grep which cannot run this test
	echo please install GNU grep 2.4 or later
	cat VERS
	exit 1
}

echo $N 'exactly 2*C lines between matches, must not print "--" ......'$NL
echo ' -nC2' > s1.cmd
cat <<EOF > DATA
match
foo
foo
foo
foo
match
EOF
bk grep -nC2 match DATA > GOT
$GREP -nC2 match DATA > WANT
checkfiles WANT GOT
echo OK

echo $N 'Two matches with overlapping context ........................'$NL
cat <<EOF > DATA
foo
foo
foo
match
foo
foo
match
bar
bar
EOF
bk grep -nC3 match DATA > GOT
$GREP -nC3 match DATA > WANT
checkfiles WANT GOT
echo OK

echo $N 'Two matches with adjacent context ...........................'$NL
cat <<EOF > DATA
foo
foo
foo
match
foo
foo
bar
bar
match
EOF
bk grep -nC2 match DATA > GOT
$GREP -nC2 match DATA > WANT
checkfiles WANT GOT
echo OK

echo $N 'Two matches with one non-printed line between contexts ......'$NL
cat <<EOF > DATA
foo
foo
match
foo
foo
nope
bar
bar
match
EOF
bk grep -nC2 match DATA > GOT
$GREP -nC2 match DATA > WANT
checkfiles WANT GOT
echo OK

echo $N 'First line of file matches ..................................'$NL
cat <<EOF > DATA
match
foo
foo
foo
bar
EOF
bk grep -nC3 match DATA > GOT
$GREP -nC3 match DATA > WANT
checkfiles WANT GOT
echo OK

echo $N 'Third line of file matches ..................................'$NL
cat <<EOF > DATA
foo
foo
match
foo
foo
foo
bar
EOF
bk grep -nC3 match DATA > GOT
$GREP -nC3 match DATA > WANT
checkfiles WANT GOT
echo OK

echo $N 'Last line of file matches ...................................'$NL
cat <<EOF > DATA
bar
bar
bar
foo
foo
foo
match
EOF
bk grep -nC3 match DATA > GOT
$GREP -nC3 match DATA > WANT
checkfiles WANT GOT
echo OK

echo $N 'Two matching lines within C .................................'$NL
cat <<EOF > DATA
bar
foo
foo
foo
match
bar
match
foo
foo
foo
bar
EOF
bk grep -nC3 match DATA > GOT
$GREP -nC3 match DATA > WANT
checkfiles WANT GOT
echo OK

echo $N diff -C matches last line of file 1, do not print file 2 ....$NL
cat <<EOF > f1
foo
foo
foo
match
EOF
cat <<EOF > f2
bar
baz
quux
EOF
bk grep -C3 match f1 f2 > OUT
$GREP -C3 match f1 f2 > WANT
checkfiles OUT WANT
echo OK

echo $N grep file without a trailing newline ........................$NL
echo $NX line without newline$NXL > f3
bk grep line f3 > /dev/null || exit 1
echo OK
