# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2000 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.

# Copyright (c) 1999 Andrew Chang
# %K%

# XXX still need to test propagation of:
# descriptive text
# permissions
# LODs
# per file information (flags, etc.)

echo $N Create initial repository ...................................$NL
commercial project
if [ ! -d BitKeeper/etc ]; then echo failed to make BitKeeper/etc; exit 1; fi
if [ ! -f SCCS/s.ChangeSet ]; then echo failed to make ChangeSet; exit 1; fi
P=`bk pending | wc -l`
if [ $P -ne 0 ]; then echo files are pending; bk pending; exit 1; fi
echo OK
echo $N test idcache update in chaining rename ......................$NL
# commit the config file
mkdir src
cd "$HERE/project/src"
echo foo1 > foo.c
bk ci $Q -i foo.c
bk mv foo.c bar.c
echo foo2 >  foo.c
bk ci $Q -i foo.c
if [ "`bk prs -hr1.0 -d:KEY: bar.c`" = "`bk prs -hr1.0 -d:KEY: foo.c`" ]
then	echo Failed to prevent duplicate root keys
	bk prs -r1.0 -d:KEY:  bar.c fooc.
	exit 1
fi
bk commit $S -y"abc" 
if [ $? != 0 ]
then	echo commit failed
	exit 1
fi
bk rm bar.c
bk commit $S -y"rm"
bk -r check -a || exit 1
echo OK

echo $N corrupt the idcache, should rebuild .........................$NL
cd "$HERE/project"
echo "hi mom" > X
cat X BitKeeper/etc/SCCS/x.id_cache > Y
mv Y BitKeeper/etc/SCCS/x.id_cache
cd "$HERE/project/src"
bk -r check -a 2>OUT || exit 1
grep -q 'Rebuilding idcache' OUT || {
	echo Bad error message
	cat OUT
	exit 1
}
echo OK

bk sane
echo $N No write permission on idcache ..............................$NL
cd "$HERE/project"
echo "hi mom" > X
cat X BitKeeper/etc/SCCS/x.id_cache > Y
cp Y BitKeeper/etc/SCCS/x.id_cache
chmod -w "$HERE/project/BitKeeper/etc/SCCS/x.id_cache"
cd "$HERE/project/src"
bk -r check -a 2>OUT || exit 1
grep -q 'Rebuilding idcache' OUT || {
	echo Bad error message
	cat OUT
	exit 1
}
grep 'hi mom' "$HERE/project/BitKeeper/etc/SCCS/x.id_cache" && {
	echo failed to rewrite cache
	cat "`bk root`"/BitKeeper/etc/SCCS/x.id_cache
	exit 1
}
echo OK

echo $N No write permission on BitKeeper/etc/SCCS ...................$NL
cd "$HERE/project"
echo "hi mom" > X
cat X BitKeeper/etc/SCCS/x.id_cache > Y
cp Y BitKeeper/etc/SCCS/x.id_cache
chmod -w "$HERE/project/BitKeeper/etc/SCCS"
cd "$HERE/project/src"
bk -r check -a 2>OUT && {
	chmod +w "`bk root`"/BitKeeper/etc/SCCS
	echo failed to error about write permission
	cat OUT
	exit 1
}
chmod +w "$HERE/project/BitKeeper/etc/SCCS"
grep -q 'no write permission' OUT || {
	echo Bad error message
	cat OUT
	exit 1
}
echo OK

echo $N Check for extra idcache rebuild for new files ...............$NL
bk idcache 2>/dev/null
cd "$HERE"
bk clone $Q project clone
cd project
echo I hope not > rebuild
bk new $Q rebuild
bk commit $Q -ywhatever
cd ../clone
bk pull >OUT 2>&1
grep -q 'Rebuilding idcache' OUT && {
	echo Failed to short circuit rebuild
	cat OUT
	exit 1
}
echo OK

echo $N Make sure we catch duplicate files ..........................$NL
cd "$HERE/project"
echo catch me > duplicate
bk new $Q duplicate
bk commit $Q -ywhatever
cp SCCS/s.duplicate "$HERE/clone/SCCS/s.catch_me"
cd ../clone
bk pull >OUT 2>&1 && {
	echo failed to exit non zero
	cat OUT
	exit 1
}
grep -q 'Rebuilding idcache' OUT && {
	echo Failed to short circuit rebuild
	cat OUT
	exit 1
}
grep -q 'check: SCCS/s.catch_me should be SCCS/s.duplicate' OUT || {
	echo Failed to catch duplicate
	cat OUT
	exit 1
}
echo OK
