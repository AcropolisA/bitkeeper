# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2000 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.

# $image -u
# $image --upgrade
# $image relative
# $image absolute
# $image
# 
# We pick up the config from dotbk but don't leave it in config.
# We pick up the config from a repo, if present, but don't leave it in config.
# Install/upgrades fail if the license isn't accepted
# Upgrades do not install config files, they leave them.
#
# Not done yet:
# Installs do install embedded config files but no others.
# All files are read-only after the install/upgrade (XXX - leave config?)

BK_INSTALLER=
# Lazy way to get full path
find `bk bin`/utils -name 'bk*.exe' -o -name 'bk*.bin' > /tmp/bk$$
test `wc -l < /tmp/bk$$` -gt 1 && {
	echo You have too many bk images, skipping this test
	cat /tmp/bk$$
	$RM -f /tmp/bk$$
	exit 0
}
test `wc -l < /tmp/bk$$` -eq 1 && BK_INSTALLER=`cat /tmp/bk$$`
$RM /tmp/bk$$
test X$BK_INSTALLER = X && exit 0

echo "license: $BKL_PRO" > c
echo "licsign1: $BKL_P1" >> c
echo "licsign2: $BKL_P2" >> c
echo "licsign3: $BKL_P3" >> c
DOTBK=`bk dotbk`
mv c "$DOTBK"/config || exit 1

echo $N Relative path installation, no config file...................$NL
rm -f "$DOTBK"/accepted
echo y | $BK_INSTALLER relative > OUT 2>&1
grep -q LICENSE OUT || {
	echo Did not prompt for license
	cat OUT
	exit 1
}
test -d relative || {
	echo did not create relative 
	cat OUT
	exit 1
}
test -f relative/config && {
	echo left config file
	cat OUT
	exit 1
}
echo OK

echo $N Absolute path installation, no config file...................$NL
rm -f "$DOTBK"/accepted
echo y | $BK_INSTALLER $HERE/absolute > OUT 2>&1
grep -q LICENSE OUT || {
	echo Did not prompt for license
	cat OUT
	exit 1
}
test -d absolute || {
	echo did not create relative 
	cat OUT
	exit 1
}
test -f absolute/config && {
	echo left config file
	cat OUT
	exit 1
}
echo OK

echo $N Refuse license, should fail and leave no installation .......$NL
rm -f "$DOTBK"/accepted
echo n | $BK_INSTALLER refuse > OUT 2>&1
grep -q LICENSE OUT || {
	echo Did not prompt for license
	cat OUT
	exit 1
}
test -d refuse && {
	echo did not create relative 
	cat OUT
	exit 1
}
echo OK

echo $N Use repo license rather than .bk/config, should work ........$NL
commercial repo
rm -f "$DOTBK"/accepted
mv "$DOTBK"/config $HERE
echo y | $BK_INSTALLER $HERE/use_repo > $HERE/OUT 2>&1
cd $HERE
grep -q LICENSE OUT || {
	echo Did not prompt for license
	cat OUT
	exit 1
}
test -d use_repo || {
	echo did not create use_repo 
	cat OUT
	exit 1
}
echo OK

# Wayne needs to fix in 3.3.x
#
# echo $N Test bk upgrade .............................................$NL
# cd $HERE
# mkdir upgradedir
# cd upgradedir
# `bk bin`/build_upgrade_index.pl $BK_INSTALLER
# cd $HERE/repo
# bk upgrade -i -lbk -f $HERE/upgradedir
# echo OK

echo $N Upgrade with installed config, leave it and it should work ..$NL
rm -f "$DOTBK"/accepted
# XXX - it would be nice if we looked in the destination for the config
# on upgrades.
cp $HERE/config "$DOTBK"/config
chmod +w absolute >/dev/null 2>&1	# SCO's chmod barfs
cp $HERE/config absolute
echo "foo: bar" >> absolute/config
echo y | $BK_INSTALLER -u > OUT 2>&1
cd $HERE
grep -q LICENSE OUT || {
	echo Did not prompt for license
	cat OUT
	exit 1
}
test -f absolute/config || {
	echo should have left config file
	exit 1
}
grep -q "foo: bar" absolute/config || {
	echo stomped on config
	exit 1
}
echo OK

echo $N Embedded license, should leave config file...................$NL
rm -f "$DOTBK"/accepted "$DOTBK"/config
echo "license: $BKL_ACADEMIC" > c
echo "licsign1: $BKL_A1" >> c
echo "licsign2: $BKL_A2" >> c
echo "licsign3: $BKL_A3" >> c
cp $BK_INSTALLER bk-academic
`bk bin`/utils/inskeys bk-academic c > OUT 2>&1
grep -q 'Inserted key of size' OUT || {
	echo failed to run inskeys
	cat OUT
	wc c
	exit 1
}
echo y | ./bk-academic embedded > OUT 2>&1
grep -q LICENSE OUT || {
	echo Did not prompt for license
	cat OUT
	exit 1
}
test -d embedded || {
	echo did not create relative 
	cat OUT
	exit 1
}
test -f embedded/config || {
	echo did not leave config file
	cat OUT
	exit 1
}
echo OK

#####################################################################
# Careful!!!!
#####################################################################
cd $HERE
chmod -R +w * >/dev/null 2>&1	# SCO's chmod barfs
rm -rf *
