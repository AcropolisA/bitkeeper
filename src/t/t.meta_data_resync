# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2000 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.

# Copyright (c) 1999 Andrew Chang
# %K%

echo $N Create initial repository ...................................$NL
no_logging project
if [ ! -d BitKeeper/etc ]; then echo failed to make BitKeeper/etc; exit 1; fi
if [ ! -f SCCS/s.ChangeSet ]; then echo failed to make ChangeSet; exit 1; fi
P=`bk pending | wc -l`
if [ $P -ne 0 ]; then echo files are pending; bk pending; exit 1; fi
echo OK
echo $N Create some data ............................................$NL
mkdir src
cd src
echo foo > foo.c
echo bar > bar.c
echo h > h.h
bk ci $Q -i foo.c bar.c h.h
if [ ! -f SCCS/s.foo.c ]; then echo failed to create history; exit 1; fi
echo OK
echo $N Check pending ...............................................$NL
P=`bk pending | wc -l`
if [ $P -ne 15 ]; then echo wrong pending result $P; bk pending; exit 1; fi
echo OK
echo $N Create a change set .........................................$NL
bk commit $S -a -yCset
P=`bk pending | wc -l`
if [ $P -ne 0 ]; then echo failed to clear pending list; bk pending; exit 1; fi
echo OK
cores
echo $N Create a copy of the project ................................$NL
cd $HERE
bk resync -t $Q project copy
if [ ! -d copy ]; then echo failed to make top level directory; exit 1; fi
cd copy
if [ ! -d BitKeeper/etc ]; then echo failed to make BitKeeper/etc; exit 1; fi
if [ ! -f SCCS/s.ChangeSet ]; then echo failed to make ChangeSet; exit 1; fi
echo OK
echo $N Check propagation of permission .............................$NL
cd $HERE/project/src
bk admin -m-rwx------ foo.c
bk commit $S -yperm1
bk resync -t $Q $HERE/project $HERE/copy
bk resolve -t $Q $HERE/copy
cd $HERE/copy/src
diff $HERE/project/src/SCCS/s.foo.c  $HERE/copy/src/SCCS/s.foo.c
if [ $? -ne 0 ]; then echo failed to propagate permissions; exit 1; fi
echo OK
echo $N Check permission conflict ...................................$NL
cd $HERE/project/src
bk admin -m-rwxr----- foo.c
bk commit $S -yperm2
cd $HERE/copy/src
bk admin -m-rwx-w---- foo.c
bk commit $S -yperm3
bk resync -t $Q $HERE/project $HERE/copy
bk resolve -t $Q $HERE/copy 2>/dev/null 1>&2 <<EOF
r
u
EOF
MODE=`bk prs -h -r1.4 -d":MODE:" foo.c`
if [ "$MODE" != "100740" ]
then	echo failed with mode $MODE
	bk prs -h -d':REV: :MODE:\n' foo.c
	exit 1
fi
echo OK
echo $N Check propagation of flags ..................................$NL
cd $HERE
rm -rf $HERE/copy
bk clone $Q $HERE/project $HERE/copy
cd $HERE/project/src
bk admin $Q -fEXPAND1 -fRCS -fYEAR4 bar.c
bk commit $Q -yabc
# save a copy of SCCS/s.bar.c for the rollback test
cp SCCS/s.bar.c $HERE/ref
bk resync -t $Q $HERE/project $HERE/copy
bk resolve -t $Q $HERE/copy
cd $HERE/copy/src
diff $HERE/project/src/SCCS/s.bar.c  $HERE/copy/src/SCCS/s.bar.c
if [ $? -ne 0 ]; then echo failed; exit 1; fi
cd $HERE/project/src
bk admin $Q -FRCS -FYEAR4 bar.c
bk commit $Q -yabc
bk resync -t $Q $HERE/project $HERE/copy
bk resolve -t $Q $HERE/copy
cd $HERE/copy/src
diff $HERE/project/src/SCCS/s.bar.c  $HERE/copy/src/SCCS/s.bar.c
if [ $? -ne 0 ]; then echo failed; exit 1; fi
echo OK
echo $N Check rollback of flags .....................................$NL
bk clone $Q -r1.5 $HERE/copy $HERE/copy2
cd $HERE/copy2/src
diff $HERE/copy2/src/SCCS/s.bar.c  $HERE/ref
if [ $? -ne 0 ]; then echo failed; exit 1; fi
echo OK
echo $N Check propagation of flags \& permission .....................$NL
cd $HERE/project/src
bk admin $Q -fRCS -m-rwx-r--r-- bar.c
bk commit $Q -yabc
bk resync -t $Q $HERE/project $HERE/copy
bk resolve -t $Q $HERE/copy
cd $HERE/copy/src
diff $HERE/project/src/SCCS/s.bar.c  $HERE/copy/src/SCCS/s.bar.c
if [ $? -ne 0 ]; then echo failed; exit 1; fi
echo OK
echo $N Check propagation of text field .............................$NL
cd $HERE/project/src
echo "this is a text entry line 1" > text
echo "this is a text entry line 2" >> text
bk admin -ttext h.h
bk commit $Q -yabc
bk resync -t $Q $HERE/project $HERE/copy
bk resolve -t $Q $HERE/copy
cd $HERE/copy/src
diff $HERE/project/src/SCCS/s.h.h  $HERE/copy/src/SCCS/s.h.h
if [ $? -ne 0 ]; then echo failed; exit 1; fi
cd $HERE/project/src
bk admin -T h.h
bk commit $Q -yabc
bk resync -t $Q $HERE/project $HERE/copy
bk resolve -t $Q $HERE/copy
cd $HERE/copy/src
diff $HERE/project/src/SCCS/s.h.h  $HERE/copy/src/SCCS/s.h.h
if [ $? -ne 0 ]; then echo failed; exit 1; fi
echo OK
echo $N Check propagation of text, flags \& permission ...............$NL
cd $HERE/project/src
bk admin -ttext -fYEAR4 -m-rwx-w--w- h.h
bk commit $Q -yabc
bk resync -t $Q $HERE/project $HERE/copy
bk resolve -t $Q $HERE/copy
cd $HERE/copy/src
diff $HERE/project/src/SCCS/s.h.h  $HERE/copy/src/SCCS/s.h.h
if [ $? -ne 0 ]; then echo failed; exit 1; fi
bk prs -r+ -h -d':MODE:\n$each(:FD:){(:FD:)\n}' h.h > CMP1
cat > X <<EOF
100722
this is a text entry line 1
this is a text entry line 2
EOF
bk undos X > CMP2
cmp CMP1 CMP2
if [ $? -ne 0 ]
then	echo failed
	sdiff -w80 CMP1 CMP2
	cat -n CMP1
	cat -n CMP2
	exit 1
fi
echo OK
echo $N Check flags conflict ........................................$NL
cd $HERE/project/src
bk admin $Q -fEXPAND1 -fRCS -fYEAR4 foo.c
bk commit $S -yperm2
cd $HERE/copy/src
bk admin $Q -fEXPAND1 foo.c
bk commit $S -yperm3
bk resync -t $Q $HERE/project $HERE/copy
cd $HERE
tar cf TAR copy project
bk resolve -t $Q $HERE/copy 2>/dev/null 1>&2 <<EOF
r
u
EOF
cd $HERE/copy/src
FLAGS=`bk prs -h -r+ -d:FLAGS: foo.c`
if [ "$FLAGS" != "YEAR4,RCS,SCCS,SINGLE,EXPAND1" ]
then	echo failed with mode $FLAGS
	bk prs -h -d':REV:\t:FLAGS:\n' foo.c
	exit 1
fi
echo OK
echo $N Check flags conflict2 .......................................$NL
cd $HERE/project/src
bk admin $Q -FSCCS foo.c
bk commit $S -yxflags2
cd $HERE/copy/src
bk edit $Q foo.c
echo "new-content" >> foo.c
bk ci $Q -y"new-content" foo.c
bk commit $S -y"new-content"
bk resync -t $Q $HERE/project $HERE/copy
cd $HERE
bk resolve -t $Q $HERE/copy 2>/dev/null 1>&2 <<EOF
r
m
C
EOF
cd $HERE/copy/src
FLAGS=`bk prs -h -r+ -d:FLAGS: foo.c`
if [ "$FLAGS" != "YEAR4,RCS,SINGLE,EXPAND1" ]
then	echo failed with mode $FLAGS
	bk prs -h -d':REV:\t:FLAGS:\n' foo.c
	exit 1
fi
echo OK
echo $N Check flags conflict3 .......................................$NL
cd $HERE/project/src
bk edit $Q foo.c
echo "new-content2" >> foo.c
bk ci $Q -y"new-content2" foo.c
bk commit $S -y"new-content2"
cd $HERE/copy/src
bk admin $Q -FRCS foo.c
bk commit $S -yxflags3
bk resync -t $Q $HERE/project $HERE/copy
cd $HERE
bk resolve -t $Q $HERE/copy 2>/dev/null 1>&2 <<EOF
l
m
C
EOF
cd $HERE/copy/src
FLAGS=`bk prs -h -r+ -d:FLAGS: foo.c`
if [ "$FLAGS" != "YEAR4,SINGLE,EXPAND1" ]
then	echo failed with mode $FLAGS
	bk prs -h -d':REV:\t:FLAGS:\n' foo.c
	exit 1
fi
echo OK
