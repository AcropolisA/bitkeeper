# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2000 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.

echo $N Mark a file as MONOTONIC, add a delta, check for danglers ...$NL
no_logging project
bk admin -fMONOTONIC BitKeeper/etc/config
bk edit $Q BitKeeper/etc/config
echo "bogus1: bogus" >> BitKeeper/etc/config
bk delta $Q -ywhatever BitKeeper/etc/config
test `bk prs -hnd'$if(:DANGLING:){:I:}' BitKeeper/etc/config | wc -l` -eq 0 || {
	echo should not have had any dangling deltas
	bk prs -hnd'$if(:DANGLING:){:I:}' BitKeeper/etc/config
	exit 1
}
bk commit $Q -ywhatever
echo OK

echo $N Clone -r backwards a forward file, check for danglers .......$NL
cd $HERE
bk clone $Q -r1.1 project clone || exit 1
cd clone
test `bk prs -hnd'$if(:DANGLING:){:I:}' BitKeeper/etc/config | wc -l` -eq 2 || {
	echo should have had 2 dangling deltas
	bk prs -hnd'$if(:DANGLING:){:I:}' BitKeeper/etc/config
	exit 1
}
echo OK

echo $N Check flags, should have MONOTONIC ..........................$NL
case `bk prs -r+ -hnd':FLAGS:' BitKeeper/etc/config` in
    *MONOTONIC*) ;;
    *)	echo Bad flags
    	bk prs -r+ -hnd':FLAGS:' BitKeeper/etc/config
	exit 1;;
esac
echo OK

echo $N Pull to fill in missing csets, check for no danglers ........$NL
bk pull $Q || exit 1
test `bk prs -hnd'$if(:DANGLING:){:I:}' BitKeeper/etc/config | wc -l` -eq 0 || {
	echo should have had 0 dangling deltas
	bk prs -hnd'$if(:DANGLING:){:I:}' BitKeeper/etc/config
	exit 1
}
echo OK

echo $N Clone a repo with uncommitted deltas, should be stripped ....$NL
cd $HERE/project
WANT=`bk prs -hr+ -nd:I: BitKeeper/etc/config`
bk edit $Q BitKeeper/etc/config
bk delta -ypending $Q BitKeeper/etc/config
TOP=`bk prs -hr+ -nd:I: BitKeeper/etc/config`
cd $HERE
bk clone $Q project pending || exit 1
cd pending
test `bk prs -hr+ -nd:I: BitKeeper/etc/config` != $TOP || {
	echo Failed to strip pending deltas
	exit 1
}
test `bk prs -hnd'$if(:DANGLING:){:I:}' BitKeeper/etc/config | wc -l` -eq 0 || {
	echo should not have dangling deltas
	bk prs -hnd'$if(:DANGLING:){:I:}' BitKeeper/etc/config
	exit 1
}
echo OK

echo $N Clone -r backwards a forward file, check for danglers .......$NL
cd $HERE
bk clone $Q -r1.1 project clone2 || exit 1
cd clone2
test `bk prs -hnd'$if(:DANGLING:){:I:}' BitKeeper/etc/config | wc -l` -eq 2 || {
	echo should have had 2 dangling deltas
	bk prs -hnd'$if(:DANGLING:){:I:}' BitKeeper/etc/config
	exit 1
}
echo OK

# XXX - this is a pretty pointless test, we're just making sure we don't send
# the dangling delta in a pull, which has little to do with danlgers.
echo $N Pull to fill in missing csets, check for no danglers ........$NL
bk pull $Q || exit 1
test `bk prs -hnd'$if(:DANGLING:){:I:}' BitKeeper/etc/config | wc -l` -eq 0 || {
	echo should have had 0 dangling deltas
	bk prs -hnd'$if(:DANGLING:){:I:}' BitKeeper/etc/config
	exit 1
}
GOT=`bk prs -hr+ -nd:I: BitKeeper/etc/config`
test $GOT = $WANT || {
	echo Wrong top delta WANT=$WANT GOT=$GOT
	bk prs BitKeeper/etc/config
	exit 1
}
echo OK

echo $N Pull csets which partially fill in danglers, check marks ....$NL
cd $HERE/project
bk commit $Q -ywhatever
bk edit $Q BitKeeper/etc/config
echo "bogus2: bogus" >> BitKeeper/etc/config
bk delta $Q -ywhatever BitKeeper/etc/config
TOP=`bk prs -hr+ -nd':I:' BitKeeper/etc/config`
bk commit $Q -ywhatever
cd $HERE
bk clone $Q -r1.3 project middle
cd middle
test $TOP = `bk prs -hr+ -nd':I:' BitKeeper/etc/config` || {
	echo should have had $TOP at the top
	bk prs BitKeeper/etc/config
	exit 1
}
bk prs -hnd'$if(:DANGLING:){:GFILE:|:I:}' BitKeeper/etc/config | 
    bk stripdel -dC $Q -
test `bk prs -hnd'$if(:DANGLING:){:I:}' BitKeeper/etc/config | wc -l` -eq 0 || {
	echo should have had 0 dangling deltas
	bk prs -hnd'$if(:DANGLING:){:I:}' BitKeeper/etc/config
	exit 1
}
DELTAS=`bk prs -hnd':I:' BitKeeper/etc/config | wc -l`
cd $HERE
bk clone $Q -r1.1 project lots
tar cf TAR lots
cd lots
test `bk prs -hr+ -nd':I:' BitKeeper/etc/config` = $TOP || {
	echo should have had $TOP at the top
	bk prs BitKeeper/etc/config
	exit 1
}
test `bk prs -hnd':I:' BitKeeper/etc/config | wc -l` -gt $DELTAS || {
	echo Repo lots should have had more deltas than repo middle
	echo WANT=$DELTAS
	get GOT=`bk prs -hnd':I:' BitKeeper/etc/config | wc -l`
	exit 1
}
BEFORE=`bk prs -hnd'$if(:DANGLING:){:I:}' BitKeeper/etc/config | wc -l`
bk pull $Q ../middle || exit 1
AFTER=`bk prs -hnd'$if(:DANGLING:){:I:}' BitKeeper/etc/config | wc -l`
test $BEFORE -gt $AFTER || {
	echo should have filled in some danglers
	echo BEFORE=$BEFORE AFTER=$AFTER
	exit 1
}
echo OK

echo $N Pull csets which fill in the rest of the danglers, check ....$NL
bk pull $Q $HERE/project || exit 1
test `bk prs -hnd'$if(:DANGLING:){:I:}' BitKeeper/etc/config | wc -l` -eq 0 || {
	echo should have had 0 dangling deltas
	bk prs -hnd'$if(:DANGLING:){:I:}' BitKeeper/etc/config
	bk parent
	bk difftool BitKeeper/etc/SCCS/s.config $HERE/project/BitKeeper/etc/SCCS/s.config
	exit 1
}
echo OK

echo $N Remove MONOTONIC flag, clone -r, should roll backwards ......$NL
cd $HERE/project
bk admin -FMONOTONIC BitKeeper/etc/config
bk commit -ynormal $Q
cd $HERE
bk clone -r1.1 $Q project normal
cd normal
test `bk prs -hr+ -nd:I: BitKeeper/etc/config` = 1.1 || {
	echo Failed to roll config file backwards
	exit 1
}
echo OK

echo $N Simulate editing a forward file by hand .....................$NL
cd $HERE
rm -rf lots
tar xf TAR
cd lots
test `bk prs -hnd'$if(:DANGLING:){:I:}' BitKeeper/etc/config | wc -l` -eq 0 && {
	echo should have had dangling deltas
	exit 1
}
bk edit $Q BitKeeper/etc/config
echo whatever >> BitKeeper/etc/config
bk unlock -f -p BitKeeper/etc/config
REV=`bk prs -hnd'$unless(:DANGLING:){:I:}' BitKeeper/etc/config | tail -1`
bk _get $Q -ger$REV BitKeeper/etc/config
bk delta $Q -yaddition BitKeeper/etc/config || exit 1
bk prs -hnd'$if(:DANGLING:){:GFILE:|:I:}' BitKeeper/etc/config | 
    bk stripdel -dC $Q -
test `bk prs -hnd'$if(:DANGLING:){:I:}' BitKeeper/etc/config | wc -l` -eq 0 || {
	echo failed to strip all danglers
	exit 1
}
bk renumber $Q BitKeeper/etc/config
bk -r check -ac || exit 1
echo OK

echo $N Edit a MONOTONIC file, delta it, should strip danglers ......$NL
cd $HERE
rm -rf lots
tar xf TAR
cd lots
test `bk prs -hnd'$if(:DANGLING:){:I:}' BitKeeper/etc/config | wc -l` -eq 0 && {
	echo should have had dangling deltas
	exit 1
}
bk edit $Q BitKeeper/etc/config
echo whatever >> BitKeeper/etc/config
bk delta $Q -yaddition BitKeeper/etc/config || exit 1
test `bk prs -hnd'$if(:DANGLING:){:I:}' BitKeeper/etc/config | wc -l` -eq 0 || {
	echo should not have had dangling deltas
	bk prs -hnd'$if(:DANGLING:){:I:}' BitKeeper/etc/config
	exit 1
}
echo OK

echo $N Edit a MONOTONIC file, change it, get diffs .................$NL
cd $HERE
rm -rf project
no_logging project
bk admin -fMONOTONIC BitKeeper/etc/config
for i in 1 2 3
do	bk edit $Q BitKeeper/etc/config
	echo "bogus${i}: bogus" >> BitKeeper/etc/config
	bk delta $Q -ybogus$i BitKeeper/etc/config
	bk commit $Q -ybogus$i
done
cd $HERE
bk clone $Q -r1.1 project clean
cd clean
test `bk prs -hnd'$if(:DANGLING:){:I:}' BitKeeper/etc/config | wc -l` -eq 0 && {
	echo should have had dangling deltas
	exit 1
}
bk edit $Q BitKeeper/etc/config
test -w BitKeeper/etc/config || exit 1
echo foo >> BitKeeper/etc/config
test `bk diffs -h BitKeeper/etc/config | wc -c` -eq 0 && {
	echo should have had diffs
	bk diffs -h BitKeeper/etc/config
	exit 1
}
echo OK

echo $N Unedit, re-edit, run diffs, should be empty .................$NL
bk unedit $Q BitKeeper/etc/config
test -w BitKeeper/etc/config && exit 1
bk edit $Q BitKeeper/etc/config
test -w BitKeeper/etc/config || exit 1
test `bk diffs -h BitKeeper/etc/config | wc -c` -eq 0 || {
	echo had diffs
	bk diffs -h BitKeeper/etc/config
	exit 1
}
echo OK

echo $N Run diffs against real parent, should have diffs ............$NL
PARENT=`bk prs -hnd'$unless(:DANGLING:){:I:}' BitKeeper/etc/config | head -1`
bk get $Q -kpr+ BitKeeper/etc/config > TOP
cmp -s TOP BitKeeper/etc/config || exit 1
bk get $Q -kpr$PARENT BitKeeper/etc/config > PARENT
cmp -s PARENT BitKeeper/etc/config && exit 1
test `bk diffs -hr$PARENT BitKeeper/etc/config | wc -c` -eq 0 && {
	echo should have had diffs against $PARENT
	bk diffs -r$PARENT BitKeeper/etc/config
	echo real diffs
	diff PARENT TOP
	echo 1.2 diffs
	bk diffs -r1.2 BitKeeper/etc/config
	exit 1
}
echo OK

echo $N Run clean, should clean it ..................................$NL
bk clean $Q BitKeeper/etc/config || exit 1
test -f BitKeeper/etc/config && {
	echo failed to clean file without changes
	exit 1
}
echo OK

echo $N Make sure sfiles -c thinks it is unmodified .................$NL
bk edit $Q BitKeeper/etc/config
test `bk sfiles -c BitKeeper/etc/config | wc -c` -eq 0 || {
	echo sfiles thinks it is modified
	exit 1
}
echo OK

echo $N Edit a MONOTONIC file, put non-dangling parent in it, clean .$NL
cd $HERE
rm -rf lots
tar xf TAR
cd lots
test `bk prs -hnd'$if(:DANGLING:){:I:}' BitKeeper/etc/config | wc -l` -eq 0 && {
	echo should have had dangling deltas
	exit 1
}
bk edit $Q BitKeeper/etc/config
PARENT=`bk prs -hnd'$unless(:DANGLING:){:I:}' BitKeeper/etc/config | head -1`
bk get $Q -kpr$PARENT BitKeeper/etc/config > XXX
cmp -s BitKeeper/etc/config XXX && exit 1
mv XXX BitKeeper/etc/config
bk clean $Q BitKeeper/etc/config || exit 1
test -f BitKeeper/etc/config && {
	echo failed to clean file without changes
	exit 1
}
echo OK

echo $N Make sure sfiles -c thinks it is unmodified .................$NL
bk edit $Q BitKeeper/etc/config
bk get $Q -kpr$PARENT BitKeeper/etc/config > XXX
cmp -s BitKeeper/etc/config XXX && exit 1
mv XXX BitKeeper/etc/config
test `bk sfiles -c BitKeeper/etc/config | wc -c` -eq 0 || {
	echo sfiles thinks it is modified
	exit 1
}
echo OK

echo $N Make sure we cannot remove the MONOTONIC flag with danglers .$NL
cd $HERE
rm -rf lots
tar xf TAR
cd lots
test `bk prs -hnd'$if(:DANGLING:){:I:}' BitKeeper/etc/config | wc -l` -eq 0 && {
	echo should have had dangling deltas
	exit 1
}
bk admin -fMONOTONIC BitKeeper/etc/config 2> ERR && {
	echo should have failed
	exit 1
}
grep -q '(monotonic)' ERR || {
	echo bad error message
	cat ERR
}
echo OK
