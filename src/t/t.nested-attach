# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2009 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
#
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.

echo $N Setup .......................................................$NL
cd "$HERE"
commercial bam_server
cd ..
fresh_commercial standalone1
bk bam server $Q ../bam_server
echo bam > bam
bk new $Q -b bam
echo file1 >file1
bk new -q file1 || exit 1
bk commit -q -y'add file1' || exit 1
bk bam push $Q || fail
bk bam clean -a $Q || fail
cd "$HERE"
fresh_commercial standalone2
cd "$HERE"
nested nested1
# test attach where product has no BAM dir initially
test -d BitKeeper/BAM && fail product BAM directory there
bk attach -q "$HERE/standalone1" component1 || exit 1
bk -qs -r check -ac || fail
test -d component1/BitKeeper/BAM && fail BAM directory still there
cd component1
bk bam check $Q || fail
cd "$HERE"
nested nested2
cd "$HERE"
bk bkd -q -aPORT -ikill || exit 1
P=`cat PORT`
trap "bk _kill bk://localhost:$P" 0
echo OK

echo $N Test not in a repo error ....................................$NL
cd "$HERE"
bk attach "$HERE/standalone2" 2>GOT && {
	echo should have failed
	cat GOT
	exit 1
}
grep -q 'not in a product' GOT || {
	echo unexpected output
	cat GOT
	exit 1
}
echo OK

echo $N Test not in a product error .................................$NL
cd "$HERE/standalone1"
bk attach "$HERE/standalone2" 2>GOT && {
	echo should have failed
	cat GOT
	exit 1
}
grep -q 'not in a product' GOT || {
	echo unexpected output
	cat GOT
	exit 1
}
echo OK

echo $N Attach to inside a non-existent dir .........................$NL
cd "$HERE/nested1"
bk attach -q "$HERE/standalone1" "$HERE/does-not-exist" 2>GOT && {
	echo should have failed
	exit 1
}
echo OK

echo $N Attach to path under a non-existent dir .....................$NL
cd "$HERE/nested1"
bk attach -q "$HERE/standalone1" "$HERE/does-not-exist/a/b/c" 2>GOT && {
	echo should have failed
	exit 1
}
echo OK

echo $N Attach to inside a non-repo .................................$NL
cd "$HERE"
mkdir not-a-repo || exit 1
bk attach -q "$HERE/standalone1" "$HERE/not-a-repo" 2>GOT && {
	echo should have failed
	exit 1
}
echo OK

echo $N Attach to path under a non-repo .............................$NL
bk attach -q "$HERE/standalone1" "$HERE/not-a-repo/a/b/c" 2>GOT && {
	echo should have failed
	exit 1
}
echo OK

echo $N Attach to inside a non-product ..............................$NL
cd "$HERE"
bk attach -q "$HERE/standalone1" "$HERE/standalone2" 2>GOT && {
	echo should have failed
	exit 1
}
echo OK

echo $N Attach to path under a non-product ..........................$NL
cd "$HERE"
bk attach -q "$HERE/standalone1" "$HERE/standalone2/a/b/c" 2>GOT && {
	echo should have failed
	exit 1
}
echo OK

echo $N Test non-local destination error ............................$NL
cd "$HERE/nested1"
bk attach "$HERE/standalone2" bk://localhost/bad 2>GOT && {
	echo should have failed
	cat GOT
	exit 1
}
grep -q 'destination must be local' GOT || {
	echo unexpected output
	cat GOT
	exit 1
}
echo OK

echo $N Test attaching a product error ..............................$NL
cd "$HERE/nested1"
bk attach "$HERE/nested2" 2>GOT && {
	echo should have failed
	cat GOT
	exit 1
}
grep -q 'cannot attach a product' GOT || {
	echo unexpected output
	cat GOT
	exit 1
}
echo OK

echo $N Test attaching a component in same product error ............$NL
cd "$HERE/nested1"
bk attach component1 component2 2>GOT && {
	echo should have failed
	cat GOT
	exit 1
}
grep -q 'clone of a component is not allowed' GOT || {
	echo unexpected output
	cat GOT
	exit 1
}
echo OK

echo $N Test attaching a component in different product error .......$NL
cd "$HERE/nested2"
bk attach "$HERE/nested1/component1" 2>GOT && {
	echo should have failed
	cat GOT
	exit 1
}
grep -q 'clone of a component is not allowed' GOT || {
	echo unexpected output
	cat GOT
	exit 1
}
echo OK

echo $N Test -C in clone command error ..............................$NL
cd "$HERE"
bk clone -C nested1 bad 2>GOT && {
	echo should have failed
	cat GOT
	exit 1
}
grep -q '\-C valid only in attach command' GOT || {
	echo unexpected output
	cat GOT
	exit 1
}
echo OK

echo $N Test -C in detach command error .............................$NL
cd "$HERE/nested1"
bk detach -C component1 bad 2>GOT && {
	echo should have failed
	cat GOT
	exit 1
}
grep -q '\-C valid only in attach command' GOT || {
	echo unexpected output
	cat GOT
	exit 1
}
echo OK

echo $N Test attach -N errors .......................................$NL
cd "$HERE"
bk clone -N standalone1 bad 2>GOT && exit 1
grep -q "\-N valid only in attach command" GOT || exit 1
cd nested1
touch not-a-dir
bk attach -N not-a-dir 2>GOT && exit 1
grep -q "not a BitKeeper repository" GOT || exit 1
mkdir not-a-repo
cd not-a-repo
bk attach -N not-a-dir 2>GOT && exit 1
grep -q "not a BitKeeper repository" GOT || exit 1
cd ..
bk detach -N component1 ../bad 2>GOT && exit 1
grep -q "\-N valid only in attach command" GOT || exit 1
bk attach -N -Burl ../standalone1 2>GOT && exit 1
grep -q "\-N illegal with other options" GOT || exit 1
bk attach -N -p ../standalone1 2>GOT && exit 1
grep -q "\-N illegal with other options" GOT || exit 1
bk attach -N -r1.1 ../standalone1 2>GOT && exit 1
grep -q "\-N illegal with other options" GOT || exit 1
bk attach -N -sbad ../standalone1 2>GOT && exit 1
grep -q "\-N illegal with other options" GOT || exit 1
bk attach -N bk://localhost/bad 2>GOT && exit 1
grep -q "source must be local" GOT || exit 1
bk attach -N ../standalone1 bad 2>GOT && exit 1
grep -q "only one repo valid with -N" GOT || exit 1
echo OK

echo $N Test component already there error ..........................$NL
cd "$HERE/nested1"
bk attach "$HERE/standalone1" component1 2>GOT 1>&1 && {
	echo should have failed
	cat GOT
	exit 1
}
grep -q 'component1 exists and is not empty' GOT || {
	echo unexpected output
	cat GOT
	exit 1
}
echo OK

echo $N Basic attach functionality ..................................$NL
cd "$HERE/nested2"
echo bam > bam
bk new $Q -b bam
test -d BitKeeper/BAM || fail product BAM directory not there
bk commit $Q -ybam
# test attach where product has BAM dir initially
bk attach -q "$HERE/standalone1" component1 2>GOT 1>&2 || {
	echo should have worked
	cat GOT
	exit 1
}
bk -qs -r check -ac || fail
test -d component1/BitKeeper/BAM && fail BAM directory still there
bk comps | grep -q component1 || exit 1
cd component1 || exit 1
bk cat file1 >GOT || exit 1
cat <<EOF >WANT
file1
EOF
cmpfiles GOT WANT
test "`bk log -d:REV: -r+ ChangeSet`" = "1.2" || {
	echo bad cset rev
	exit 1
}
echo OK

echo $N Check 'attach <dir> <dir>' functionality ......................$NL
cd "$HERE"
bk clone -q standalone1 nested2/dir1 || exit 1
cd nested2
bk attach -q dir1 component2 2>GOT 1>&2 || {
	echo should have worked
	cat GOT
	exit 1
}
bk comps | grep -q component2 || exit 1
cd component2 || exit 1
bk cat file1 >GOT || exit 1
cat <<EOF >WANT
file1
EOF
cmpfiles GOT WANT
echo OK

echo $N Check 'attach <dir> <path>' functionality .....................$NL
cd "$HERE/nested2"
bk attach -q dir1 a/b/component2b 2>GOT 1>&2 || {
	echo should have worked
	cat GOT
	exit 1
}
bk comps | grep -q component2b || exit 1
cd a/b/component2b || exit 1
bk cat file1 >GOT || exit 1
cat <<EOF >WANT
file1
EOF
cmpfiles GOT WANT
echo OK

echo $N Check 'attach <dir> <fullpath>' functionality .................$NL
cd "$HERE/nested2"
bk attach -q dir1 "$HERE/nested2/c/d/component2c" 2>GOT 1>&2 || {
	echo should have worked
	cat GOT
	exit 1
}
bk comps | grep -q component2c || exit 1
cd c/d/component2c || exit 1
bk cat file1 >GOT || exit 1
cat <<EOF >WANT
file1
EOF
cmpfiles GOT WANT
echo OK

echo $N Check 'attach <fullpath> <dir>' functionality .................$NL
cd "$HERE/nested2"
bk attach -q "$HERE/standalone1" component3 2>GOT 1>&2 || {
	echo should have worked
	cat GOT
	exit 1
}
bk comps | grep -q component3 || exit 1
cd component3 || exit 1
bk cat file1 >GOT || exit 1
cat <<EOF >WANT
file1
EOF
cmpfiles GOT WANT
echo OK

echo $N Check 'attach <fullpath> <path>' functionality ................$NL
cd "$HERE/nested2"
bk attach -q "$HERE/standalone1" e/f/component3b 2>GOT 1>&2 || {
	echo should have worked
	cat GOT
	exit 1
}
bk comps | grep -q component3b || exit 1
cd e/f/component3b || exit 1
bk cat file1 >GOT || exit 1
cat <<EOF >WANT
file1
EOF
cmpfiles GOT WANT
echo OK

echo $N Check 'attach <fullpath> <fullpath>' functionality ............$NL
cd "$HERE/nested2"
bk attach -q "$HERE/standalone1" "$HERE/nested2/component4" 2>GOT 1>&2 || {
	echo should have worked
	cat GOT
	exit 1
}
bk comps | grep -q component4 || exit 1
cd component4 || exit 1
bk cat file1 >GOT || exit 1
cat <<EOF >WANT
file1
EOF
cmpfiles GOT WANT
echo OK

echo $N Check 'attach <remote>' functionality .........................$NL
cd "$HERE/nested2"
bk attach -q "bk://localhost:$P/standalone1" 2>GOT 1>&2 || {
	echo should have worked
	cat GOT
	exit 1
}
bk comps | grep -q standalone1 || exit 1
cd standalone1 || exit 1
bk cat file1 >GOT || exit 1
cat <<EOF >WANT
file1
EOF
cmpfiles GOT WANT
echo OK

echo $N Check 'attach <remote> <dir>' functionality ...................$NL
cd "$HERE/nested2"
bk attach -q "bk://localhost:$P/$HERE/standalone1" component5 2>GOT 1>&2 || {
	echo should have worked
	cat GOT
	exit 1
}
bk comps | grep -q component5 || exit 1
cd component5 || exit 1
bk cat file1 >GOT || exit 1
cat <<EOF >WANT
file1
EOF
cmpfiles GOT WANT
echo OK

echo $N Check 'attach <dir> nested/<dir>' functionality ...............$NL
cd "$HERE"
bk attach $Q standalone1 nested2/component5.5 || fail
cd nested2
bk comps | grep -q component5.5 || exit 1
echo OK

echo $N Check 'attach <dir> nested/trad/<dir>' functionality ..........$NL
cd "$HERE"
bk clone $Q standalone1 nested2/traditional
bk attach $Q standalone1 nested2/traditional/component5.6 || fail
cd nested2
bk comps | grep -q traditional/component5.6 || exit 1
echo OK

echo $N Check attach -C .............................................$NL
cd "$HERE/nested2"
bk attach -q -C "$HERE/standalone1" component6 2>GOT 1>&2 || {
	echo should have worked
	cat GOT
	exit 1
}
bk sfiles -p >GOT || exit 1
cat <<EOF >WANT
component6/SCCS/s.ChangeSet
EOF
cmpfiles GOT WANT
bk commit -q -y'attach component6' || exit 1
bk comps | grep -q component6 || exit 1
echo OK

echo $N Check attach -C and commit with others ......................$NL
cd "$HERE/nested2"
bk attach -q -C "$HERE/standalone1" component6a 2>GOT 1>&2 || {
	echo should have worked
	cat GOT
	exit 1
}
bk sfiles -p >GOT || exit 1
cat <<EOF >WANT
component6a/SCCS/s.ChangeSet
EOF
cmpfiles GOT WANT
bk attach -q -C "$HERE/standalone1" component6b 2>GOT 1>&2 || {
	echo should have worked
	cat GOT
	exit 1
}
bk sfiles -p >GOT || exit 1
cat <<EOF >WANT
component6a/SCCS/s.ChangeSet
component6b/SCCS/s.ChangeSet
EOF
cmpfiles GOT WANT
bk commit -q -y'attach component6a and component6b' || exit 1
bk comps | grep -q component6a || exit 1
bk comps | grep -q component6b || exit 1
echo OK

echo $N Check attach -r .............................................$NL
cd "$HERE/nested2"
bk attach -q -r1.1 "$HERE/standalone1" component7 2>GOT 1>&2 || {
	echo should have worked
	cat GOT
	exit 1
}
bk comps | grep -q component7 || exit 1
cd component7 || exit 1
test "`bk log -d:REV: -r+ ChangeSet`" = "1.1" || {
	echo bad rev
	exit 1
}
echo OK
