
echo $N Create an ensemble...........................................$NL
nested project
bk gate $Q -r
bk portal $Q -r
cd gcc
echo hi > gcc_file
bk new $Q gcc_file || exit 1
bk commit -S -yadd $Q || exit 1
bk -P commit -yadd $Q || exit 1
echo OK

echo $N Try an empty collapse .......................................$NL
bk collapse -ea+ 2>ERR || fail -f ERR
cat <<EOF > WANT
Nothing to collapse.
EOF
cmpfiles ERR WANT
echo OK

echo $N Try to collapse top cset in committed component .............$NL
bk changes -r+ -v  > WANT
bk fix -Sc 2>ERR && {
	echo should fail
	cat ERR
	exit 1
}
grep -q "cannot strip component cset" ERR || exit 1
(cd ..; bk pending)
bk changes -r+ -v  > GOT
cmpfiles GOT WANT
echo OK

echo $N Try to collapse top cset in product .........................$NL
cd ..
bk fix $Q -Pc || exit 1
bk -r check -a || exit 1
bk sfiles -p > GOT
echo gcc/SCCS/s.ChangeSet > WANT
cmpfiles GOT WANT
echo OK

echo $N Now collapse top cset in component ..........................$NL
cd gcc
bk fix -Sc || exit 1
bk sfiles -x > GOT
cat <<EOF > WANT
ERR
GOT
WANT
gcc_file
EOF
cmpfiles GOT WANT
bk _test -e SCCS/c.gcc_file || exit 1
echo add > WANT
cmpsfiles SCCS/c.ChangeSet WANT
echo OK

echo $N Now run fix -c in product ...................................$NL
# redo collapse
bk ci $Q -i -c gcc_file
bk commit -S $Q -YSCCS/c.ChangeSet || fail
bk _rm SCCS/c.ChangeSet
cd ..
bk commit $Q -YSCCS/c.ChangeSet || fail
bk _rm SCCS/c.ChangeSet
bk --cd=gcc fix -c $Q || fail
bk sfiles -p > GOT
test -s GOT && fail
cd gcc
bk sfiles -x > GOT
cat <<EOF > WANT
ERR
GOT
WANT
gcc_file
EOF
cmpfiles GOT WANT
bk _test -e SCCS/c.gcc_file || exit 1
echo add > WANT
cmpsfiles SCCS/c.ChangeSet WANT
echo OK

echo $N Test collapse in a nested repository.........................$NL
nested nested
bk gate $Q -r
bk portal $Q -r
echo "PRE-COLLAPSE" > prod_file
bk new $Q -y'pre-collapse' prod_file
for comp in gcc gdb
do
	cd $comp
	echo "PRE-COLLAPSE $comp" > ${comp}_file
	bk new $Q -y'pre-collapse' ${comp}_file
	bk commit -S $Q -y"pre-collapse $comp"
	cd ..
done
bk commit $Q -y"pre-collapse product"

bk changes -kr+ > SAVED_TIP

bk edit $Q prod_file
echo "POST-COLLAPSE" > prod_file
bk ci $Q -y'post-collapse' prod_file
for comp in gcc gdb
do
	cd $comp
	bk edit $Q ${comp}_file
	echo "POST-COLLAPSE $comp" > ${comp}_file
	bk ci $Q -y'post-collapse' ${comp}_file
	bk commit -S $Q -y"post-collapse $comp"
	cd ..
done
bk commit $Q -y"post-collapse product"

bk collapse -qea`cat SAVED_TIP`
bk sfiles -p > PENDING
test -s PENDING && fail -f PENDING
cat >WANT <<EOF
gcc_file
gdb_file
prod_file
EOF
bk -e sfiles -cg > GOT
cmpfiles GOT WANT
echo OK

echo $N Test collapse -@ in a component .............................$NL
cd "$HERE"
bk clone $Q project copy
cd copy/gcc
echo new2 > gcc_file
bk new $Q -ynew2 gcc_file || fail
KEY1=`bk changes -Sr+ -nd:KEY:`
bk commit $Q -S -ynew2 || fail
KEY2=`bk changes -Sr+ -nd:KEY:`

bk _test -f SCCS/c.gcc_file && fail
bk _test -f SCCS/c.ChangeSet && fail
bk collapse $Q -Se@ || fail
KEY3=`bk changes -Sr+ -nd:KEY:`

test "$KEY1" = "$KEY3" || fail
test "$KEY1" != "$KEY2" || fail

echo new2 > WANT
cmpsfiles WANT SCCS/c.gcc_file
cmpsfiles WANT SCCS/c.ChangeSet
echo OK
