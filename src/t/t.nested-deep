echo $N Create initial ensemble......................................$NL
nested project
test -d gcc/BitKeeper/tmp -a -d gdb/BitKeeper/tmp || exit 1
# Now add some stuff
cd ..
commercial nm
cd "$HERE/project"
bk attach --force $Q ../nm gcc/nm
echo OK

echo $N Check that we see all components ............................$NL
test -f BitKeeper/log/deep-nests || {
        echo No BitKeeper/log/deep-nests
        exit 1
}
bk --headers -e > GOT
cat > WANT <<EOF
#### gcc ####
#### gcc/nm ####
#### gdb ####
#### . ####
EOF
cmpfiles WANT GOT
echo OK

echo $N Check that we see all components in a clone .................$NL
cd ..
bk clone project clone > OUT 2>&1
cd clone
test -f BitKeeper/log/deep-nests || {
        echo No BitKeeper/log/deep-nests
        exit 1
}
bk --headers -e > GOT
cat > WANT <<EOF
#### gcc ####
#### gcc/nm ####
#### gdb ####
#### . ####
EOF
cmpfiles WANT GOT
echo OK

echo $N Check that we see all components in a clone -l ..............$NL
cd ..
BK_CONFIG='partial_check:yes!' bk clone -l project lclone > OUT 2>&1
cd lclone
test -f BitKeeper/log/deep-nests || {
        echo No BitKeeper/log/deep-nests
        exit 1
}
bk --headers -e > GOT
cat > WANT <<EOF
#### gcc ####
#### gcc/nm ####
#### gdb ####
#### . ####
EOF
cmpfiles WANT GOT
echo OK

echo $N Check that we do not list non-deep components ...............$NL
cd "$HERE/project/gcc" || exit 1
mkdir foo && cd foo || exit 1
bk -r. > OUT
cd ../..
grep -q "^gcc$" BitKeeper/log/deep-nests && {
	echo failed
	exit 1
}
echo OK

echo $N Check that sfiles does not list deep nests always ...........$NL
bk sfiles foobar > OUT || exit 1
test -s OUT && exit 1
echo OK

echo $N Check that a deep nest merge makes it back out ..............$NL
cd "$HERE"
rm -fr project copy
nested project
cd gcc
# Note: fresh_commercial will do a setup which will automatically attach.
# and commercial will just copy in the bits with no attach.  This matters
# for having the attach -N work or fail.
commercial deepnest
cd ..
bk attach --force $Q -N deepnest
cd ../..
bk clone $Q -shere project copy
cd project/gcc
touch foo
bk new $Q foo
bk commit -S $Q -f
cd deepnest
touch foo
bk new $Q foo
bk commit -S $Q -f
bk -P commit $Q -f
cd ../../../copy/gcc
touch bar
bk new $Q bar
bk commit -S $Q -f
cd deepnest
touch bar
bk new $Q bar
bk commit -S $Q -f
bk -P commit $Q -f
bk -P pull $Q || exit 1
bk -e -r check -ac || exit 1
echo OK

echo $N Check that bk idcache does not break the repo ...............$NL
cd "$HERE/project"
# this used to break things because idcache walk didn't include deep nest
bk idcache $Q
bk changes -vr+ > GOT
# this fixes things
bk -r check -ac || exit 1
bk changes -vr+ > WANT
checkfiles WANT GOT
echo OK

echo $N Show that we can unpopulate and repopulate under deep .......$NL
mkdir src
cd src
bk setup -f gui || fail
mkdir gui/tcltk
cd gui/tcltk
echo hi > file
bk new $Q file || fail
bk commit -S $Q -yfile
bk setup -f tk || fail
bk -P commit $Q -ywrap || fail
cd "$HERE"
bk clone $Q -s./src/gui -s./src/gui/tcltk/tk project copy2 || fail
cd copy2
bk unpopulate $Q ./src/gui || fail
bk populate $Q ./src/gui || fail
echo OK
