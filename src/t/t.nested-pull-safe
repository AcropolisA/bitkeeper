echo $N Set up repos.................................................$NL
cd "$HERE"
nested gate
bk setup -C -f doc
bk setup -C -f man
bk commit $Q --tag=NOTOOLS -y"no tools" || fail -f OUT
bk setup -C -f tools
bk alias set -C GCC gcc tools
bk alias set -C GDB gdb tools
bk alias set -C DOC doc man tools
bk alias set -C DEV gcc gdb man tools
bk commit $Q -y"add aliases"
# clean up the here file, perhaps bk setup
# should notice it's ALL and not add the
# keys to the HERE file?
bk here set all
cd "$HERE"
bk clone -sGCC $Q gate child-1
cd "$HERE/gate/gcc"
touch afile
bk new $Q afile
bk commit -S $Q -y.
cd ../gdb
touch afile
bk new $Q afile
bk commit -S $Q -y.
cd ..
bk commit $Q -y.
cd "$HERE"
bk clone $Q gate project
cd child-1
bk parent -q ../project
cd ../project
bk gate $Q -r
echo OK

echo $N Pulling from gate should be unsafe...........................$NL
cd "$HERE/child-1"
bk here > WANT
bk pull $Q ../gate 2>ERR || fail -f ERR
bk here > GOT
cmpfiles WANT GOT
bk unpull $Q -f
# bug? unpull will not remove aliases
bk here set $Q GCC
echo OK

echo $N Test pull from non-gate is safe..............................$NL
bk here > WANT
bk pull $Q 2>ERR && fail should have failed
grep -q "populated aliases are different" ERR || fail wrong error
bk here > GOT
cmpfiles WANT GOT
bk abort -qf
echo OK

echo $N Test pull --safe from gate...................................$NL
cd "$HERE/child-1"
bk here > WANT
bk pull --safe $Q ../gate 2>ERR && fail -f ERR should have failed
grep -q "populated aliases are different" ERR || fail -f ERR wrong error
bk here > GOT
cmpfiles WANT GOT
bk abort -qf
echo OK

echo $N Test pull --unsafe from non-gate.............................$NL
bk pull $Q --unsafe ../project || fail
bk changes -qR > OUT || fail -f OUT did not pull
test -s OUT && fail -f OUT expected empty
echo OK

echo $N Test pull --safe when alias redefined to include all rmt ....$NL
cd ../project
bk alias add GCC ALL
cd ../child-1
bk pull $Q --safe || fail 
echo OK

echo $N Test pull --safe when new comp added and both sides full ....$NL
cd "$HERE"
bk clone $Q -rNOTOOLS project pulltools
cd pulltools
bk pull $Q --safe
echo OK

echo $N Make sure we do not bring unchanged aliases..................$NL
cd "$HERE"
bk clone $Q -sGCC -sDOC project gcc-and-doc
bk clone $Q -sGCC project just-gcc
cd gcc-and-doc/gcc
bk edit $Q afile
echo content >afile
bk ci -y. $Q afile
bk commit -S -y. $Q
bk -P commit -y. $Q
cd "$HERE/just-gcc"
bk pull --safe $Q ../gcc-and-doc 2>ERR || fail
cat >WANT <<EOF
GCC
PRODUCT
EOF
bk here > GOT
cmpfiles WANT GOT
echo OK

echo $N Demo that bug that I told Rick about.........................$NL
cd "$HERE"
bk clone $Q -sGCC project repo-1
bk clone $Q -sGDB project repo-2
# make a cset in gcc
cd repo-1/gcc
bk edit $Q afile
echo more stuff > afile
bk ci $Q -y. afile
bk commit -S $Q -y.
bk -P commit $Q -y.
# change the meaning of GCC in repo-2
cd "$HERE/repo-2"
bk alias add $Q GCC gdb
bk push $Q ../project
bk here set $Q PRODUCT
# now pull GCC, note there are no changes to gdb in remote
bk pull $Q --safe ../repo-1 2>ERR && fail -f ERR
cat <<EOF >WANT
pull: failing because populated aliases are different between remote and local.
Please run bk populate to add the following aliases:
  GCC
EOF
cmpfiles WANT ERR
echo OK

echo $N Do an unsafe pull after a safe pull fails ...................$NL
cd "$HERE"
nested nongate
bk gate $Q -r
bk clone $Q -s. . ../just-prod
touch foo
bk new $Q foo
bk commit $Q -yremote
cd ../just-prod
bk pull $Q > OUT 2>&1 && fail should have failed
grep -q "failing because populated aliases are different" OUT || fail -f OUT
bk pull $Q --unsafe || fail should have worked
echo OK
