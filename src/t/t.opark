# Copyright 2003-2006,2014-2015 BitMover, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


echo $N Create initial repository ...................................$NL
commercial project
bk admin -Z
if [ ! -d BitKeeper/etc ]; then echo failed to make BitKeeper/etc; exit 1; fi
if bk _test ! -f SCCS/s.ChangeSet; then echo failed to make ChangeSet; exit 1; fi
P=`bk pending | wc -l`
if [ $P -ne 0 ]; then echo files are pending; bk pending; exit 1; fi
echo OK
echo $N Create some data ............................................$NL
mkdir src
cd src
cat << EOF > foo.c
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur
id elit nec dui tristique auctor. Ut vestibulum dui ligula, vitae
dignissim augue mollis non. In velit sem, fermentum eget tortor ut,
mattis finibus diam. Vestibulum ultrices lacus erat, id aliquet
urna commodo vitae. Nulla facilisi. Praesent suscipit, ante in
pulvinar maximus, quam nulla dignissim ex, a molestie magna enim
et augue. Sed pretium posuere quam, quis lobortis erat interdum
lobortis. Nunc efficitur massa congue tincidunt vulputate. Nunc
scelerisque fermentum pretium.
EOF
echo bar > bar.c
echo h > h.h
bk ci $Q -i foo.c bar.c h.h
if bk _test ! -f SCCS/s.foo.c; then echo failed to create history; exit 1; fi
echo OK
echo $N Check basic park/unpark cycle ...............................$NL
bk edit $Q foo.c bar.c
echo foo-new > foo.c
echo bar-new >> bar.c
cp foo.c foo.sav
cp bar.c bar.sav
bk opark 2> /dev/null || fail
NUM=`bk sfiles -c | wc -l`
if [ $NUM -ne 0 ]; then echo failed; exit 1; fi;
bk ounpark 2> /dev/null 1>&2 || fail
cmp -s foo.c foo.sav
if [ $? -ne 0 ]; then echo failed 1; exit 1; fi
cmp -s bar.c bar.sav 
if [ $? -ne 0 ]; then echo failed 2; od -c bar.c; od -c bar.sav; exit 1; fi
echo OK
echo $N Check basic park/unpark with reject file ....................$NL
bk unedit bar.c
bk edit $Q foo.c
echo foo-new2 > foo.c
bk opark 2> /dev/null
NUM=`bk sfiles -c | wc -l`
if [ $NUM -ne 0 ]; then echo failed; exit 1; fi;
bk edit $Q foo.c
echo foo-new3 > foo.c
bk ci $Q -y foo.c
bk ounpark 2> /dev/null 1>&2
# make sure unpark does not delete the parkfile
if [ ! -f "$HERE/project/BitKeeper/tmp/parkfile-1" ]; then echo failed; exit 1; fi
echo OK
echo $N Check park/unpark with offset diff ..........................$NL
bk clean foo.c
bk fix $Q foo.c
echo foo-new4 > foo.c
bk get $Q -p -r1.1 foo.c >> foo.c
bk ounpark 2>/dev/null 1>&2
bk undos > CMP2 <<EOF
foo-new4
foo-new2
EOF
cmp -s foo.c CMP2
if [ $? -ne 0 ]; then echo failed; exit 1; fi
echo OK
