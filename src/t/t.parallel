# No NFS stuff for windows
test "$PLATFORM" = "WIN32" && exit 0

# Remote people don't have this mounted but may have a local cache
# Assume that it is not NFS for them.
test -f /home/.NFS || exit 0

# And if no test data then skip it
test -d $TESTDATA/bitcluster || exit 0

# no auto-lclone
BK_NO_HARDLINK_CLONE=1
export BK_NO_HARDLINK_CLONE=1

echo $N Make sure that /build is local ..............................$NL
bk _isnetwork /build > /dev/null 2>&1 && {
	echo failed
	bk _isnetwork /build
	exit 1
}
echo OK

# these unix hosts don't get this right.
# work is here because /home is local on work.
case `bk gethost -r` in
    *bsd*|macos*|aix*|sco*|work*) exit 0;;
esac

echo $N Make sure that test data is remote ..........................$NL
bk _isnetwork $TESTDATA > /dev/null 2>&1 || {
	echo failed
	bk _isnetwork $TESTDATA
	exit 1
}
echo OK

echo $N Make sure that a non-existant dir is seen as remote .........$NL
test -e $TESTDATA/no_such_dir && {
	echo 'ok, funny guy, who put this here?'
	exit 1
}
bk _isnetwork $TESTDATA/no_such_dir > /dev/null 2>&1 || {
	echo failed
	bk _isnetwork $TESTDATA/no_such_dir
	exit 1
}
echo OK

test -w $TESTDATA/tmp -a `bk gethost -r` = glibc26.bitmover.com && {
echo $N Clone repo to work:/home, should run in parallel ............$NL
BK_CONFIG="license:$BKL_PRO;licsign1:$BKL_P1$BKL_P2$BKL_P3;checkout:none!"
export BK_CONFIG
rm -rf $TESTDATA/tmp/bitcluster
echo y | bk clone $Q $TESTDATA/bitcluster $TESTDATA/tmp/bitcluster 2> /dev/null || exit 1
SFIO=`grep 'sfio -i' $TESTDATA/tmp/bitcluster/BitKeeper/log/cmd_log|wc -l`
test $SFIO = 9 || {
	echo wrong number $SFIO
	exit 1
}
rm -rf $TESTDATA/tmp/bitcluster
echo OK

echo $N Same thing with . being NFS .................................$NL
export BK_CONFIG
rm -rf $TESTDATA/tmp/bitcluster
cd $TESTDATA/tmp
echo y | bk clone $Q $TESTDATA/bitcluster 2> /dev/null || exit 1
SFIO=`grep 'sfio -i' bitcluster/BitKeeper/log/cmd_log|wc -l`
test $SFIO = 9 || {
	echo wrong number $SFIO
	exit 1
}
rm -rf $TESTDATA/tmp/bitcluster
echo OK

echo $N Same thing with . being NFS and named dest ..................$NL
export BK_CONFIG
rm -rf $TESTDATA/tmp/bitcluster
cd $TESTDATA/tmp
echo y | bk clone $Q $TESTDATA/bitcluster clone 2> /dev/null || exit 1
SFIO=`grep 'sfio -i' clone/BitKeeper/log/cmd_log|wc -l`
test $SFIO = 9 || {
	echo wrong number $SFIO
	exit 1
}
rm -rf $TESTDATA/tmp/clone
echo OK

cd "$HERE"
}

echo $N Clone repo, should run in parallel ..........................$NL
BK_CONFIG="license:$BKL_PRO;licsign1:$BKL_P1$BKL_P2$BKL_P3;checkout:none!"
export BK_CONFIG
_BK_FORCE_NETFS=YES
export _BK_FORCE_NETFS
echo y | bk clone $Q $TESTDATA/bitcluster parallel 2> /dev/null || exit 1
SFIO=`grep 'sfio -i' parallel/BitKeeper/log/cmd_log|wc -l`
test $SFIO = 9 || {
	echo wrong number $SFIO
	exit 1
}
echo OK

echo $N Clone repo force just one child sfio ........................$NL
rm -rf showproc
echo y | bk clone -j1 $Q $TESTDATA/bitcluster 2> /dev/null || exit 1
SFIO=`grep 'sfio -i' bitcluster/BitKeeper/log/cmd_log|wc -l`
test $SFIO = 2 || {
	echo wrong number $SFIO
	exit 1
}
echo OK

echo $N Clone repo force just one sfio total ........................$NL
rm -rf bitcluster showproc
echo y | bk clone -j0 $Q $TESTDATA/bitcluster 2> /dev/null || exit 1
SFIO=`grep 'sfio -i' bitcluster/BitKeeper/log/cmd_log|wc -l`
test $SFIO = 1 || {
	echo wrong number $SFIO
	exit 1
}
echo OK

echo $N Check that both repos check clean ...........................$NL
cd parallel
bk -r check -ac || exit 1
cd ../bitcluster
bk -r check -ac || exit 1
echo OK

echo $N Check that both repos have the same data ....................$NL
cd ..
rm parallel/BitKeeper/log/*log*
rm bitcluster/BitKeeper/log/*log*
rm parallel/BitKeeper/log/repo_id
rm bitcluster/BitKeeper/log/repo_id
diff -r parallel bitcluster | grep -v 'Common subdirectories:' > D
test -s D && {
	echo has diffs
	cat D
	exit 1
}
echo OK

echo $N Clone repo with unreasonably high number, should cap ........$NL
rm -rf bitcluster showproc
echo y | bk clone -j100 $Q $TESTDATA/bitcluster 2> /dev/null || exit 1
SFIO=`grep 'sfio -i' bitcluster/BitKeeper/log/cmd_log|wc -l`
test $SFIO = 21 || {
	echo wrong number $SFIO
	exit 1
}
echo OK

echo $N Clone repo and check that checkout get runs in parallel .....$NL
rm -rf parallel showproc
touch $TESTDATA/bitcluster/BitKeeper/log/checked
BK_CONFIG="license:$BKL_PRO;licsign1:$BKL_P1$BKL_P2$BKL_P3;checkout:get!;partial_check:on!"
echo y | bk clone $Q $TESTDATA/bitcluster parallel 2> /dev/null || exit 1
CHECKOUT=`grep 'checkout -TU' parallel/BitKeeper/log/cmd_log|wc -l`
test $CHECKOUT = 8 || {
	echo wrong number $CHECKOUT
	exit 1
}
echo OK

echo $N Clone non-parallel in checkout mode for diffs ...............$NL
rm -rf bitcluster
touch $TESTDATA/bitcluster/BitKeeper/log/checked
BK_CONFIG="license:$BKL_PRO;licsign1:$BKL_P1$BKL_P2$BKL_P3;checkout:get!;partial_check:on!"
echo y | bk clone -j0 $Q $TESTDATA/bitcluster 2> /dev/null || exit 1
CHECKOUT=`grep 'checkout -Tq' bitcluster/BitKeeper/log/cmd_log|wc -l`
test $CHECKOUT = 1 || {
	echo wrong number $CHECKOUT
	exit 1
}
echo OK

echo $N Check that both repos have the same data ....................$NL
rm parallel/BitKeeper/log/*log*
rm bitcluster/BitKeeper/log/*log*
rm parallel/BitKeeper/log/repo_id
rm bitcluster/BitKeeper/log/repo_id
diff -r parallel bitcluster | grep -v 'Common subdirectories:' > D
test -s D && {
	echo has diffs
	cat D
	exit 1
}
echo OK

echo $N Check that pending files are stripped in a parallel clone ...$NL
cd bitcluster
echo hi > extra
bk new $Q extra || fail
bk edit $Q STATE || fail
echo junk >> STATE
bk ci -yjunk $Q STATE || file
cd ..
_BK_FORCE_NETFS=YES bk clone $Q bitcluster no-pending || fail
cd no-pending
bk sfiles -p > OUT
test -s OUT && fail -f OUT should have nothing pending after clone
SFIO=`grep 'sfio -i' BitKeeper/log/cmd_log|wc -l`
test $SFIO = 9 || {
	echo wrong number $SFIO
	exit 1
}
cd ..
echo OK
