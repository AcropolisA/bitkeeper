# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2000 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.

# Copyright (c) 1999 Larry McVoy
# %K%

if [ "$PLATFORM" = "WIN32" ]
then
	echo "For non win32 only ..........................................skipped"
	exit 0;
fi

checkperm()
{
    PERM=$1
    FILE=$2
    P=`/bin/ls -l $FILE`
    case "$P" in
	${1}*)
	    ;;
	*)
	    echo failed to set permissions correctly; ls -l prog; exit 1
	    ;;
    esac
}

no_logging project
echo $N Check in an executable file .................................$NL
touch prog
chmod 0751 prog
bk ci -i $Q prog
grep -q '^.cO-rwxrwx--x' SCCS/s.prog
if [ $? -ne 0 ]; then echo Failed to add permissions; exit 1; fi
echo OK
echo $N Check permissions on checked out file .......................$NL
bk co $Q prog
checkperm -r-xr-x--x prog
echo OK
echo $N Check permissions on locked file ............................$NL
bk co -l $Q prog
checkperm -rwxrwx--x prog
echo OK
echo $N Change permissions and check in .............................$NL
chmod 777 prog
bk delta $S -yperms prog
grep -q '^.cO-rwxrwxrwx' SCCS/s.prog
if [ $? -eq 0 ]; then echo added permissions and should not have; exit 1; fi
if [ -f "SCCS/p.prog" ]; then echo Failed to remove p.prog; exit 1; fi
echo OK

echo $N Change permissions with admin ...............................$NL
bk get $Q prog
bk admin -m-rwx------ prog
checkperm -r-x------ prog
REV=`bk prs -h -r+ -d":I:" prog`
if [ "$REV" != "1.3" ]; then echo fail to create a new delta; exit 1; fi 
COMMENT=`bk prs -h -r+ -d":C:" prog`
if [ "$COMMENT" != "Change mode to -rwx------" ]; then echo fail; exit 1; fi 
grep -q '^.cO-rwx------' SCCS/s.prog
if [ $? -ne 0 ]; then echo failed to add permissions; exit 1; fi
echo OK

echo $N Make sure null change is not delta-ed .......................$NL
bk admin -m-rwx------ prog
REV=`bk prs -h -r+ -d":I:" prog`
if [ "$REV" != "1.3" ]; then echo fail to create a new delta; exit 1; fi 
echo OK

echo $N Check new permissions on checked out file ...................$NL
bk co $Q prog
checkperm -r-x------ prog
echo OK
echo $N Check old permissions on checked out file ...................$NL
bk co -r1.1 $Q -Gprog prog
checkperm -r-xr-x--x prog
echo OK
echo $N Check permissions on locked file ............................$NL
bk co -l $Q prog
checkperm -rwx------ prog
echo OK
echon Check changing permissions on locked file ...................
bk admin -m-rwxrw---x prog
checkperm -rwxrw---x prog
echo OK

echon Check cumulative changes to file permissions ................
bk unedit prog
bk admin -m-rw-rw-r-- prog
test `bk prs -hr+ -nd:RWXMODE: prog` = -rw-rw-r-- || {
	echo failed
	bk prs -hr+ -nd:RWXMODE: prog
}
bk chmod o+w prog
test `bk prs -hr+ -nd:RWXMODE: prog` = -rw-rw-rw- || {
	echo failed
	bk prs -hr+ -nd:RWXMODE: prog
}
bk chmod o+x prog
test `bk prs -hr+ -nd:RWXMODE: prog` = -rw-rw-rwx || {
	echo failed
	bk prs -hr+ -nd:RWXMODE: prog
}
bk co $Q prog
checkperm -r--r--r-x prog
bk co -l $Q prog
checkperm -rw-rw-rwx prog
bk clean prog
echo OK

echo $N Make sure we can not remove owner read/write permission .....$NL
bk clean prog
bk chmod 0 prog 2>/dev/null
bk edit $Q prog
checkperm -rw------- prog
echo OK

echo $N Make sure that we tell people about parsing errors ..........$NL
bk clean prog
bk chmod u@xyz prog 2>out
grep -q 'Illegal file mode' out || {
	echo bad error message
	cat out
	exit 1
}
bk edit $Q prog
checkperm -rw------- prog
echo OK

echo $N Test u= permissions .........................................$NL
bk clean prog
bk chmod u=rwx prog
bk edit $Q prog
checkperm -rwx------ prog
echo OK

echo $N Test g= permissions .........................................$NL
bk clean prog
bk chmod g=rwx prog
bk edit $Q prog
checkperm -rwxrwx--- prog
bk clean prog
bk chmod g= prog
bk edit $Q prog
checkperm -rwx------ prog
echo OK

echo $N Test o= permissions .........................................$NL
bk clean prog
bk chmod o=rwx prog
bk edit $Q prog
checkperm -rwx---rwx prog
bk clean prog
bk chmod o= prog
bk edit $Q prog
checkperm -rwx------ prog
echo OK

echo $N Test ugo= permissions .......................................$NL
bk clean prog
bk chmod ugo=rw prog
bk edit $Q prog
checkperm -rw-rw-rw- prog
bk clean prog
bk chmod ugo=rwx prog
bk edit $Q prog
checkperm -rwxrwxrwx prog
echo OK

bk clean prog
bk chmod 600 prog
echo $N Test u+ permissions .........................................$NL
bk clean prog
bk chmod u+rwx prog
bk edit $Q prog
checkperm -rwx------ prog
echo OK

echo $N Test g+ permissions .........................................$NL
bk clean prog
bk chmod g+rwx prog
bk edit $Q prog
checkperm -rwxrwx--- prog
echo OK

echo $N Test o+ permissions .........................................$NL
bk clean prog
bk chmod o+rwx prog
bk edit $Q prog
checkperm -rwxrwxrwx prog
echo OK

echo $N Test ugo- permissions .......................................$NL
bk clean prog
bk chmod ugo-x prog
bk edit $Q prog
checkperm -rw-rw-rw- prog
echo OK

bk clean prog
bk chmod 777 prog
echo $N Test u- permissions .........................................$NL
bk clean prog
bk chmod u-x prog
bk edit $Q prog
checkperm -rw-rwxrwx prog
echo OK

echo $N Test g- permissions .........................................$NL
bk clean prog
bk chmod g-rwx prog
bk edit $Q prog
checkperm -rw----rwx prog
echo OK

echo $N Test o- permissions .........................................$NL
bk clean prog
bk chmod o-rwx prog
bk edit $Q prog
checkperm -rw------- prog
echo OK
