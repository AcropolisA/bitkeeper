echo $N Check that setup --sccs-compat works ........................$NL
_commercial_config > c
bk setup -a -f -cc --sccs-compat noremap || fail
cd noremap
# This should NOT be bk _test
test ! -f SCCS/s.ChangeSet && {
	echo failed
	exit 1
}
echo OK

echo $N Check that a frankenstein product checks ok .................$NL
cd "$HERE"
nested product
echo > "$HERE/empty"
cd ..
for i in 1 3 5 7 9
do
	bk setup --sccs-compat -fc"$HERE/empty" comp$i || fail
	mv comp$i product
	(cd product; bk attach -N $Q comp$i || fail)
done
cd product
for i in 0 2 4 6 8
do
    bk setup -fc"$HERE/empty" comp$i
done
bk commit $Q -y'adding components'
bk -Aqr check -ac || {
	echo failed
	exit 1
}
echo OK

echo $N Check populate follows product remapping state - remap ......$NL
cd "$HERE"
# I think the -shere should not be necessary but I might be in
# the minority.
bk clone -shere $Q product clone
cd clone
bk here rm $Q comp0 comp1
rm -rf comp[01]
bk here add $Q comp0 comp1
test -d comp0/SCCS && {
	echo failed
	exit 1
}
test -d comp1/SCCS && {
	echo failed
	exit 1
}
echo OK

echo $N Check populate follows product remapping state - noremap ....$NL
cd "$HERE"
# I think the -shere should not be necessary but I might be in
# the minority.
bk clone --sccs-compat -shere $Q product clone2
cd clone2
bk here rm $Q comp0 comp1
rm -rf comp[01]
bk here add $Q comp0 comp1
test ! -d comp0/SCCS && {
	echo failed
	exit 1
}
test ! -d comp1/SCCS && {
	echo failed
	exit 1
}
echo OK

cd "$HERE"
echo $N Verify that a clone from noremap to remap works .............$NL
bk clone $Q --hide-sccs-dirs noremap remap || exit 1
test -d remap/SCCS && {
	echo failed
	exit 1
}
echo OK

echo $N Verify that a clone of noremap stays not remapped ...........$NL
bk clone $Q noremap noremap2 || fail
test -d noremap2/SCCS || fail
rm -rf noremap2
echo OK

echo $N Verify that a clone from remap to noremap works .............$NL
bk clone --sccs-compat $Q remap noremap2 || exit 1
test -d noremap2/SCCS || {
	echo failed
	exit 1
}
echo OK

echo $N Verify that a clone of remap stays remapped .........,.......$NL
bk clone $Q remap remap2 || fail
test -d remap2/SCCS && fail
rm -rf remap2
echo OK

rm -rf remap noremap2
echo $N Verify that a lclone from noremap to remap works ............$NL
bk clone $Q -l --hide-sccs-dirs noremap remap || exit 1
test -d remap/SCCS && {
	echo failed
	exit 1
}
echo OK

echo $N Verify that a lclone of noremap stays not remapped ..........$NL
bk clone $Q -l noremap noremap2 || fail
test -d noremap2/SCCS || fail
rm -rf noremap2
echo OK

echo $N Verify that a lclone from remap to noremap works ............$NL
bk clone --sccs-compat -l $Q remap noremap2 || exit 1
test -d noremap2/SCCS || {
	echo failed
	exit 1
}
echo OK

echo $N Verify that a lclone of remap stays remapped ................$NL
bk clone $Q -l remap remap2 || fail
test -d remap2/SCCS && fail
rm -rf remap2
echo OK

bk bkd -aPORT -q -d -ikill || fail
P=`cat PORT`
trap "bk _kill bk://localhost:$P" 0

rm -rf remap noremap2
echo $N Verify that a rclone from noremap to remap works ............$NL
bk clone $Q --hide-sccs-dirs noremap bk://localhost:$P/remap || exit 1
test -d remap/SCCS && {
	echo failed
	exit 1
}
echo OK

echo $N Verify that a rclone of noremap stays not remapped ..........$NL
bk clone $Q noremap bk://localhost:$P/noremap2 || fail
test -d noremap2/SCCS || fail
rm -rf noremap2
echo OK

echo $N Verify that a rclone from remap to noremap works ............$NL
bk clone --sccs-compat  $Q remap bk://localhost:$P/noremap2 || exit 1
test -d noremap2/SCCS || {
	echo failed
	exit 1
}
echo OK

echo $N Verify that a rclone of remap stays remapped ................$NL
bk clone $Q remap bk://localhost:$P/remap2 || fail
test -d remap2/SCCS && fail
rm -rf remap2
echo OK

bk _kill bk://localhost:$P
trap "" 0
