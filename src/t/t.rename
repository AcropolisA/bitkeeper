# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2000 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.

# Copyright (c) 1999 Larry McVoy
# %K%

# The purpose of this test is to demonstrate a rename bug.
# Suppose we have a file which starts out being named A.
# In one repository,
echo $N set up ......................................................$NL
trap 'echo failed' 0
set -e
no_logging gca
mkdir src
cd src
echo Baseline > regression.sh
cat > INIT <<EOF
D 1.1 99/08/03 11:23:13-07:00 zack@zack.bitmover.com 0 0 0/0/0
c Baseline
P src/regression.sh
------------------------------------------------
EOF
bk delta $Q -i -IINIT regression.sh
bk commit $S -yBaseline > $DEV_NULL
bk -r check -a

# Now create two repositories with that file.
cd $HERE
cp -rp gca a
cp -rp gca b

# By hand, move the file in this tree.
# Done by hand so we can force the date.
cd a/src
mkdir t
mkdir t/SCCS
mv SCCS/s.regression.sh t/SCCS
cd t
bk get $S -e regression.sh
cat > INIT <<EOF
D 1.2 99/08/07 15:46:14-07:00 lm@lm.bitmover.com 0 0 0/0/0
c Rename: src/regression.sh -> src/t/regression.sh
P src/t/regression.sh
------------------------------------------------
EOF
bk delta $Q -IINIT regression.sh
bk commit $S -yRename > $DEV_NULL
bk get $S -e regression.sh
cat > INIT <<EOF
D 1.3 99/08/07 15:48:49-07:00 lm@lm.bitmover.com 0 0 0/0/0
c obsolete
P src/t/regression.sh
------------------------------------------------
EOF
bk delta $Q -IINIT regression.sh
bk commit $S -yObsolete > $DEV_NULL
bk -r check -a

# Now add some deltas in the other tree, not moving it.
cd $HERE
cd b/src
bk get $S -e regression.sh
cat > INIT <<EOF
D 1.2 99/08/06 11:22:32-07:00 zack@zack.bitmover.com 0 0 0/0/0
c Don't expect gzipping a uuencoded file to fail.
P src/regression.sh
------------------------------------------------
EOF
bk delta $Q -IINIT regression.sh
bk commit $S -ywhatever > $DEV_NULL
bk -r check -a
bk get $S -e regression.sh
cat > INIT <<EOF
D 1.3 99/08/18 01:11:42-07:00 lm@lm.bitmover 0 0 0/0/0
c Some linger prs cleanups.
P src/regression.sh
------------------------------------------------
EOF
bk delta $Q -IINIT regression.sh
bk commit $S -ywhatever > $DEV_NULL
bk -r check -a
trap '' 0
set +e
echo OK

# Now resync them in both directions.
cd $HERE
tar cf chkpt.tar a b
echo $N resync a to b ...............................................$NL
bk resync -t $Q a b
cd b
bk resolve $Q -t >resolve.out 2>&1 <<EOF
m
C
u
EOF
if [ $? != 0 ]
then	echo failed; cat resolve.out; exit 1;
fi
cat > PRS <<EOF
P src/t/regression.sh
EOF
bk prs -hr+ src/t/SCCS/s.regression.sh | grep '^P ' | cat > PRS2
cmp -s PRS PRS2
if [ $? -ne 0 ]; then echo failed; cat resolve.out; diff PRS PRS2; exit 1; fi
echo OK
cd ..
rm -rf a b
tar xf chkpt.tar
echo $N resync b to a ...............................................$NL
bk resync -t $Q b a
cd a
cat > R <<EOF
m
C
EOF
bk resolve $Q -f R >resolve.out 2>&1 #|| { echo failed; cat resolve.out; exit 1; }
cat > PRS <<EOF
P src/t/regression.sh
EOF
bk prs -hr+ src/t/SCCS/s.regression.sh | grep '^P ' | cat > PRS2
cmp -s PRS PRS2
if [ $? -ne 0 ]; then 
	echo 'failed'
	diff PRS PRS2
	exit 1
fi
echo OK
set +e
