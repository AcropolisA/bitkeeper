# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2000 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.

# Copyright (c) 1999 Larry McVoy
# %K%

BK_CONFIG="license:$BKL_PRO;licsign1:$BKL_P1$BKL_P2$BKL_P3"
export BK_CONFIG

echo $N Create a file with two branches .............................$NL
echo base > foo.c
bk new $Q foo.c
if bk _test ! -f SCCS/s.foo.c; then echo failed to create history; exit 1; fi
echo OK
echo $N Strip out the trunk and renumber ............................$NL
bk get -e $Q foo.c
echo first > foo.c
bk delta $Q -y1.2 foo.c
bk get -e -r1.1 $Q foo.c
echo second > foo.c
bk delta $Q -y1.1.1.1 foo.c
bk _cp SCCS/s.foo.c sfoo
bk stripdel $Q -r1.2 foo.c
bk renumber $Q foo.c
bk _scat SCCS/s.foo.c | grep -q "^.d D 1.1.1.1"
if [ $? -eq 0 ]; then echo Failed to remove delta table entry.; exit 1; fi
bk _scat SCCS/s.foo.c | grep -q "^.d D 1.2"
if [ $? -ne 0 ]; then echo Failed to move delta table entry to 1.2; exit 1; fi
echo OK
# Do many tests based on copy
echo $N Restore initial and move revision numbers then fix ..........$NL
bk _cp sfoo SCCS/s.foo.c
bk get $Q foo.c
bk _rm SCCS/s.foo.c
rm -f top
mv foo.c top
perl -p -e 's/ D 1\.1\.1\.1 / D 1.5 /;' -e 's/ D 1\.2 / D 1.1.1.1 /;'  \
	-e 's/ D 1\.5 / D 1.2 /' sfoo | bk undos > X
bk _mv X SCCS/s.foo.c 
bk admin $Q -z foo.c
# XXX: this is using ATT mode, so SCCS dir exists
cmp -s sfoo SCCS/s.foo.c
if [ $? -eq 0 ]; then echo Failed to alter revions; exit 1; fi
bk renumber $Q foo.c
bk _cp SCCS/s.foo.c cp
bk renumber $Q foo.c
bk _cp SCCS/s.foo.c cp2
cmp -s cp cp2
if [ $? -ne 0 ]; then echo Failed idempotent 1; exit 1; fi
bk get $Q foo.c
cmp -s top foo.c
if [ $? -eq 0 ]; then echo Failed to get new top; exit 1; fi
bk admin $Q -fd foo.c	# turn off default branch reassignment
bk _cp SCCS/s.foo.c cp
cmp -s sfoo cp
if [ $? -ne 0 ]; then echo Failed to fix numbers; exit 1; fi
bk _cp SCCS/s.foo.c cp
bk renumber $Q foo.c
bk _cp SCCS/s.foo.c cp2
cmp -s cp cp2
if [ $? -ne 0 ]; then echo Failed idempotent 2; exit 1; fi
echo OK
# Do many tests based on copy
echo $N Restore initial and move release numbers, then fix ..........$NL
bk _cp sfoo SCCS/s.foo.c
bk get $Q foo.c
bk _rm SCCS/s.foo.c
rm -f top
mv foo.c top
perl -p -e 's/ D 1\.1\.1\.1 / D 2.0.4.1 /; s/ D 1\.2 / D 2.0.7.1 /'  \
	sfoo | bk undos > X
bk _mv X SCCS/s.foo.c
bk admin $Q -z foo.c || fail
echo OK
