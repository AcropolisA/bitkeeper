# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2005 BitMover, Inc.
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.

echo $N Create initial repository ...................................$NL
commercial project
echo time > date
bk new $Q date
if [ ! -d BitKeeper/etc ]; then echo failed to make BitKeeper/etc; exit 1; fi
if [ ! -f SCCS/s.ChangeSet ]; then echo failed to make ChangeSet; exit 1; fi
mkdir src
cd src
echo bar > bar.c
echo h > h.h
bk new $Q bar.c h.h
bk commit $Q -yCset
KEY=`bk changes -kr+`
MD5KEY=`bk changes -r+ -nd:MD5KEY:`
echo OK

echo $N Create clones and unique changes in each clone ..............$NL
cd "$HERE"
for i in a b
do	bk clone $Q project $i
done
for i in a b project
do	cd "$HERE"/$i
	bk edit $Q date
	echo date > date
	bk ci $Q -ydate date
	bk commit $Q -y$i
	bk changes -kr+ > "$HERE/KEY.$i"
done
echo OK

echo $N Check repogca ...............................................$NL
cd "$HERE/a"
REPOGCA=`bk repogca -k ../project ../b`
test "X$REPOGCA" = "X$KEY" || {
	echo Failed
	echo "Want $KEY"
	echo "Got  $REPOGCA"
	exit 1
}
echo OK

echo $N Check repogca with MD5KEY ...................................$NL
cd "$HERE/a"
REPOGCA=`bk repogca -d:MD5KEY: ../project ../b`
test "X$REPOGCA" = "X$MD5KEY" || {
	echo Failed
	echo "Want $MD5KEY"
	echo "Got  $REPOGCA"
	exit 1
}
echo OK

echo $N Check repogca from subdir ...................................$NL
cd "$HERE/a/src"
REPOGCA=`bk repogca -k ../../project ../../b`
test "X$REPOGCA" = "X$KEY" || {
	echo Failed
	echo "Want $KEY"
	echo "Got  $REPOGCA"
	exit 1
}
echo OK

echo $N Check repogca of a list .....................................$NL
cd "$HERE/b"
bk pull $Q ../a
bk pull $Q ../project
cd ../a
bk pull $Q ../project
# newest cset made in the loop is project
bk repogca -k ../b > GOT
cmpfiles ../KEY.project GOT
# newest cset first
bk repogca -k -a ../b > GOT
cat ../KEY.project ../KEY.a > WANT
cmpfiles WANT GOT
test `bk repogca -a ../b` = 1.2.1.1,1.3 || {
	echo wrong output
	exit 1
}
echo OK
