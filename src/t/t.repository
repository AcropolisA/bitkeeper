# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2000 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.


# Copyright (c) 1999 Andrew Chang?
# %K%

HERE=`bk pwd`
echo $N Create initial repository ...................................$NL
no_logging project
if [ ! -d BitKeeper/etc ]; then echo failed to make BitKeeper/etc; exit 1; fi
if [ ! -f SCCS/s.ChangeSet ]; then echo failed to make ChangeSet; exit 1; fi
P=`bk pending | wc -l`
if [ $P -ne 0 ]; then echo files are pending; bk pending; exit 1; fi
echo OK
echo $N Create some data ............................................$NL
mkdir src
cd src
echo foo > foo.c
echo bar > bar.c
echo h > h.h
bk ci $Q -i foo.c bar.c h.h
if [ ! -f SCCS/s.foo.c ]; then echo failed to create history; exit 1; fi
echo OK
echo $N Check pending ...............................................$NL
P=`bk pending | wc -l`
if [ $P -ne 15 ]; then echo wrong pending result $P; bk pending; exit 1; fi
echo OK
echo $N Create a change set with a symbol with spaces in it .........$NL
bk commit $S -a -yCset -S"Hi there this is a changeset"
P=`bk pending | wc -l`
if [ $P -ne 0 ]; then echo failed to clear pending list; bk pending; exit 1; fi
bk -R get $S -p ChangeSet > TOT
bk -R get $S -pr"Hi there this is a changeset" ChangeSet > SYM
cmp -s TOT SYM
if [ $? != 0 ]
then	echo failed
	diff TOT SYM
	exit 1
fi
echo OK
echo $N Try to commit an empty cset .................................$NL
cd $HERE/project
bk edit $Q ChangeSet
bk commit $Q
# make sure "bk commit" did not change the mode of the ChangeSet file
writable ChangeSet || { echo failed; exit 1; }
echo OK
echo $N Try to commit via stdin .....................................$NL
cd $HERE/project/src
bk co $Q -l h.h
date > h.h
bk ci $Q -ytest_cmt1 h.h
date > t.c
bk ci $Q -ytest_cmt2 -i t.c
bk -R sfiles -C | bk commit $Q -ycmt3 -
P=`bk pending | wc -l`
if [ $P -ne 0 ]; then echo wrong pending result $P; bk pending; exit 1; fi
cat > X <<EOF
ChangeSet@ChangeSet@1.2@ChangeSet@1.3
src/h.h@src/h.h@1.1@src/h.h@1.2
src/t.c@src/t.c@1.0@src/t.c@1.1
EOF
bk undos X > CMP1
bk -R rset -hr1.2,1.3 > CMP2
cmp -s CMP1 CMP2
if [ $? -ne 0 ]; then echo failed; cat CMP2; exit 1; fi
echo OK

echo $N Try to resolve into a tree with no write permission .........$NL
cd $HERE
bk clone $Q project copy
cd project/src
touch NEWFILE
bk new $Q NEWFILE
bk commit $Q -yNEWFILE 
cd $HERE/copy
chmod -w src
bk pull $Q > OUT 2>&1
grep -q 'No write permission: src' OUT || {
	echo bad error message from pull
	cat OUT
	chmod +w src
	exit 1
}
chmod +w src
echo OK
cat OUT
