# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2000 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.

# Copyright (c) 1999 Larry McVoy
# %K%

HERE=`bk pwd`
bk cset -n -s .
rm -rf FILE SCCS
R=1
for D in '87/05/28 23:49:57' '97/05/28 23:49:57' '97/05/30 01:34:11' '97/06/23 01:33:45+06:30' '98/01/30 17:45:17-05:00'
do	cat > INITX <<EOF
D 1.$R $D $USER 0 0 0/0/0
c This is revision 1.$R of $D
c This the second comment of 1.$R
P this/is/the/pathname.$R
------------------------------------------------
EOF
	# We must be careful not to leave a locked file behind at the
	# end of the loop.  clean will complain because the recorded
	# and actual pathnames don't match.
	if [ $R -ne 1 ]
	then	bk co $Q -l FILE
	fi
	echo 1.$R >> FILE
	if [ $R -eq 1 ]
	then	bk delta $Q -i -IINITX FILE
	else	bk delta $Q -IINITX FILE
	fi
	R=`expr $R + 1`
done
bk co  $Q -l -r1.3 FILE
echo "added in 1.3.1.1" >> FILE
bk ci $Q -y FILE
bk co $Q -l -r1.3.1 FILE
echo "added in 1.3.1.2" >> FILE
bk ci $Q -y FILE
echo $N Check rmdel !TOT ............................................$NL
cat > X << EOF
rmdel: revision 1.4 not at tip of branch in SCCS/s.FILE.
EOF
bk undos X > CMP1
bk rmdel -q -r1.4 FILE 2> CMP2
cmp -s CMP1 CMP2
if [ $? -ne 0 ]; then echo Failed.; diff CMP1 CMP2; exit 1; fi
echo OK
echo $N Check rmdel !TOB ............................................$NL
cat > X << EOF
rmdel: revision 1.3.1.1 not at tip of branch in SCCS/s.FILE.
EOF
bk undos X > CMP1
bk rmdel -r1.3.1.1 FILE  2> CMP2
cmp -s CMP1 CMP2
if [ $? -ne 0 ]; then echo Failed.; diff CMP1 CMP2; exit 1; fi
echo OK
echo $N Check rmdel TOT .............................................$NL
cat > X << EOF
======== FILE 1.1..1.5 ========
1.4
1.3
1.2
1.1
EOF
bk undos X > CMP1
bk rmdel -r1.5 FILE
grep "^.d R 1.5" SCCS/s.FILE > ${DEV_NULL}
if [ $? -ne 0 ]; then echo "No removed delta"; exit 1; fi
bk prs -r1.1..1.5 -d":I:" FILE > CMP2
cmp -s CMP1 CMP2
if [ $? -ne 0 ]; then echo Failed.; exit 1; fi
echo OK
echo $N Check rmdel TOB .............................................$NL
cat > X << EOF
======== FILE 1.1..1.3.1.2 ========
1.3.1.1
1.4
1.3
1.2
1.1
EOF
bk undos X > CMP1
bk rmdel -r1.3.1.2 FILE
grep "^.d R 1.3.1.2" SCCS/s.FILE > ${DEV_NULL}
if [ $? -ne 0 ]; then echo "No removed delta"; exit 1; fi
bk prs -r1.1..1.3.1.2 -d":I:" FILE > CMP2
cmp -s CMP1 CMP2
if [ $? -ne 0 ]; then echo Failed.; exit 1; fi
echo OK

echo $N Setup two repositories ......................................$NL
cd $HERE
mkdir resync
cd resync
HERE=$HERE/resync
BK_USER=bk; BK_HOST=free.bk; export BK_USER BK_HOST
echo "logging: none" > $HERE/c
bk setup -f -n'BitKeeper Test repository' -c$HERE/c project
cd project
echo foo > foo.c
bk ci $Q -i foo.c
bk commit $Q -ywhatever
echo OK
echo $N Create a copy of the project with clone .....................$NL
cd $HERE
bk clone $Q project clone
if [ ! -d clone ]; then echo failed to make top level directory; exit 1; fi
cd clone
if [ ! -d BitKeeper/etc ]; then echo failed to make BitKeeper/etc; exit 1; fi
if [ ! -f SCCS/s.ChangeSet ]; then echo failed to make ChangeSet; exit 1; fi
if [ ! -f BitKeeper/log/parent ]; then echo failed to record parent; exit 1; fi
echo OK
echo $N Make sure committed deltas can not be rmdel-ed ..............$NL
bk rmdel $Q -r+ foo.c 2>ERROR
grep -q 'remove committed delta' ERROR
if [ $? != 0 ]; then	echo it must have removed it; cat ERROR; exit 1; fi
echo OK
echo $N Make sure an rmdel removed the data .........................$NL
cd $HERE/project
bk edit $Q foo.c
echo RMDEL >> foo.c
echo RMDEL >> foo.c
echo RMDEL >> foo.c
echo RMDEL >> foo.c
bk ci $Q -ywhatever foo.c
bk co $Q -p foo.c > save
bk rmdel $Q -r+ foo.c
bk co $Q -p foo.c > check
if cmp -s save check
then	echo failed to propagate remove data
	exit 1
fi
if grep -q RMDEL SCCS/s.foo.c
then	echo Failed to remove data from the body of the s.file
	cat SCCS/s.foo.c
	exit 1
fi
echo OK
#echo $N Check propagation of rmdel in resync ........................$NL
#cd $HERE
#bk resync -a $Q project clone
#if cmp -s project/SCCS/s.foo.c clone/SCCS/s.foo.c
#then	:
#else	echo failed to propagate removed delta
#	diff project/SCCS/s.foo.c clone/SCCS/s.foo.c
#	exit 1
#fi
#echo OK
