# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2000 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.

# Copyright (c) 1999 Larry McVoy
# %K%

cd "$HERE"	# For Windows
HOST=@bk_regression.bk
fresh_commercial project
mkdir -p a/b/c
echo 1.1 > a/b/c/Data
bk new -q a/b/c/Data
# D 1.2 93/03/11 00:50:40.000 butthead 2 1  9/2/44
# C added 4.x etc targets
for i in 2 3 4 5 6 7 8 9 10
do	bk co $Q -l a/b/c/Data
	echo 1.$i >> a/b/c/Data
	echo "D 1.$i 20/03/11 00:00:0$i butthead a b c/d/e" > Init
	echo "c Rev $i" >> Init
	echo "------------------------------------------------" >> Init
	bk delta $Q -IInit a/b/c/Data
done
echo $N Checking sccslog with -p option .............................$NL
bk undos > CMP1 <<EOF
Data 1.10 20/03/11 00:00:10 butthead${HOST} +1 -0
  Rev 10

Data 1.9 20/03/11 00:00:09 butthead${HOST} +1 -0
  Rev 9

Data 1.8 20/03/11 00:00:08 butthead${HOST} +1 -0
  Rev 8

Data 1.7 20/03/11 00:00:07 butthead${HOST} +1 -0
  Rev 7

Data 1.6 20/03/11 00:00:06 butthead${HOST} +1 -0
  Rev 6

Data 1.5 20/03/11 00:00:05 butthead${HOST} +1 -0
  Rev 5

Data 1.4 20/03/11 00:00:04 butthead${HOST} +1 -0
  Rev 4

Data 1.3 20/03/11 00:00:03 butthead${HOST} +1 -0
  Rev 3

Data 1.2 20/03/11 00:00:02 butthead${HOST} +1 -0
  Rev 2



EOF
bk sccslog -p a/b/c/Data | grep -v '^Data 1.[01] ' | grep -v 'BitKeeper file' | bk undos > CMP2
cmp -s CMP1 CMP2
if [ $? -ne 0 ]; then echo Failed.; diff CMP1 CMP2;
bk sccslog -p a/b/c/Data
exit 1; fi
echo OK
echo $N Checking sccslog with no options ............................$NL
cat > CMP1 <<EOF
a/b/c/Data
  1.10 20/03/11 00:00:10 butthead${HOST} +1 -0
  Rev 10

a/b/c/Data
  1.9 20/03/11 00:00:09 butthead${HOST} +1 -0
  Rev 9

a/b/c/Data
  1.8 20/03/11 00:00:08 butthead${HOST} +1 -0
  Rev 8

a/b/c/Data
  1.7 20/03/11 00:00:07 butthead${HOST} +1 -0
  Rev 7

a/b/c/Data
  1.6 20/03/11 00:00:06 butthead${HOST} +1 -0
  Rev 6

a/b/c/Data
  1.5 20/03/11 00:00:05 butthead${HOST} +1 -0
  Rev 5

a/b/c/Data
  1.4 20/03/11 00:00:04 butthead${HOST} +1 -0
  Rev 4

a/b/c/Data
  1.3 20/03/11 00:00:03 butthead${HOST} +1 -0
  Rev 3

a/b/c/Data
  1.2 20/03/11 00:00:02 butthead${HOST} +1 -0
  Rev 2

EOF
bk sccslog a/b/c/Data | head -36 | bk undos > CMP2
cmp -s CMP1 CMP2
if [ $? -ne 0 ]; then echo Failed.; diff CMP1 CMP2; exit 1; fi
echo OK
echo $N Checking sccslog with -r option..............................$NL
cat > X <<EOF
a/b/c/Data
  1.2 20/03/11 00:00:02 butthead${HOST} +1 -0
  Rev 2

EOF
bk undos X > CMP1
bk sccslog -r1.2 a/b/c/Data | bk undos > CMP2
cmp -s CMP1 CMP2
if [ $? -ne 0 ]; then echo Failed.; diff CMP1 CMP2; exit 1; fi
echo OK
echo $N Checking sccslog with -c option..............................$NL
cat > X <<EOF
a/b/c/Data
  1.10 20/03/11 00:00:10 butthead${HOST} +1 -0
  Rev 10

a/b/c/Data
  1.9 20/03/11 00:00:09 butthead${HOST} +1 -0
  Rev 9

a/b/c/Data
  1.8 20/03/11 00:00:08 butthead${HOST} +1 -0
  Rev 8

a/b/c/Data
  1.7 20/03/11 00:00:07 butthead${HOST} +1 -0
  Rev 7

a/b/c/Data
  1.6 20/03/11 00:00:06 butthead${HOST} +1 -0
  Rev 6

a/b/c/Data
  1.5 20/03/11 00:00:05 butthead${HOST} +1 -0
  Rev 5

a/b/c/Data
  1.4 20/03/11 00:00:04 butthead${HOST} +1 -0
  Rev 4

a/b/c/Data
  1.3 20/03/11 00:00:03 butthead${HOST} +1 -0
  Rev 3

a/b/c/Data
  1.2 20/03/11 00:00:02 butthead${HOST} +1 -0
  Rev 2

EOF
bk undos X > CMP1
bk sccslog -c20/03..20/04 a/b/c/Data | bk undos > CMP2
cmp -s CMP1 CMP2
if [ $? -ne 0 ]; then echo Failed.; diff CMP1 CMP2; exit 1; fi
echo OK

echo $N Checking sccslog with -c/-r option...........................$NL
cat > X <<EOF
a/b/c/Data
  1.4 20/03/11 00:00:04 butthead${HOST} +1 -0
  Rev 4

a/b/c/Data
  1.3 20/03/11 00:00:03 butthead${HOST} +1 -0
  Rev 3

a/b/c/Data
  1.2 20/03/11 00:00:02 butthead${HOST} +1 -0
  Rev 2

EOF
bk undos X > CMP1
bk sccslog -c20/03 -r1.4 a/b/c/Data | bk undos > CMP2
cmp -s CMP1 CMP2
if [ $? -ne 0 ]; then echo Failed.; diff CMP1 CMP2; exit 1; fi
echo OK

echo $N Checking sccslog with -f option .............................$NL
bk undos > CMP1 <<EOF
ChangeSet
  BitKeeper file ${HERE}/project/ChangeSet

ChangeSet
  Initial repository create

EOF
bk sccslog -f | grep -v $HOST | bk undos > CMP2
bk diff -iu CMP1 CMP2 || {
	echo Failed
	exit 1
}

bk undos > CMP1 <<EOF
a/b/c/Data
  BitKeeper file ${HERE}/project/a/b/c/Data

a/b/c/Data

a/b/c/Data
  Rev 2

a/b/c/Data
  Rev 3

a/b/c/Data
  Rev 4

a/b/c/Data
  Rev 5

a/b/c/Data
  Rev 6

a/b/c/Data
  Rev 7

a/b/c/Data
  Rev 8

a/b/c/Data
  Rev 9

a/b/c/Data
  Rev 10

EOF
bk sccslog -f a/b/c/Data | grep -v bk_regression.bk | bk undos > CMP2
bk diff -i CMP1 CMP2 > /dev/null
if [ $? -ne 0 ]; then echo Failed.; diff CMP1 CMP2; exit 1; fi
echo OK

echo $N Checking sccslog with dspec .................................$NL
bk sccslog -nd':I: :DPN:' a/b/c/Data | bk undos > CMP2
bk undos > CMP1 <<EOF
1.10 a/b/c/Data
1.9 a/b/c/Data
1.8 a/b/c/Data
1.7 a/b/c/Data
1.6 a/b/c/Data
1.5 a/b/c/Data
1.4 a/b/c/Data
1.3 a/b/c/Data
1.2 a/b/c/Data
1.1 a/b/c/Data
1.0 a/b/c/Data
EOF
cmp -s CMP1 CMP2
if [ $? -ne 0 ]; then echo Failed.; diff CMP1 CMP2; exit 1; fi

bk sccslog -f -nd':I: :DPN:' a/b/c/Data | bk undos > CMP2
bk undos > CMP1 <<EOF
1.0 a/b/c/Data
1.1 a/b/c/Data
1.2 a/b/c/Data
1.3 a/b/c/Data
1.4 a/b/c/Data
1.5 a/b/c/Data
1.6 a/b/c/Data
1.7 a/b/c/Data
1.8 a/b/c/Data
1.9 a/b/c/Data
1.10 a/b/c/Data
EOF
cmp -s CMP1 CMP2
if [ $? -ne 0 ]; then echo Failed.; diff CMP1 CMP2; exit 1; fi
echo OK

echo $N Checking sccslog with sorted path'|'rev output.................$NL
bk sccslog -s a/b/c/Data | bk undos > CMP2
bk undos > CMP1 <<EOF
a/b/c/Data|1.10
a/b/c/Data|1.9
a/b/c/Data|1.8
a/b/c/Data|1.7
a/b/c/Data|1.6
a/b/c/Data|1.5
a/b/c/Data|1.4
a/b/c/Data|1.3
a/b/c/Data|1.2
a/b/c/Data|1.1
a/b/c/Data|1.0
EOF
cmp -s CMP1 CMP2
if [ $? -ne 0 ]; then echo Failed.; diff CMP1 CMP2; exit 1; fi
echo OK
