# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2000 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.
 
CFS=@

echo $N Setup .......................................................$NL
set -e
trap 'echo failed' 0
no_logging project
mkdir bar
mkdir bar/blech
touch foo
touch s.foo
touch bar/s.foo
touch bar/blech/s.foo
bk delta $Q -i foo s.foo bar/s.foo bar/blech/s.foo
touch SCCS/c.gone
touch "SCCS/c.gone${CFS}1.1"
touch "SCCS/c.gone${CFS}1.2"
trap '' 0
set +e
echo OK
echo $N Check the list of SCCS files ................................$NL
bk sfiles | sort > SFILES
sort <<EOF > LIST
SCCS/s.ChangeSet
BitKeeper/etc/SCCS/s.config
BitKeeper/etc/SCCS/s.ignore
SCCS/s.foo
SCCS/s.s.foo
bar/SCCS/s.s.foo
bar/blech/SCCS/s.s.foo
EOF
cmp -s SFILES LIST
if [ $? -ne 0 ]; then echo failed; diff SFILES LIST; exit 1; fi
echo OK
echo $N Check explicit list with some files left out ................$NL
sort <<EOF > X
SCCS/s.ChangeSet
SCCS/s.s.foo
bar/blech/s.foo
EOF
bk undos X > .sfiles
rm -f X
bk sfiles `cat .sfiles` | sort > SFILES
sort <<EOF > LIST
SCCS/s.ChangeSet
SCCS/s.s.foo
bar/blech/SCCS/s.s.foo
EOF
cmp -s SFILES LIST
if [ $? -ne 0 ]; then echo failed; diff SFILES LIST; exit 1; fi
echo OK
echo $N Check the list of g-files ...................................$NL
bk sfiles -g | sort > SFILES
sort <<EOF > LIST
ChangeSet
BitKeeper/etc/config
BitKeeper/etc/ignore
foo
s.foo
bar/s.foo
bar/blech/s.foo
EOF
cmp -s SFILES LIST
if [ $? -ne 0 ]; then echo failed; diff SFILES LIST; exit 1; fi
bk sfiles -g - < .sfiles | sort > SFILES
sort <<EOF > LIST
ChangeSet
s.foo
bar/blech/s.foo
EOF
cmp -s SFILES LIST
if [ $? -ne 0 ]; then echo list failed; diff SFILES LIST; exit 1; fi
echo OK
echo $N Check the list of pending files .............................$NL
bk sfiles -C | sort > SFILES
sort <<EOF > LIST
SCCS/s.foo${BK_FS}1.1
SCCS/s.s.foo${BK_FS}1.1
bar/SCCS/s.s.foo${BK_FS}1.1
bar/blech/SCCS/s.s.foo${BK_FS}1.1
EOF
cmp -s SFILES LIST
if [ $? -ne 0 ]; then echo failed; diff SFILES LIST; exit 1; fi
# XXX -C cannot be used with file lists.
#bk sfiles -C - < .sfiles | sort > SFILES
#sort <<EOF > LIST
#SCCS/s.ChangeSet${BK_FS}1.1
#SCCS/s.s.foo${BK_FS}1.1
#SCCS/bar/blech/s.s.foo${BK_FS}1.1
#EOF
#cmp -s SFILES LIST
#if [ $? -ne 0 ]; then echo list failed; diff SFILES LIST; exit 1; fi
echo OK
bk cset $Q -yblah - <SFILES
bk co $Q -l s.foo bar/s.foo
ls >> bar/s.foo
echo $N Check the list of changed files .............................$NL
bk sfiles -c | sort > SFILES
sort <<EOF > LIST
bar/SCCS/s.s.foo
EOF
cmp -s SFILES LIST
if [ $? -ne 0 ]; then echo failed; diff SFILES LIST; exit 1; fi
bk sfiles -c - < .sfiles | sort > SFILES
sort <<EOF > LIST
EOF
cmp -s SFILES LIST
if [ $? -ne 0 ]; then echo list failed; diff SFILES LIST; exit 1; fi
echo OK
echo $N Check the list of locked files ..............................$NL
bk sfiles -l | sort > SFILES
sort <<EOF > LIST
SCCS/s.s.foo
bar/SCCS/s.s.foo
EOF
cmp -s SFILES LIST
if [ $? -ne 0 ]; then echo failed; diff SFILES LIST; exit 1; fi
bk sfiles -l - < .sfiles | sort > SFILES
sort <<EOF > LIST
SCCS/s.s.foo
EOF
cmp -s SFILES LIST
if [ $? -ne 0 ]; then echo list failed; diff SFILES LIST; exit 1; fi
echo OK
echo $N Check the list of unlocked files ............................$NL
bk sfiles -u | sort > SFILES
sort <<EOF > LIST
BitKeeper/etc/SCCS/s.config
BitKeeper/etc/SCCS/s.ignore
SCCS/s.ChangeSet
SCCS/s.foo
bar/blech/SCCS/s.s.foo
EOF
cmp -s SFILES LIST
if [ $? -ne 0 ]; then echo list failed; diff SFILES LIST; exit 1; fi
bk sfiles -u - < .sfiles | sort > SFILES
sort <<EOF > LIST
SCCS/s.ChangeSet
bar/blech/SCCS/s.s.foo
EOF
cmp -s SFILES LIST
if [ $? -ne 0 ]; then echo list failed; diff SFILES LIST; exit 1; fi
echo OK
echo $N Check the list of clean, unlocked files .....................$NL
bk ci $Q -l -mfoo bar/s.foo
ls -R >bar/s.foo
bk ci $Q -mfoo-R bar/s.foo
bk ci $Q -mblech s.foo
bk sfiles -u | sort > SFILES
sort <<EOF > LIST
BitKeeper/etc/SCCS/s.config
BitKeeper/etc/SCCS/s.ignore
SCCS/s.ChangeSet
SCCS/s.foo
SCCS/s.s.foo
bar/SCCS/s.s.foo
bar/blech/SCCS/s.s.foo
EOF
cmp -s SFILES LIST
if [ $? -ne 0 ]; then echo failed; diff SFILES LIST; exit 1; fi
bk sfiles -u - < .sfiles | sort > SFILES
sort <<EOF > LIST
SCCS/s.ChangeSet
SCCS/s.s.foo
bar/blech/SCCS/s.s.foo
EOF
cmp -s SFILES LIST
if [ $? -ne 0 ]; then echo list failed; diff SFILES LIST; exit 1; fi
echo OK
echo $N Check the list of pending files .............................$NL
bk sfiles -C | sort > SFILES
sort <<EOF > LIST
bar/SCCS/s.s.foo${BK_FS}1.3
EOF
cmp -s SFILES LIST
if [ $? -ne 0 ]; then echo failed; diff SFILES LIST; exit 1; fi
echo OK
echo $N Check the list of pending files with -A .....................$NL
bk sfiles -CA | sort > SFILES
sort <<EOF > LIST
bar/SCCS/s.s.foo${BK_FS}1.2
bar/SCCS/s.s.foo${BK_FS}1.3
EOF
cmp -s SFILES LIST
if [ $? -ne 0 ]; then echo failed; diff SFILES LIST; exit 1; fi
echo OK
echo $N Commit work, check pending lists again ......................$NL
bk sfiles -C | bk cset $Q -ysecond -
bk sfiles -C | sort > SFILES
if [ -s SFILES ]; then echo "Failed (short)"; cat SFILES; exit 1; fi
bk sfiles -CA | sort > SFILES
if [ -s SFILES ]; then echo "Failed (long)"; cat SFILES; exit 1; fi
echo OK
echo $N Look for directories under SCCS control .....................$NL
mkdir -p bar/not bar/notquite/SCCS
bk sfiles -d | sort > SFILES
sort <<EOF > LIST
.
bar
bar/blech
BitKeeper/etc
EOF
cmp -s SFILES LIST
if [ $? -ne 0 ]; then echo failed; diff SFILES LIST; exit 1; fi
echo OK
echo $N Look for directories not under SCCS control .................$NL
bk sfiles -D | grep -v BitKeeper | sort > SFILES
sort <<EOF > LIST
bar/not
bar/notquite
EOF
cmp -s SFILES LIST
if [ $? -ne 0 ]; then echo failed; diff SFILES LIST; exit 1; fi
echo OK
echo $N Check the list of extra files ...............................$NL
rm -f .sfiles
bk sfiles -x | sort > SFILES
sort <<EOF > LIST
LIST
SFILES
SCCS/c.gone
SCCS/c.gone${CFS}1.1
SCCS/c.gone${CFS}1.2
EOF
cmp -s SFILES LIST
if [ $? -ne 0 ]; then echo failed; diff SFILES LIST; exit 1; fi
X=`bk sfiles -x LIST SCCS/s.foo`
if [ "X$X" != "XLIST" ]; then echo failed; echo $X; exit 1; fi
echo OK
echo $N Make sure garbage in SCCS dir behaves .......................$NL
touch SCCS/OLD-s.foo
bk sfiles -x | sort > SFILES
sort <<EOF > LIST
LIST
SCCS/OLD-s.foo
SFILES
SCCS/c.gone
SCCS/c.gone${CFS}1.1
SCCS/c.gone${CFS}1.2
EOF
cmp -s SFILES LIST
if [ $? -ne 0 ]; then echo failed; diff SFILES LIST; cat SFILES; exit 1; fi
X=`bk sfiles -x SCCS/OLD-s.foo`
if [ "X$X" != "XSCCS/OLD-s.foo" ]; then echo failed; echo $X; exit 1; fi
echo OK
echo $N Make sure sfiles GFILE lists SCCS/s.GFILE ...................$NL
if [ -f s.foo ]; then exit 1; fi
if [ ! -f SCCS/s.s.foo ]; then exit 1; fi
FOO="`bk sfiles s.foo`"
if [ "$FOO" != "SCCS/s.s.foo" ]; then echo Failed - got $FOO.; exit 1; fi
echo OK
echo $N Test ignore lists with -x ...................................$NL
bk edit $Q BitKeeper/etc/ignore
cat <<EOF > BitKeeper/etc/ignore
Desktop.ini
LIST
s.*
*ore
config
EOF
sort <<EOF > LIST
SCCS/OLD-s.foo
SFILES
SCCS/c.gone
SCCS/c.gone${CFS}1.1
SCCS/c.gone${CFS}1.2
EOF
bk sfiles -x | sort > SFILES
cmp -s SFILES LIST
if [ $? -ne 0 ]; then echo failed; diff SFILES LIST; exit 1; fi
echo OK
echo $N Test disabling ignore lists with -au ........................$NL
sort <<EOF > LIST
BitKeeper/etc/SCCS/s.config
SCCS/s.ChangeSet
SCCS/s.foo
SCCS/s.s.foo
bar/SCCS/s.s.foo
bar/blech/SCCS/s.s.foo
EOF
bk sfiles -au | sort > SFILES
cmp -s SFILES LIST
if [ $? -ne 0 ]; then echo failed; diff SFILES LIST; exit 1; fi
echo OK
echo $N Test disabling ignore lists with -ax ........................$NL
sort <<EOF > LIST
LIST
SCCS/OLD-s.foo
SFILES
SCCS/c.gone
SCCS/c.gone${CFS}1.1
SCCS/c.gone${CFS}1.2
EOF
bk sfiles -ax | grep -v Desktop.ini | sort > SFILES
cmp -s SFILES LIST
if [ $? -ne 0 ]; then echo failed; diff SFILES LIST; exit 1; fi
echo OK
echo $N Test that tree walk does not follow symlinks ................$NL
if [ $PLATFORM = "WIN32" ]
then
	echo skipped
else
#----------------------------------------------------------- 
ln -s /usr/lib bar/lib || { echo ln failed; exit 1; }
sort <<EOF > LIST
SCCS/OLD-s.foo
SFILES
bar/lib
SCCS/c.gone
SCCS/c.gone${CFS}1.1
SCCS/c.gone${CFS}1.2
EOF
bk sfiles -x | sort > SFILES
cmp -s SFILES LIST
if [ $? -ne 0 ]; then echo failed; diff SFILES LIST; exit 1; fi
rm -f bar/lib
echo OK
#----------------------------------------------------------- 
fi
echo $N Test naive mode with s.files in odd places ..................$NL
date > impostor
bk ci $Q -i -m'boo!' impostor
bk co $Q impostor
mv SCCS/s.impostor s.impostor
mv impostor SCCS/s.impostor
bk sfiles | sort > SFILES
sort <<EOF > LIST
BitKeeper/etc/SCCS/s.config
BitKeeper/etc/SCCS/s.ignore
SCCS/s.s.foo
bar/SCCS/s.s.foo
bar/blech/SCCS/s.s.foo
SCCS/s.foo
SCCS/s.ChangeSet
SCCS/s.impostor
EOF
cmp -s SFILES LIST
if [ $? -ne 0 ]; then echo failed; diff SFILES LIST; exit 1; fi
echo OK
if false
then
	# This is disabled until I fix sfind_main() to handle it.
	# I'm trying to kill sfiles.
echo $N Test mildly paranoid mode ...................................$NL
bk sfiles -P | sort > SFILES
sort <<EOF > LIST
BitKeeper/etc/SCCS/s.config
BitKeeper/etc/SCCS/s.ignore
SCCS/s.s.foo
bar/SCCS/s.s.foo
bar/blech/SCCS/s.s.foo
SCCS/s.foo
SCCS/s.ChangeSet
SCCS/s.impostor
s.impostor
EOF
cmp -s SFILES LIST
if [ $? -ne 0 ]; then echo failed; sdiff -w80 SFILES LIST; exit 1; fi
echo OK
echo $N Test truly paranoid mode ....................................$NL
bk sfiles -PP
bk sfiles -PP | sort > SFILES
sort <<EOF > LIST
BitKeeper/etc/SCCS/s.config
BitKeeper/etc/SCCS/s.ignore
SCCS/s.s.foo
bar/SCCS/s.s.foo
bar/blech/SCCS/s.s.foo
SCCS/s.foo
SCCS/s.ChangeSet
s.impostor
EOF
cmp -s SFILES LIST
if [ $? -ne 0 ]; then echo failed; diff SFILES LIST; exit 1; fi
echo OK
fi
echo $N Test sfile -i with s.file w no pathname .....................$NL
# create a s.file which has no pathname
grep -v '^.cP' SCCS/s.foo  > SCCS/s.bad
bk admin -z  SCCS/s.bad
rm -f SCCS/?.impostor
sort > $HERE/sfiles.ref <<EOF
jjjj SCCS/OLD-s.foo
jjjj SCCS/c.gone
jjjj SCCS/c.gone@1.1
jjjj SCCS/c.gone@1.2
xxxx SFILES
lc   BitKeeper/etc/SCCS/s.ignore
u  n SCCS/s.bad
EOF
bk sfiles -i | sort > $HERE/sfiles.out || { echo failed 1; exit 1; }
cmp -s $HERE/sfiles.ref $HERE/sfiles.out || { echo failed 2; diff -u $HERE/sfiles.ref $HERE/sfiles.out; exit 1; }
echo OK
set +e
