# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2000 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.
 
CFS=@

echo $N Setup .......................................................$NL
set -e
trap 'echo failed' 0
commercial project
mkdir bar
mkdir bar/blech
touch foo
touch s.foo
touch bar/s.foo
touch bar/blech/s.foo
bk delta $Q -i foo s.foo bar/s.foo bar/blech/s.foo
bk _touch SCCS/c.gone "SCCS/c.gone${CFS}1.1" "SCCS/c.gone${CFS}1.2" \
	bar/SCCS/c.s.foo
trap '' 0
set +e
echo OK

echo $N Check -0 does null termination of files in list .............$NL
# Want null termination
perl -e 'print "SCCS/s.ChangeSet\0SCCS/s.foo\0SCCS/s.s.foo\0"' > WANT
bk sfiles -0 -1 > GOT
checkfiles WANT GOT
rm -f WANT GOT
echo OK

echo $N Check explicit list with some files left out ................$NL
sort <<EOF > X
SCCS/s.ChangeSet
SCCS/s.s.foo
bar/blech/s.foo
EOF
bk undos X > .sfiles
rm -f X
bk sfiles `cat .sfiles` | sort > GOT
sort <<EOF > WANT
SCCS/s.ChangeSet
SCCS/s.s.foo
bar/blech/SCCS/s.s.foo
EOF
cmp -s GOT WANT
if [ $? -ne 0 ]; then echo failed; diff GOT WANT; exit 1; fi
echo OK

echo $N Check the list of SCCS files ................................$NL
bk sfiles | sort > GOT
sort <<EOF > WANT
SCCS/s.ChangeSet
BitKeeper/etc/SCCS/s.attr
BitKeeper/etc/SCCS/s.collapsed
BitKeeper/etc/SCCS/s.config
BitKeeper/etc/SCCS/s.gone
BitKeeper/etc/SCCS/s.ignore
SCCS/s.foo
SCCS/s.s.foo
bar/SCCS/s.s.foo
bar/blech/SCCS/s.s.foo
EOF
cmpfiles GOT WANT
echo OK

echo $N Check explicit list with some files left out ................$NL
sort <<EOF > X
SCCS/s.ChangeSet
SCCS/s.s.foo
bar/blech/s.foo
EOF
bk undos X > .sfiles
rm -f X
bk sfiles `cat .sfiles` | sort > GOT
sort <<EOF > WANT
SCCS/s.ChangeSet
SCCS/s.s.foo
bar/blech/SCCS/s.s.foo
EOF
cmp -s GOT WANT
if [ $? -ne 0 ]; then echo failed; diff GOT WANT; exit 1; fi
echo OK

echo $N Check the list of g-files ...................................$NL
bk sfiles -g | sort > GOT
sort <<EOF > WANT
ChangeSet
BitKeeper/etc/attr
BitKeeper/etc/collapsed
BitKeeper/etc/config
BitKeeper/etc/gone
BitKeeper/etc/ignore
foo
s.foo
bar/s.foo
bar/blech/s.foo
EOF
cmp -s GOT WANT
if [ $? -ne 0 ]; then echo failed; sdiff -w80 GOT WANT; exit 1; fi
bk sfiles -g - < .sfiles | sort > GOT
sort <<EOF > WANT
ChangeSet
s.foo
bar/blech/s.foo
EOF
cmp -s GOT WANT
if [ $? -ne 0 ]; then echo list failed; sdiff -w80 GOT WANT; exit 1; fi
echo OK

echo $N Check the list of pending files .............................$NL
bk sfiles -pC | sort > GOT
sort <<EOF > WANT
SCCS/s.foo${BK_FS}1.1
SCCS/s.s.foo${BK_FS}1.1
bar/SCCS/s.s.foo${BK_FS}1.1
bar/blech/SCCS/s.s.foo${BK_FS}1.1
EOF
cmp -s GOT WANT
if [ $? -ne 0 ]; then echo failed; diff GOT WANT; exit 1; fi
# XXX -pC cannot be used with file lists.
#bk sfiles -pC - < .sfiles | sort > GOT
#sort <<EOF > WANT
#SCCS/s.ChangeSet${BK_FS}1.1
#SCCS/s.s.foo${BK_FS}1.1
#SCCS/bar/blech/s.s.foo${BK_FS}1.1
#EOF
#cmp -s GOT WANT
#if [ $? -ne 0 ]; then echo list failed; diff GOT WANT; exit 1; fi
echo OK

bk commit $Q -yblah - <GOT
bk co $Q -l s.foo bar/s.foo
ls >> bar/s.foo
echo hi | bk cfile save bar/s.foo
echo $N Check the list of changed files .............................$NL
bk sfiles -c > GOT
cat <<EOF > WANT
bar/SCCS/s.s.foo
EOF
cmp -s GOT WANT
if [ $? -ne 0 ]; then echo failed; diff GOT WANT; exit 1; fi
bk sfiles -c - < .sfiles | sort > GOT
sort <<EOF > WANT
EOF
cmp -s GOT WANT
if [ $? -ne 0 ]; then echo list failed; diff GOT WANT; exit 1; fi
echo OK

echo $N Check the list of locked files ..............................$NL
bk sfiles -l | sort > GOT
sort <<EOF > WANT
SCCS/s.s.foo
bar/SCCS/s.s.foo
EOF
cmp -s GOT WANT
if [ $? -ne 0 ]; then echo failed; diff GOT WANT; exit 1; fi
bk sfiles -l - < .sfiles | sort > GOT
sort <<EOF > WANT
SCCS/s.s.foo
EOF
cmp -s GOT WANT
if [ $? -ne 0 ]; then echo list failed; diff GOT WANT; exit 1; fi
echo OK

echo $N Check the list of unlocked files ............................$NL
bk sfiles -u | sort > GOT
sort <<EOF > WANT
BitKeeper/etc/SCCS/s.attr
BitKeeper/etc/SCCS/s.collapsed
BitKeeper/etc/SCCS/s.config
BitKeeper/etc/SCCS/s.gone
BitKeeper/etc/SCCS/s.ignore
SCCS/s.ChangeSet
SCCS/s.foo
bar/blech/SCCS/s.s.foo
EOF
cmp -s GOT WANT
if [ $? -ne 0 ]; then echo list failed; diff GOT WANT; exit 1; fi
bk sfiles -u - < .sfiles | sort > GOT
sort <<EOF > WANT
SCCS/s.ChangeSet
bar/blech/SCCS/s.s.foo
EOF
cmp -s GOT WANT
if [ $? -ne 0 ]; then echo list failed; diff GOT WANT; exit 1; fi
echo OK

echo $N Check sfiles -ycdxGijlnsRuDp aka -E without -v ..............$NL
sort <<EOF > WANT
.
BitKeeper
bar
BitKeeper/deleted
BitKeeper/etc
SCCS/c.gone
SCCS/c.gone@1.1
SCCS/c.gone@1.2
SCCS/s.ChangeSet
SCCS/s.foo
SCCS/s.s.foo
WANT
.sfiles
GOT
BitKeeper/etc/SCCS/s.attr
BitKeeper/etc/SCCS/s.collapsed
BitKeeper/etc/SCCS/s.config
BitKeeper/etc/SCCS/s.gone
BitKeeper/etc/SCCS/s.ignore
bar/blech
bar/SCCS/s.s.foo
bar/blech/SCCS/s.s.foo
EOF
bk sfiles -ycdxGijlnsRuDp | sort > GOT || exit 1
cmpfiles WANT GOT
echo OK

echo $N Check sfiles -vE ............................................$NL
bk _touch SCCS/JUNK
sort <<EOF > WANT
d------ .
D------ BitKeeper
d------ bar
D------ BitKeeper/deleted
d------ BitKeeper/etc
su----- SCCS/s.ChangeSet
su----- SCCS/s.foo
sl--G-- SCCS/s.s.foo
x------ WANT
x------ .sfiles
x------ GOT
j------ SCCS/JUNK
j------ SCCS/c.gone
j------ SCCS/c.gone@1.1
j------ SCCS/c.gone@1.2
su----- BitKeeper/etc/SCCS/s.attr
su----- BitKeeper/etc/SCCS/s.collapsed
su--G-- BitKeeper/etc/SCCS/s.config
su--G-- BitKeeper/etc/SCCS/s.gone
su--G-- BitKeeper/etc/SCCS/s.ignore
d------ bar/blech
slc-G-y bar/SCCS/s.s.foo
su----- bar/blech/SCCS/s.s.foo
EOF
bk sfiles -vE | sort > GOT || exit 1
cmpfiles WANT GOT
echo OK

echo $N Check the list of clean, unlocked files .....................$NL
bk ci $Q -l -yfoo bar/s.foo
# We used to do this as a side-effect of a delta; no more.  Not our data.
bk _rm bar/SCCS/c.s.foo
ls -R >bar/s.foo
bk ci $Q -mfoo-R bar/s.foo
bk ci $Q -mblech s.foo
bk sfiles -u | sort > GOT
sort <<EOF > WANT
BitKeeper/etc/SCCS/s.attr
BitKeeper/etc/SCCS/s.collapsed
BitKeeper/etc/SCCS/s.config
BitKeeper/etc/SCCS/s.gone
BitKeeper/etc/SCCS/s.ignore
SCCS/s.ChangeSet
SCCS/s.foo
SCCS/s.s.foo
bar/SCCS/s.s.foo
bar/blech/SCCS/s.s.foo
EOF
cmp -s GOT WANT
if [ $? -ne 0 ]; then echo failed; diff GOT WANT; exit 1; fi
bk sfiles -u - < .sfiles | sort > GOT
sort <<EOF > WANT
SCCS/s.ChangeSet
SCCS/s.s.foo
bar/blech/SCCS/s.s.foo
EOF
cmp -s GOT WANT
if [ $? -ne 0 ]; then echo list failed; diff GOT WANT; exit 1; fi
echo OK

echo $N Check the list of pending files .............................$NL
bk sfiles -pC | sort > GOT
sort <<EOF > WANT
bar/SCCS/s.s.foo${BK_FS}1.3
EOF
cmp -s GOT WANT
if [ $? -ne 0 ]; then echo failed; diff GOT WANT; exit 1; fi
echo OK

echo $N Check the list of pending files with -pA ....................$NL
bk sfiles -pCA | sort > GOT
sort <<EOF > WANT
bar/SCCS/s.s.foo${BK_FS}1.2
bar/SCCS/s.s.foo${BK_FS}1.3
EOF
cmp -s GOT WANT
if [ $? -ne 0 ]; then echo failed; diff GOT WANT; exit 1; fi
echo OK

echo $N Commit work, check pending lists again ......................$NL
bk sfiles -pC | bk commit $Q -ysecond -
bk sfiles -pC | sort > GOT
if [ -s GOT ]; then echo "Failed (short)"; cat GOT; exit 1; fi
bk sfiles -pCA | sort > GOT
if [ -s GOT ]; then echo "Failed (long)"; cat GOT; exit 1; fi
echo OK

echo $N Look for directories under SCCS control .....................$NL
mkdir -p bar/not bar/notquite/SCCS
bk sfiles -d | sort > GOT
sort <<EOF > WANT
.
bar
bar/blech
BitKeeper/etc
EOF
cmp -s GOT WANT
if [ $? -ne 0 ]; then echo failed; diff GOT WANT; exit 1; fi
echo OK

echo $N Look for directories not under SCCS control .................$NL
bk sfiles -D | grep -v BitKeeper | sort > GOT
sort <<EOF > WANT
bar/not
bar/notquite
EOF
cmp -s GOT WANT
if [ $? -ne 0 ]; then echo failed; diff GOT WANT; exit 1; fi
echo OK

echo $N Check the list of extra files ...............................$NL
rm -f .sfiles
mkdir foo
touch foo/bar
bk sfiles -jx | sort > GOT
sort <<EOF > WANT
foo/bar
WANT
GOT
SCCS/JUNK
SCCS/c.gone
SCCS/c.gone${CFS}1.1
SCCS/c.gone${CFS}1.2
EOF
cmp -s GOT WANT
if [ $? -ne 0 ]; then echo failed; diff GOT WANT; exit 1; fi
X=`bk sfiles -x WANT SCCS/s.foo`
if [ "X$X" != "XWANT" ]; then echo failed; echo $X; exit 1; fi
echo OK

echo $N Test -x in a subdirectory ...................................$NL
cd foo
bk sfiles -x > ../GOT
cat <<EOF > WANT
bar
EOF
cmpfiles WANT ../GOT
cd ..
rm -rf foo
echo OK

echo $N Make sure garbage in SCCS dir behaves .......................$NL
bk _touch SCCS/OLD-s.foo
bk sfiles -jx | sort > GOT
sort <<EOF > WANT
WANT
SCCS/OLD-s.foo
SCCS/JUNK
GOT
SCCS/c.gone
SCCS/c.gone${CFS}1.1
SCCS/c.gone${CFS}1.2
EOF
cmp -s GOT WANT
if [ $? -ne 0 ]; then echo failed; diff GOT WANT; cat GOT; exit 1; fi
X=`bk sfiles -jx SCCS/OLD-s.foo`
if [ "X$X" != "XSCCS/OLD-s.foo" ]; then echo failed; echo $X; exit 1; fi
echo OK

test works = does_not_work && {
echo $N Make sure leftover c.files are seen as jy w/ -v .............$NL
touch SCCS/c.NO_SUCH_FILE
bk sfiles -vjyx SCCS/c.NO_SUCH_FILE > GOT
echo j------ SCCS/c.NO_SUCH_FILE > WANT
cmp -s GOT WANT
if [ $? -ne 0 ]; then echo failed; diff GOT WANT; cat GOT; exit 1; fi
echo OK
}

echo $N Make sure sfiles GFILE lists SCCS/s.GFILE ...................$NL
if bk _test -f s.foo; then exit 1; fi
if bk _test ! -f SCCS/s.s.foo; then exit 1; fi
FOO="`bk sfiles s.foo`"
if [ "$FOO" != "SCCS/s.s.foo" ]; then echo Failed - got $FOO.; exit 1; fi
echo OK

echo $N Test ignore lists with -jx...................................$NL
bk edit $Q BitKeeper/etc/ignore
cat <<EOF > BitKeeper/etc/ignore
Desktop.ini
WANT
s.*
*ore
config
EOF
sort <<EOF > WANT
SCCS/OLD-s.foo
SCCS/JUNK
GOT
SCCS/c.gone
SCCS/c.gone${CFS}1.1
SCCS/c.gone${CFS}1.2
EOF
bk sfiles -jx | sort > GOT
cmp -s GOT WANT
if [ $? -ne 0 ]; then echo failed; diff GOT WANT; exit 1; fi
echo OK

echo $N Test that read-only BitKeeper/etc ignores correctly .........$NL
bk delta -ywhatever $Q BitKeeper/etc/ignore
bk clean BitKeeper/etc
if [ $PLATFORM != "WIN32" ]
then
chmod 550 BitKeeper/etc
bk -r clean
bk sfiles -jx | sort > GOT
cmpfiles GOT WANT
chmod 775 BitKeeper/etc
echo OK
else
echo skipped
fi
bk co $Q BitKeeper/etc
bk edit $Q BitKeeper/etc/ignore

echo $N Test disabling ignore lists with -au ........................$NL
sort <<EOF > WANT
BitKeeper/etc/SCCS/s.attr
BitKeeper/etc/SCCS/s.collapsed
BitKeeper/etc/SCCS/s.config
BitKeeper/etc/SCCS/s.gone
SCCS/s.ChangeSet
SCCS/s.foo
SCCS/s.s.foo
bar/SCCS/s.s.foo
bar/blech/SCCS/s.s.foo
EOF
bk sfiles -au | sort > GOT
cmp -s GOT WANT
if [ $? -ne 0 ]; then echo failed; diff GOT WANT; exit 1; fi
echo OK

echo $N Test disabling ignore lists with -ajx .......................$NL
sort <<EOF > WANT
WANT
SCCS/OLD-s.foo
SCCS/JUNK
GOT
SCCS/c.gone
SCCS/c.gone${CFS}1.1
SCCS/c.gone${CFS}1.2
EOF
bk sfiles -ajx | grep -v Desktop.ini | sort > GOT
cmp -s GOT WANT
if [ $? -ne 0 ]; then echo failed; diff GOT WANT; exit 1; fi
echo OK

echo $N Test that tree walk does not follow symlinks ................$NL
if [ $PLATFORM = "WIN32" ]
then
	echo skipped
else
#----------------------------------------------------------- 
ln -s /usr/lib bar/lib || { echo ln failed; exit 1; }
sort <<EOF > WANT
SCCS/OLD-s.foo
SCCS/JUNK
GOT
bar/lib
SCCS/c.gone
SCCS/c.gone${CFS}1.1
SCCS/c.gone${CFS}1.2
EOF
bk sfiles -jx | sort > GOT
cmp -s GOT WANT
if [ $? -ne 0 ]; then echo failed; diff GOT WANT; exit 1; fi
rm -f bar/lib
echo OK
#----------------------------------------------------------- 
fi

echo $N Test naive mode with s.files in odd places ..................$NL
date > impostor
bk ci $Q -i -m'boo!' impostor
bk co $Q impostor
bk _mv SCCS/s.impostor s.impostor
bk _mv impostor SCCS/s.impostor
bk sfiles | sort > GOT
sort <<EOF > WANT
BitKeeper/etc/SCCS/s.attr
BitKeeper/etc/SCCS/s.collapsed
BitKeeper/etc/SCCS/s.config
BitKeeper/etc/SCCS/s.gone
BitKeeper/etc/SCCS/s.ignore
SCCS/s.s.foo
bar/SCCS/s.s.foo
bar/blech/SCCS/s.s.foo
SCCS/s.foo
SCCS/s.ChangeSet
SCCS/s.impostor
EOF
cmp -s GOT WANT
if [ $? -ne 0 ]; then echo failed; diff GOT WANT; exit 1; fi
echo OK

if false
then
	# This is disabled until I fix sfind_main() to handle it.
	# I'm trying to kill sfiles.
echo $N Test mildly paranoid mode ...................................$NL
bk sfiles -P | sort > GOT
sort <<EOF > WANT
BitKeeper/etc/SCCS/s.attr
BitKeeper/etc/SCCS/s.collapsed
BitKeeper/etc/SCCS/s.config
BitKeeper/etc/SCCS/s.gone
BitKeeper/etc/SCCS/s.ignore
SCCS/s.s.foo
bar/SCCS/s.s.foo
bar/blech/SCCS/s.s.foo
SCCS/s.foo
SCCS/s.ChangeSet
SCCS/s.impostor
s.impostor
EOF
cmp -s GOT WANT
if [ $? -ne 0 ]; then echo failed; sdiff -w80 GOT WANT; exit 1; fi
echo OK

# XXX - this is just the same as -P
echo $N Test truly paranoid mode ....................................$NL
bk sfiles -PP
bk sfiles -PP | sort > GOT
sort <<EOF > WANT
BitKeeper/etc/SCCS/s.attr
BitKeeper/etc/SCCS/s.collapsed
BitKeeper/etc/SCCS/s.config
BitKeeper/etc/SCCS/s.gone
BitKeeper/etc/SCCS/s.ignore
SCCS/s.s.foo
bar/SCCS/s.s.foo
bar/blech/SCCS/s.s.foo
SCCS/s.foo
SCCS/s.ChangeSet
s.impostor
EOF
cmp -s GOT WANT
if [ $? -ne 0 ]; then echo failed; diff GOT WANT; exit 1; fi
echo OK
fi

echo $N Test sfile -cGjlnvxyp with s.file w no pathname .............$NL
# create a s.file which has no pathname
bk _scat SCCS/s.foo | perl -ne 'print unless /^.cP/' | bk undos > s.bad
bk _mv s.bad SCCS/s.bad
bk admin -z  SCCS/s.bad
bk _rm -f SCCS/s.impostor SCCS/d.impostor
bk sort -k1 > "$HERE/WANT" <<EOF
j------ SCCS/JUNK
j------ SCCS/OLD-s.foo
j------ SCCS/c.gone
j------ SCCS/c.gone@1.1
j------ SCCS/c.gone@1.2
sl-pG-- BitKeeper/etc/SCCS/s.ignore
su---n- SCCS/s.bad
su--G-- BitKeeper/etc/SCCS/s.attr
su--G-- BitKeeper/etc/SCCS/s.collapsed
su--G-- BitKeeper/etc/SCCS/s.config
su--G-- BitKeeper/etc/SCCS/s.gone
x------ GOT
EOF
bk sfiles -cGjlnvxyp | bk sort -k1 > "$HERE/GOT" || { echo failed 1; exit 1; }
cmp -s "$HERE/WANT" "$HERE/GOT" || {
	echo failed 1
	sdiff -w80 "$HERE/WANT" "$HERE/GOT"
	ls SCCS
	exit 1
}
echo OK

echo $N Test sfile -cdDGjlnvxyp with s.file w no pathname ...........$NL
bk sort -k1 > "$HERE/WANT" <<EOF
j------ SCCS/OLD-s.foo
j------ SCCS/JUNK
j------ SCCS/c.gone
j------ SCCS/c.gone@1.1
j------ SCCS/c.gone@1.2
x------ GOT
su--G-- BitKeeper/etc/SCCS/s.gone
sl-pG-- BitKeeper/etc/SCCS/s.ignore
su--G-- BitKeeper/etc/SCCS/s.config
su--G-- BitKeeper/etc/SCCS/s.attr
su--G-- BitKeeper/etc/SCCS/s.collapsed
su---n- SCCS/s.bad
D------ BitKeeper
D------ BitKeeper/deleted
D------ bar/not
D------ bar/notquite
d------ .
d------ BitKeeper/etc
d------ bar
d------ bar/blech
EOF
bk sfiles -cdDGjlnvxyp | bk sort -k1 > "$HERE/GOT" || { echo failed 1; exit 1; }
cmp -s "$HERE/WANT" "$HERE/GOT" || {
	echo failed 2
	sdiff -w80 "$HERE/WANT" "$HERE/GOT"
	exit 1
}
echo OK

echo $N Test limiting sfiles to one level ...........................$NL
bk sort -k1 > "$HERE/WANT" <<EOF
j------ SCCS/OLD-s.foo
j------ SCCS/JUNK
j------ SCCS/c.gone
j------ SCCS/c.gone@1.1
j------ SCCS/c.gone@1.2
x------ GOT
su---n- SCCS/s.bad
D------ BitKeeper
d------ .
d------ bar
EOF
bk sfiles -1cdDjlnvxyp | bk sort -k1 > "$HERE/GOT" || { echo failed 1; exit 1; }
cmp -s "$HERE/WANT" "$HERE/GOT" || {
	echo failed 2
	sdiff -w80 "$HERE/WANT" "$HERE/GOT"
	exit 1
}
echo OK

echo $N Test sfile -U with triggers, they should be listed ..........$NL
cd "`bk root`"
test -d BitKeeper/triggers || mkdir BitKeeper/triggers
echo exit 0 > BitKeeper/triggers/pre-commit
chmod +x BitKeeper/triggers/pre-commit
bk new $Q BitKeeper/triggers/pre-commit
bk sfiles -gU | grep -q BitKeeper/triggers/pre-commit || {
	echo failed to list trigger
	bk sfiles -gU
	exit 1
}
echo OK

echo $N Test sfiles -c outside of repo ..............................$NL
cd "$HERE"
mkdir -p foo/SCCS
cd foo
date > file
bk new $Q file
bk edit $Q file
date >> file
bk sfiles -cg > out || exit 1
cat <<EOF > want
file
EOF
cmpfiles out want
echo OK

cores

# LM's new testing starts here
# -d (BK directories)
# -D (Non BK directories)
# -i (extras but ignored)
# -j (junk in the SCCS directory with and without comments)
# -R (BK subrepos)
# -s (just sfiles - XXX is this needed?)
# -x (extras)
# -ax (extras not considering the ignore list)
# -l (locked sfiles)
# -u (unlocked sfiles)
# -c (changed sfiles)
# -p (pending sfiles)
# -G (checked out sfiles)
# -n (files in the wrong location)
# -y (sfiles with comments)
# All of the above with and without -v
# All of the above as recursive thing and with naming the file in argv

echo $N Set up for unit testing .....................................$NL
cd "$HERE"
commercial lmtest
commercial subrepo
cd "$HERE/lmtest"
mkdir DIR_WITH_SCCS
mkdir DIR_WITH_NO_SCCS
touch EXTRA1 EXTRA_WITH_COMMENTS DIR_WITH_NO_SCCS/EXTRA2 DIR_WITH_SCCS/EXTRA3
touch ignored.o
bk _touch SCCS/JUNK SCCS/c.NO_SFILE_NO_GFILE SCCS/c.EXTRA_WITH_COMMENTS
cd DIR_WITH_SCCS
touch NORMAL PENDING MODIFIED LOCKED UNLOCKED GOTTEN NAME MODIFIED_W_COMMENTS
bk new $Q NORMAL PENDING MODIFIED LOCKED UNLOCKED GOTTEN NAME MODIFIED_W_COMMENTS
bk ignore '*.o'
bk commit $Q -ywhatever || exit 1
bk edit $Q LOCKED PENDING MODIFIED MODIFIED_W_COMMENTS
bk delta $Q -fywhatever PENDING
echo foo > MODIFIED
echo foo > MODIFIED_W_COMMENTS
bk co $Q GOTTEN
bk _mv SCCS/s.NAME SCCS/s.WRONG_NAME
echo comments | bk cfile save MODIFIED_W_COMMENTS
echo OK

echo $N Test summary output .........................................$NL
cat <<EOF > "$HERE/WANT"
    14 files under revision control.
     1 subrepositories.
     4 files not under revision control (and not ignored).
     1 ignored files not under revision control.
     3 directories containing revision controlled files.
     3 directories with no revision controlled files.
     7 files checked out.
     2 files modified and not checked in.
     1 files with checked in, but not committed, deltas.
     1 files in incorrect locations.
EOF
cd "$HERE/lmtest"
bk sfiles -icdDGjnRuSp > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Test summary output from outside the repo ...................$NL
cd "$HERE"
bk sfiles -icdDGjnRuSp lmtest > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Test verbose output for all files ...........................$NL
cd "$HERE/lmtest"
cat <<EOF > "$HERE/WANT"
D------ BitKeeper
D------ BitKeeper/deleted
D------ DIR_WITH_NO_SCCS
R------ subrepo
d------ .
d------ BitKeeper/etc
d------ DIR_WITH_SCCS
i------ ignored.o
j------ SCCS/JUNK
j------ SCCS/c.NO_SFILE_NO_GFILE
sl--G-- DIR_WITH_SCCS/SCCS/s.LOCKED
slc-G-- DIR_WITH_SCCS/SCCS/s.MODIFIED
slc-G-y DIR_WITH_SCCS/SCCS/s.MODIFIED_W_COMMENTS
su----- BitKeeper/etc/SCCS/s.attr
su----- BitKeeper/etc/SCCS/s.collapsed
su----- DIR_WITH_SCCS/SCCS/s.NORMAL
su----- DIR_WITH_SCCS/SCCS/s.UNLOCKED
su----- SCCS/s.ChangeSet
su---n- DIR_WITH_SCCS/SCCS/s.WRONG_NAME
su--G-- BitKeeper/etc/SCCS/s.config
su--G-- BitKeeper/etc/SCCS/s.gone
su--G-- BitKeeper/etc/SCCS/s.ignore
su--G-- DIR_WITH_SCCS/SCCS/s.GOTTEN
su-p--- DIR_WITH_SCCS/SCCS/s.PENDING
x------ DIR_WITH_NO_SCCS/EXTRA2
x------ DIR_WITH_SCCS/EXTRA3
x------ EXTRA1
x-----y EXTRA_WITH_COMMENTS
EOF
bk sfiles -vixcdDGjnRup | bk sort -k1 > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Test verbose output for all files from outside the repo .....$NL
cd "$HERE"
cat <<EOF > "$HERE/WANT"
D------ lmtest/BitKeeper
D------ lmtest/BitKeeper/deleted
D------ lmtest/DIR_WITH_NO_SCCS
R------ lmtest/subrepo
d------ lmtest
d------ lmtest/BitKeeper/etc
d------ lmtest/DIR_WITH_SCCS
i------ lmtest/ignored.o
j------ lmtest/SCCS/JUNK
j------ lmtest/SCCS/c.NO_SFILE_NO_GFILE
sl--G-- lmtest/DIR_WITH_SCCS/SCCS/s.LOCKED
slc-G-- lmtest/DIR_WITH_SCCS/SCCS/s.MODIFIED
slc-G-y lmtest/DIR_WITH_SCCS/SCCS/s.MODIFIED_W_COMMENTS
su----- lmtest/BitKeeper/etc/SCCS/s.attr
su----- lmtest/BitKeeper/etc/SCCS/s.collapsed
su----- lmtest/DIR_WITH_SCCS/SCCS/s.NORMAL
su----- lmtest/DIR_WITH_SCCS/SCCS/s.UNLOCKED
su----- lmtest/SCCS/s.ChangeSet
su---n- lmtest/DIR_WITH_SCCS/SCCS/s.WRONG_NAME
su--G-- lmtest/BitKeeper/etc/SCCS/s.config
su--G-- lmtest/BitKeeper/etc/SCCS/s.gone
su--G-- lmtest/BitKeeper/etc/SCCS/s.ignore
su--G-- lmtest/DIR_WITH_SCCS/SCCS/s.GOTTEN
su-p--- lmtest/DIR_WITH_SCCS/SCCS/s.PENDING
x------ lmtest/DIR_WITH_NO_SCCS/EXTRA2
x------ lmtest/DIR_WITH_SCCS/EXTRA3
x------ lmtest/EXTRA1
x-----y lmtest/EXTRA_WITH_COMMENTS
EOF
cd "$HERE"
bk sfiles -vixcdDGjnRup lmtest | bk sort -k1 > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Test citool output from inside a repo .......................$NL
cd "$HERE/lmtest"
bk sort -k1 <<EOF > "$HERE/WANT"
x------ DIR_WITH_NO_SCCS/EXTRA2
x------ DIR_WITH_SCCS/EXTRA3
slc-G-- DIR_WITH_SCCS/MODIFIED
slc-G-y DIR_WITH_SCCS/MODIFIED_W_COMMENTS
su-p--- DIR_WITH_SCCS/PENDING
x------ EXTRA1
x-----y EXTRA_WITH_COMMENTS
EOF
bk sfiles -vgxcyp | bk sort -k1 > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Test citool output from outside a repo ......................$NL
cd "$HERE"
bk sort -k1 <<EOF > "$HERE/WANT"
x------ lmtest/DIR_WITH_NO_SCCS/EXTRA2
x------ lmtest/DIR_WITH_SCCS/EXTRA3
slc-G-- lmtest/DIR_WITH_SCCS/MODIFIED
slc-G-y lmtest/DIR_WITH_SCCS/MODIFIED_W_COMMENTS
su-p--- lmtest/DIR_WITH_SCCS/PENDING
x------ lmtest/EXTRA1
x-----y lmtest/EXTRA_WITH_COMMENTS
EOF
cd "$HERE"
bk sfiles -vgxcyp lmtest | bk sort -k1 > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for BK directories from root ...........................$NL
cd "$HERE/lmtest"
sort <<EOF > "$HERE/WANT"
.
BitKeeper/etc
DIR_WITH_SCCS
EOF
bk sfiles -d | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for BK directories from root in verbose mode ...........$NL
sort <<EOF > "$HERE/WANT"
d------ .
d------ BitKeeper/etc
d------ DIR_WITH_SCCS
EOF
bk sfiles -vd | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for BK directories in argv .............................$NL
test X`bk sfiles -d DIR_WITH_SCCS` = XDIR_WITH_SCCS || exit 1
echo OK

echo $N Look for BK directories in stdin ............................$NL
test X`echo DIR_WITH_SCCS | bk sfiles -d -` = XDIR_WITH_SCCS || exit 1
echo OK

echo $N Look for non-BK directories from the root ...................$NL
cd "$HERE/lmtest"
# XXX - should this include the subrepo?
sort <<EOF > "$HERE/WANT"
BitKeeper
BitKeeper/deleted
DIR_WITH_NO_SCCS
EOF
bk sfiles -D | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for non-BK directories from the root in verbose mode ...$NL
cd "$HERE/lmtest"
sort <<EOF > "$HERE/WANT"
D------ BitKeeper
D------ BitKeeper/deleted
D------ DIR_WITH_NO_SCCS
EOF
bk sfiles -vD | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for non-BK directories in argv .........................$NL
test X`bk sfiles -D DIR_WITH_NO_SCCS` = XDIR_WITH_NO_SCCS || exit 1
echo OK

echo $N Look for non-BK directories in stdin ........................$NL
test X`echo DIR_WITH_NO_SCCS | bk sfiles -D -` = XDIR_WITH_NO_SCCS || exit 1
echo OK

echo $N Look for ignored files from the root ........................$NL
cd "$HERE/lmtest"
sort <<EOF > "$HERE/WANT"
ignored.o
EOF
bk sfiles -i | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for ignored files from the root in verbose mode ........$NL
cd "$HERE/lmtest"
sort <<EOF > "$HERE/WANT"
i------ ignored.o
EOF
bk sfiles -vi | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for ignored files in argv ..............................$NL
test X`bk sfiles -i ignored.o` = Xignored.o || exit 1
echo OK

echo $N Look for ignored files in stdin .............................$NL
test X`echo ignored.o | bk sfiles -i -` = Xignored.o || exit 1
echo OK

echo $N Look for junk files from the root ...........................$NL
cd "$HERE/lmtest"
sort <<EOF > "$HERE/WANT"
SCCS/JUNK
SCCS/c.NO_SFILE_NO_GFILE
EOF
bk sfiles -j | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for junk files from the root in verbose mode ...........$NL
cd "$HERE/lmtest"
sort <<EOF > "$HERE/WANT"
j------ SCCS/JUNK
j------ SCCS/c.NO_SFILE_NO_GFILE
EOF
bk sfiles -vj | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for junk files in argv .................................$NL
test X`bk sfiles -j SCCS/JUNK` = XSCCS/JUNK || exit 1
test works = not_yet && {
test X`bk sfiles -j SCCS/c.NO_SFILE_NO_GFILE` = XSCCS/c.NO_SFILE_NO_GFILE || {
	echo Yup, I thought this would fail
	exit 1
}
}
echo OK

echo $N Look for junk files in stdin ................................$NL
test X`echo SCCS/JUNK | bk sfiles -j -` = XSCCS/JUNK || exit 1
echo OK

echo $N Look for subrepos from the root .............................$NL
cd "$HERE/lmtest"
sort <<EOF > "$HERE/WANT"
subrepo
EOF
bk sfiles -R | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for subrepos from the root in verbose mode .............$NL
cd "$HERE/lmtest"
sort <<EOF > "$HERE/WANT"
R------ subrepo
EOF
bk sfiles -vR | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

test works = not_yet && {
echo $N Look for subrepos in argv ...................................$NL
test X`bk sfiles -R subrepo` = Xsubrepo || exit 1
echo OK

echo $N Look for subrepos in stdin ..................................$NL
test X`echo subrepo | bk sfiles -R -` = Xsubrepo || exit 1
echo OK
}

echo $N Look for sfiles from the root ...............................$NL
cd "$HERE/lmtest"
sort <<EOF > "$HERE/WANT"
BitKeeper/etc/SCCS/s.attr
BitKeeper/etc/SCCS/s.collapsed
BitKeeper/etc/SCCS/s.config
BitKeeper/etc/SCCS/s.gone
BitKeeper/etc/SCCS/s.ignore
DIR_WITH_SCCS/SCCS/s.GOTTEN
DIR_WITH_SCCS/SCCS/s.LOCKED
DIR_WITH_SCCS/SCCS/s.MODIFIED
DIR_WITH_SCCS/SCCS/s.MODIFIED_W_COMMENTS
DIR_WITH_SCCS/SCCS/s.NORMAL
DIR_WITH_SCCS/SCCS/s.PENDING
DIR_WITH_SCCS/SCCS/s.UNLOCKED
DIR_WITH_SCCS/SCCS/s.WRONG_NAME
SCCS/s.ChangeSet
EOF
bk sfiles -s | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for sfiles from the root in verbose mode ...............$NL
cd "$HERE/lmtest"
bk sort -k1 <<EOF > "$HERE/WANT"
su----- BitKeeper/etc/SCCS/s.attr
su----- BitKeeper/etc/SCCS/s.collapsed
su--G-- BitKeeper/etc/SCCS/s.config
su--G-- BitKeeper/etc/SCCS/s.gone
su--G-- BitKeeper/etc/SCCS/s.ignore
su--G-- DIR_WITH_SCCS/SCCS/s.GOTTEN
sl--G-- DIR_WITH_SCCS/SCCS/s.LOCKED
su----- DIR_WITH_SCCS/SCCS/s.NORMAL
su-p--- DIR_WITH_SCCS/SCCS/s.PENDING
su----- DIR_WITH_SCCS/SCCS/s.UNLOCKED
su----- DIR_WITH_SCCS/SCCS/s.WRONG_NAME
su----- SCCS/s.ChangeSet
slc-G-- DIR_WITH_SCCS/SCCS/s.MODIFIED
slc-G-y DIR_WITH_SCCS/SCCS/s.MODIFIED_W_COMMENTS
EOF
bk sfiles -vs | bk sort -k1 > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for sfiles in argv .....................................$NL
test X`bk sfiles -s SCCS/s.ChangeSet` = XSCCS/s.ChangeSet || exit 1
test X`bk sfiles SCCS/s.ChangeSet` = XSCCS/s.ChangeSet || exit 1
echo OK

echo $N Look for sfiles in stdin ....................................$NL
test X`echo SCCS/s.ChangeSet | bk sfiles -s -` = XSCCS/s.ChangeSet || exit 1
test X`echo ChangeSet | bk sfiles -s -` = XSCCS/s.ChangeSet || exit 1
test X`echo SCCS/s.ChangeSet | bk sfiles -` = XSCCS/s.ChangeSet || exit 1
test X`echo ChangeSet | bk sfiles -` = XSCCS/s.ChangeSet || exit 1
echo OK

echo $N Look for extras from the root ...............................$NL
cd "$HERE/lmtest"
sort <<EOF > "$HERE/WANT"
EXTRA1
EXTRA_WITH_COMMENTS
DIR_WITH_NO_SCCS/EXTRA2
DIR_WITH_SCCS/EXTRA3
EOF
bk sfiles -x | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for extras from the root in verbose mode ...............$NL
cd "$HERE/lmtest"
sort <<EOF > "$HERE/WANT"
x------ DIR_WITH_NO_SCCS/EXTRA2
x------ DIR_WITH_SCCS/EXTRA3
x------ EXTRA1
x-----y EXTRA_WITH_COMMENTS
EOF
bk sfiles -vx | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for extras in argv .....................................$NL
test X`bk sfiles -x EXTRA1` = XEXTRA1 || exit 1
echo OK

echo $N Look for extras in stdin ....................................$NL
test X`echo EXTRA1 | bk sfiles -x -` = XEXTRA1 || exit 1
echo OK

echo $N Look for all extras from the root ...........................$NL
cd "$HERE/lmtest"
sort <<EOF > "$HERE/WANT"
DIR_WITH_NO_SCCS/EXTRA2
DIR_WITH_SCCS/EXTRA3
EXTRA1
EXTRA_WITH_COMMENTS
ignored.o
EOF
bk sfiles -ax | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

# LMXXX - we could argue that the ignored.o should be tagged "i" but we have
# not loaded the ignore db because we are in all mode.  XXX
echo $N Look for all extras from the root in verbose mode ...........$NL
cd "$HERE/lmtest"
sort <<EOF > "$HERE/WANT"
x------ DIR_WITH_NO_SCCS/EXTRA2
x------ DIR_WITH_SCCS/EXTRA3
x------ EXTRA1
x------ ignored.o
x-----y EXTRA_WITH_COMMENTS
EOF
bk sfiles -vax | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for all extras in argv .................................$NL
test X`bk sfiles -ax EXTRA1` = XEXTRA1 || exit 1
test X`bk sfiles -ax ignored.o` = Xignored.o || exit 1
echo OK

echo $N Look for all extras in stdin ................................$NL
test X`echo EXTRA1 | bk sfiles -ax -` = XEXTRA1 || exit 1
test X`echo ignored.o | bk sfiles -ax -` = Xignored.o || exit 1
echo OK

echo $N Look for locked sfiles from the root ........................$NL
cd "$HERE/lmtest"
sort <<EOF > "$HERE/WANT"
DIR_WITH_SCCS/SCCS/s.LOCKED
DIR_WITH_SCCS/SCCS/s.MODIFIED
DIR_WITH_SCCS/SCCS/s.MODIFIED_W_COMMENTS
EOF
bk sfiles -l | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for locked sfiles from the root in verbose mode ........$NL
cd "$HERE/lmtest"
bk sort -k1 <<EOF > "$HERE/WANT"
sl--G-- DIR_WITH_SCCS/SCCS/s.LOCKED
slc-G-- DIR_WITH_SCCS/SCCS/s.MODIFIED
slc-G-y DIR_WITH_SCCS/SCCS/s.MODIFIED_W_COMMENTS
EOF
bk sfiles -vl | bk sort -k1 > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for locked sfiles in argv ..............................$NL
test X`bk sfiles -l DIR_WITH_SCCS/SCCS/s.LOCKED` = XDIR_WITH_SCCS/SCCS/s.LOCKED || exit 1
test X`bk sfiles -l DIR_WITH_SCCS/LOCKED` = XDIR_WITH_SCCS/SCCS/s.LOCKED || exit 1
echo OK

echo $N Look for locked sfiles in stdin .............................$NL
test X`echo DIR_WITH_SCCS/SCCS/s.LOCKED | bk sfiles -l -` = XDIR_WITH_SCCS/SCCS/s.LOCKED || exit 1
test X`echo DIR_WITH_SCCS/LOCKED | bk sfiles -l -` = XDIR_WITH_SCCS/SCCS/s.LOCKED || exit 1
echo OK

echo $N Look for unlocked sfiles from the root ......................$NL
cd "$HERE/lmtest"
sort <<EOF > "$HERE/WANT"
BitKeeper/etc/SCCS/s.attr
BitKeeper/etc/SCCS/s.collapsed
BitKeeper/etc/SCCS/s.config
BitKeeper/etc/SCCS/s.gone
BitKeeper/etc/SCCS/s.ignore
DIR_WITH_SCCS/SCCS/s.GOTTEN
DIR_WITH_SCCS/SCCS/s.NORMAL
DIR_WITH_SCCS/SCCS/s.PENDING
DIR_WITH_SCCS/SCCS/s.UNLOCKED
DIR_WITH_SCCS/SCCS/s.WRONG_NAME
SCCS/s.ChangeSet
EOF
bk sfiles -u | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for unlocked sfiles from the root in verbose mode ......$NL
cd "$HERE/lmtest"
bk sort -k1 <<EOF > "$HERE/WANT"
su----- BitKeeper/etc/SCCS/s.attr
su----- BitKeeper/etc/SCCS/s.collapsed
su--G-- BitKeeper/etc/SCCS/s.config
su--G-- BitKeeper/etc/SCCS/s.gone
su--G-- BitKeeper/etc/SCCS/s.ignore
su--G-- DIR_WITH_SCCS/SCCS/s.GOTTEN
su----- DIR_WITH_SCCS/SCCS/s.NORMAL
su-p--- DIR_WITH_SCCS/SCCS/s.PENDING
su----- DIR_WITH_SCCS/SCCS/s.UNLOCKED
su----- DIR_WITH_SCCS/SCCS/s.WRONG_NAME
su----- SCCS/s.ChangeSet
EOF
bk sfiles -vu | bk sort -k1 > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for unlocked sfiles in argv ............................$NL
test X`bk sfiles -u SCCS/s.ChangeSet` = XSCCS/s.ChangeSet || exit 1
test X`bk sfiles -u ChangeSet` = XSCCS/s.ChangeSet || exit 1
echo OK

echo $N Look for unlocked sfiles in stdin ...........................$NL
test X`echo SCCS/s.ChangeSet | bk sfiles -u -` = XSCCS/s.ChangeSet || exit 1
test X`echo ChangeSet | bk sfiles -u -` = XSCCS/s.ChangeSet || exit 1
echo OK

echo $N Look for changed sfiles from the root .......................$NL
cd "$HERE/lmtest"
sort <<EOF > "$HERE/WANT"
DIR_WITH_SCCS/SCCS/s.MODIFIED
DIR_WITH_SCCS/SCCS/s.MODIFIED_W_COMMENTS
EOF
bk sfiles -c | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for changed sfiles from the root in verbose mode .......$NL
cd "$HERE/lmtest"
bk sort -k1 <<EOF > "$HERE/WANT"
slc-G-- DIR_WITH_SCCS/SCCS/s.MODIFIED
slc-G-y DIR_WITH_SCCS/SCCS/s.MODIFIED_W_COMMENTS
EOF
bk sfiles -vc | bk sort -k1 > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for changed sfiles in argv .............................$NL
test X`bk sfiles -c DIR_WITH_SCCS/SCCS/s.MODIFIED` = XDIR_WITH_SCCS/SCCS/s.MODIFIED || exit 1
test X`bk sfiles -c DIR_WITH_SCCS/MODIFIED` = XDIR_WITH_SCCS/SCCS/s.MODIFIED || exit 1
echo OK

echo $N Look for changed sfiles in stdin ............................$NL
test X`echo DIR_WITH_SCCS/SCCS/s.MODIFIED | bk sfiles -c -` = XDIR_WITH_SCCS/SCCS/s.MODIFIED || exit 1
test X`echo DIR_WITH_SCCS/MODIFIED | bk sfiles -c -` = XDIR_WITH_SCCS/SCCS/s.MODIFIED || exit 1
echo OK

echo $N Look for pending sfiles from the root .......................$NL
cd "$HERE/lmtest"
sort <<EOF > "$HERE/WANT"
DIR_WITH_SCCS/SCCS/s.PENDING
EOF
bk sfiles -p | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for pending sfiles from the root in verbose mode .......$NL
cd "$HERE/lmtest"
bk sort -k1 <<EOF > "$HERE/WANT"
su-p--- DIR_WITH_SCCS/SCCS/s.PENDING
EOF
bk sfiles -vp | bk sort -k1 > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for pending sfiles in argv .............................$NL
test X`bk sfiles -p DIR_WITH_SCCS/SCCS/s.PENDING` = XDIR_WITH_SCCS/SCCS/s.PENDING || exit 1
test X`bk sfiles -p DIR_WITH_SCCS/PENDING` = XDIR_WITH_SCCS/SCCS/s.PENDING || exit 1
echo OK

echo $N Look for pending sfiles in stdin ............................$NL
test X`echo DIR_WITH_SCCS/SCCS/s.PENDING | bk sfiles -p -` = XDIR_WITH_SCCS/SCCS/s.PENDING || exit 1
test X`echo DIR_WITH_SCCS/PENDING | bk sfiles -p -` = XDIR_WITH_SCCS/SCCS/s.PENDING || exit 1
echo OK

echo $N Look for gotten sfiles from the root ........................$NL
cd "$HERE/lmtest"
sort <<EOF > "$HERE/WANT"
BitKeeper/etc/SCCS/s.config
BitKeeper/etc/SCCS/s.gone
BitKeeper/etc/SCCS/s.ignore
DIR_WITH_SCCS/SCCS/s.GOTTEN
DIR_WITH_SCCS/SCCS/s.LOCKED
DIR_WITH_SCCS/SCCS/s.MODIFIED
DIR_WITH_SCCS/SCCS/s.MODIFIED_W_COMMENTS
EOF
bk sfiles -G | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for gotten sfiles from the root in verbose mode ........$NL
cd "$HERE/lmtest"
bk sort -k1 <<EOF > "$HERE/WANT"
su--G-- BitKeeper/etc/SCCS/s.config
su--G-- BitKeeper/etc/SCCS/s.gone
su--G-- BitKeeper/etc/SCCS/s.ignore
su--G-- DIR_WITH_SCCS/SCCS/s.GOTTEN
sl--G-- DIR_WITH_SCCS/SCCS/s.LOCKED
slc-G-- DIR_WITH_SCCS/SCCS/s.MODIFIED
slc-G-y DIR_WITH_SCCS/SCCS/s.MODIFIED_W_COMMENTS
EOF
bk sfiles -vG | bk sort -k1 > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for gotten sfiles in argv ..............................$NL
test X`bk sfiles -G DIR_WITH_SCCS/SCCS/s.GOTTEN` = XDIR_WITH_SCCS/SCCS/s.GOTTEN || exit 1
test X`bk sfiles -G DIR_WITH_SCCS/GOTTEN` = XDIR_WITH_SCCS/SCCS/s.GOTTEN || exit 1
echo OK

echo $N Look for gotten sfiles in stdin .............................$NL
test X`echo DIR_WITH_SCCS/SCCS/s.GOTTEN | bk sfiles -G -` = XDIR_WITH_SCCS/SCCS/s.GOTTEN || exit 1
test X`echo DIR_WITH_SCCS/GOTTEN | bk sfiles -G -` = XDIR_WITH_SCCS/SCCS/s.GOTTEN || exit 1
echo OK

echo $N Look for mislocated files from the root .....................$NL
cd "$HERE/lmtest"
sort <<EOF > "$HERE/WANT"
DIR_WITH_SCCS/SCCS/s.WRONG_NAME
EOF
bk sfiles -n | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for mislocated files from the root in verbose mode .....$NL
cd "$HERE/lmtest"
bk sort -k1 <<EOF > "$HERE/WANT"
su---n- DIR_WITH_SCCS/SCCS/s.WRONG_NAME
EOF
bk sfiles -vn | bk sort -k1 > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for mislocated files in argv ...........................$NL
test X`bk sfiles -n DIR_WITH_SCCS/SCCS/s.WRONG_NAME` = XDIR_WITH_SCCS/SCCS/s.WRONG_NAME || exit 1
test X"`bk sfiles -n DIR_WITH_SCCS/GOTTEN DIR_WITH_SCCS/WRONG_NAME`" = XDIR_WITH_SCCS/SCCS/s.WRONG_NAME || exit 1
echo OK

echo $N Look for mislocated files in stdin ..........................$NL
test X`echo DIR_WITH_SCCS/SCCS/s.WRONG_NAME | bk sfiles -n -` = XDIR_WITH_SCCS/SCCS/s.WRONG_NAME || exit 1
test X`echo DIR_WITH_SCCS/WRONG_NAME | bk sfiles -n -` = XDIR_WITH_SCCS/SCCS/s.WRONG_NAME || exit 1
echo OK

echo $N Look for files with comments from the root ..................$NL
cd "$HERE/lmtest"
sort <<EOF > "$HERE/WANT"
DIR_WITH_SCCS/SCCS/s.MODIFIED_W_COMMENTS
EOF
bk sfiles -y | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for files with comments from the root in verbose mode ..$NL
cd "$HERE/lmtest"
bk sort -k1 <<EOF > "$HERE/WANT"
slc-G-y DIR_WITH_SCCS/SCCS/s.MODIFIED_W_COMMENTS
x-----y EXTRA_WITH_COMMENTS
EOF
bk sfiles -vy | bk sort -k1 > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for files with comments in argv ........................$NL
test X`bk sfiles -y DIR_WITH_SCCS/SCCS/s.MODIFIED_W_COMMENTS` = XDIR_WITH_SCCS/SCCS/s.MODIFIED_W_COMMENTS || exit 1
test X`bk sfiles -y DIR_WITH_SCCS/MODIFIED_W_COMMENTS` = XDIR_WITH_SCCS/SCCS/s.MODIFIED_W_COMMENTS || exit 1
echo OK

echo $N Look for files with comments in stdin .......................$NL
test X`echo DIR_WITH_SCCS/SCCS/s.MODIFIED_W_COMMENTS | bk sfiles -y -` = XDIR_WITH_SCCS/SCCS/s.MODIFIED_W_COMMENTS || exit 1
test X`echo DIR_WITH_SCCS/MODIFIED_W_COMMENTS | bk sfiles -y -` = XDIR_WITH_SCCS/SCCS/s.MODIFIED_W_COMMENTS || exit 1
echo OK

# LMXXX - should do all of that with -g as well.  Oy.  
# LMXXX - should test that we don't descend into subreposities
# LMXXX - should test summary output

echo $N Look for BK directories from outside repo ...................$NL
cd "$HERE"
sort <<EOF > "$HERE/WANT"
lmtest
lmtest/BitKeeper/etc
lmtest/DIR_WITH_SCCS
EOF
bk sfiles -d lmtest | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for BK directories in argv from outside repo ...........$NL
test X`bk sfiles -d lmtest/DIR_WITH_SCCS` = Xlmtest/DIR_WITH_SCCS || exit 1
echo OK

echo $N Look for non-BK directories from the outside repo ...........$NL
sort <<EOF > "$HERE/WANT"
lmtest/BitKeeper
lmtest/BitKeeper/deleted
lmtest/DIR_WITH_NO_SCCS
EOF
bk sfiles -D lmtest | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for non-BK directories in argv from outside repo .......$NL
test X`bk sfiles -D lmtest/DIR_WITH_NO_SCCS` = Xlmtest/DIR_WITH_NO_SCCS || exit 1
echo OK

echo $N Look for ignored files from the outside repo ................$NL
sort <<EOF > "$HERE/WANT"
lmtest/ignored.o
EOF
bk sfiles -i lmtest | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for ignored files in argv from outside repo ............$NL
test X`bk sfiles -i lmtest/ignored.o` = Xlmtest/ignored.o || exit 1
echo OK

echo $N Look for junk files from the outside repo ...................$NL
sort <<EOF > "$HERE/WANT"
lmtest/SCCS/JUNK
lmtest/SCCS/c.NO_SFILE_NO_GFILE
EOF
bk sfiles -j lmtest | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for junk files in argv from outside repo ...............$NL
test X`bk sfiles -j lmtest/SCCS/JUNK` = Xlmtest/SCCS/JUNK || exit 1
test works = not_yet && {
test X`bk sfiles -j lmtest/SCCS/c.NO_SFILE_NO_GFILE` = Xlmtest/SCCS/c.NO_SFILE_NO_GFILE || {
	echo Yup, I thought this would fail
	exit 1
}
}
echo OK

echo $N Look for subrepos from the outside repo .....................$NL
sort <<EOF > "$HERE/WANT"
lmtest/subrepo
EOF
bk sfiles -R lmtest | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

test works = not_yet && {
echo $N Look for subrepos in argv from outside repo .................$NL
test X`bk sfiles -R lmtest/subrepo` = Xlmtest/subrepo || exit 1
echo OK
}

echo $N Look for sfiles from the outside repo .......................$NL
sort <<EOF > "$HERE/WANT"
lmtest/BitKeeper/etc/SCCS/s.attr
lmtest/BitKeeper/etc/SCCS/s.collapsed
lmtest/BitKeeper/etc/SCCS/s.config
lmtest/BitKeeper/etc/SCCS/s.gone
lmtest/BitKeeper/etc/SCCS/s.ignore
lmtest/DIR_WITH_SCCS/SCCS/s.GOTTEN
lmtest/DIR_WITH_SCCS/SCCS/s.LOCKED
lmtest/DIR_WITH_SCCS/SCCS/s.MODIFIED
lmtest/DIR_WITH_SCCS/SCCS/s.MODIFIED_W_COMMENTS
lmtest/DIR_WITH_SCCS/SCCS/s.NORMAL
lmtest/DIR_WITH_SCCS/SCCS/s.PENDING
lmtest/DIR_WITH_SCCS/SCCS/s.UNLOCKED
lmtest/DIR_WITH_SCCS/SCCS/s.WRONG_NAME
lmtest/SCCS/s.ChangeSet
EOF
bk sfiles -s lmtest | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for sfiles in argv from outside repo ...................$NL
test X`bk sfiles -s lmtest/SCCS/s.ChangeSet` = Xlmtest/SCCS/s.ChangeSet || exit 1
test X`bk sfiles lmtest/SCCS/s.ChangeSet` = Xlmtest/SCCS/s.ChangeSet || exit 1
echo OK

echo $N Look for extra files from the outside repo ..................$NL
sort <<EOF > "$HERE/WANT"
lmtest/EXTRA1
lmtest/EXTRA_WITH_COMMENTS
lmtest/DIR_WITH_NO_SCCS/EXTRA2
lmtest/DIR_WITH_SCCS/EXTRA3
EOF
bk sfiles -x lmtest | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for extra files in argv from outside repo ..............$NL
test X`bk sfiles -x lmtest/EXTRA1` = Xlmtest/EXTRA1 || exit 1
echo OK

echo $N Look for all extras from the outside repo ...................$NL
sort <<EOF > "$HERE/WANT"
lmtest/DIR_WITH_NO_SCCS/EXTRA2
lmtest/DIR_WITH_SCCS/EXTRA3
lmtest/EXTRA1
lmtest/EXTRA_WITH_COMMENTS
lmtest/ignored.o
EOF
bk sfiles -ax lmtest | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for all extras in argv from outside repo ...............$NL
test X`bk sfiles -ax lmtest/EXTRA1` = Xlmtest/EXTRA1 || exit 1
test X`bk sfiles -ax lmtest/ignored.o` = Xlmtest/ignored.o || exit 1
echo OK

echo $N Look for locked sfiles from the outside repo ................$NL
sort <<EOF > "$HERE/WANT"
lmtest/DIR_WITH_SCCS/SCCS/s.LOCKED
lmtest/DIR_WITH_SCCS/SCCS/s.MODIFIED
lmtest/DIR_WITH_SCCS/SCCS/s.MODIFIED_W_COMMENTS
EOF
bk sfiles -l lmtest | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for locked sfiles in argv from outside repo ............$NL
test X`bk sfiles -l lmtest/DIR_WITH_SCCS/SCCS/s.LOCKED` = Xlmtest/DIR_WITH_SCCS/SCCS/s.LOCKED || exit 1
test X`bk sfiles -l lmtest/DIR_WITH_SCCS/LOCKED` = Xlmtest/DIR_WITH_SCCS/SCCS/s.LOCKED || exit 1
echo OK

echo $N Look for unlocked sfiles from the outside repo ..............$NL
sort <<EOF > "$HERE/WANT"
lmtest/BitKeeper/etc/SCCS/s.attr
lmtest/BitKeeper/etc/SCCS/s.collapsed
lmtest/BitKeeper/etc/SCCS/s.config
lmtest/BitKeeper/etc/SCCS/s.gone
lmtest/BitKeeper/etc/SCCS/s.ignore
lmtest/DIR_WITH_SCCS/SCCS/s.GOTTEN
lmtest/DIR_WITH_SCCS/SCCS/s.NORMAL
lmtest/DIR_WITH_SCCS/SCCS/s.PENDING
lmtest/DIR_WITH_SCCS/SCCS/s.UNLOCKED
lmtest/DIR_WITH_SCCS/SCCS/s.WRONG_NAME
lmtest/SCCS/s.ChangeSet
EOF
bk sfiles -u lmtest | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for unlocked sfiles in argv from outside repo ..........$NL
test X`bk sfiles -u lmtest/SCCS/s.ChangeSet` = Xlmtest/SCCS/s.ChangeSet || exit 1
test X`bk sfiles -u lmtest/ChangeSet` = Xlmtest/SCCS/s.ChangeSet || exit 1
echo OK

echo $N Look for changed sfiles from the outside repo ...............$NL
sort <<EOF > "$HERE/WANT"
lmtest/DIR_WITH_SCCS/SCCS/s.MODIFIED
lmtest/DIR_WITH_SCCS/SCCS/s.MODIFIED_W_COMMENTS
EOF
bk sfiles -c lmtest | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for changed sfiles in argv from outside repo ...........$NL
test X`bk sfiles -c lmtest/DIR_WITH_SCCS/SCCS/s.MODIFIED` = Xlmtest/DIR_WITH_SCCS/SCCS/s.MODIFIED || exit 1
test X`bk sfiles -c lmtest/DIR_WITH_SCCS/MODIFIED` = Xlmtest/DIR_WITH_SCCS/SCCS/s.MODIFIED || exit 1
echo OK

echo $N Look for pending sfiles from the outside repo ...............$NL
sort <<EOF > "$HERE/WANT"
lmtest/DIR_WITH_SCCS/SCCS/s.PENDING
EOF
bk sfiles -p lmtest | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for pending sfiles in argv from outside repo ...........$NL
test X`bk sfiles -p lmtest/DIR_WITH_SCCS/SCCS/s.PENDING` = Xlmtest/DIR_WITH_SCCS/SCCS/s.PENDING || exit 1
test X`bk sfiles -p lmtest/DIR_WITH_SCCS/PENDING` = Xlmtest/DIR_WITH_SCCS/SCCS/s.PENDING || exit 1
echo OK

echo $N Look for gotten sfiles from the outside repo ................$NL
sort <<EOF > "$HERE/WANT"
lmtest/BitKeeper/etc/SCCS/s.config
lmtest/BitKeeper/etc/SCCS/s.gone
lmtest/BitKeeper/etc/SCCS/s.ignore
lmtest/DIR_WITH_SCCS/SCCS/s.GOTTEN
lmtest/DIR_WITH_SCCS/SCCS/s.LOCKED
lmtest/DIR_WITH_SCCS/SCCS/s.MODIFIED
lmtest/DIR_WITH_SCCS/SCCS/s.MODIFIED_W_COMMENTS
EOF
bk sfiles -G lmtest | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for gotten sfiles in argv from outside repo ............$NL
test X`bk sfiles -G lmtest/DIR_WITH_SCCS/SCCS/s.GOTTEN` = Xlmtest/DIR_WITH_SCCS/SCCS/s.GOTTEN || exit 1
test X`bk sfiles -G lmtest/DIR_WITH_SCCS/GOTTEN` = Xlmtest/DIR_WITH_SCCS/SCCS/s.GOTTEN || exit 1
echo OK

echo $N Look for mislocated files from the outside repo .............$NL
sort <<EOF > "$HERE/WANT"
lmtest/DIR_WITH_SCCS/SCCS/s.WRONG_NAME
EOF
bk sfiles -n lmtest | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for mislocated files in argv from outside repo .........$NL
test X`bk sfiles -n lmtest/DIR_WITH_SCCS/SCCS/s.WRONG_NAME` = Xlmtest/DIR_WITH_SCCS/SCCS/s.WRONG_NAME || exit 1
test X`bk sfiles -n lmtest/DIR_WITH_SCCS/WRONG_NAME` = Xlmtest/DIR_WITH_SCCS/SCCS/s.WRONG_NAME || exit 1
echo OK

echo $N Look for files with comments from the outside repo ..........$NL
sort <<EOF > "$HERE/WANT"
lmtest/DIR_WITH_SCCS/SCCS/s.MODIFIED_W_COMMENTS
EOF
bk sfiles -y lmtest | sort > "$HERE/GOT"
cmpfiles "$HERE/WANT" "$HERE/GOT"
echo OK

echo $N Look for files with comments in argv from outside repo ......$NL
test X`bk sfiles -y lmtest/DIR_WITH_SCCS/SCCS/s.MODIFIED_W_COMMENTS` = Xlmtest/DIR_WITH_SCCS/SCCS/s.MODIFIED_W_COMMENTS || exit 1
test X`bk sfiles -y lmtest/DIR_WITH_SCCS/MODIFIED_W_COMMENTS` = Xlmtest/DIR_WITH_SCCS/SCCS/s.MODIFIED_W_COMMENTS || exit 1
echo OK

# LMXXX - should do all of that with -g as well.  Oy.  
# LMXXX - should test that we don't descend into subreposities
# LMXXX - should test summary output

echo $N Sfiles white box test of .bk_skip in non-sccs directory .....$NL
cd "$HERE"
rm -rf project
commercial project
mkdir test
cd test
touch .a .b .bk_skip .c a b c
cd ..
cat <<EOF > WANT
GOT
WANT
EOF
bk -r sfiles -x > GOT
checkfiles WANT GOT
echo OK

echo $N Sfiles white box test of .bk_skip in sccs directory .........$NL
cd test
bk new $Q a
cd ..
bk -r sfiles -x > GOT
checkfiles WANT GOT
echo OK

echo $N Test directory ignore patterns ..............................$NL
mkdir skip
mkdir -p sub/skip
touch skip/1
touch sub/skip/2
bk edit $Q BitKeeper/etc/ignore || exit 1
cat <<EOF >WANT
GOT
WANT
skip/1
sub/skip/2
EOF
bk sfiles -x > GOT
cmpfiles WANT GOT
echo 'skip/*' > BitKeeper/etc/ignore
cat <<EOF >WANT
GOT
WANT
sub/skip/2
EOF
bk sfiles -x > GOT
cmpfiles WANT GOT
echo '*/skip/*' > BitKeeper/etc/ignore
cat <<EOF >WANT
GOT
WANT
EOF
bk sfiles -x > GOT
cmpfiles WANT GOT
echo '*/skip' > BitKeeper/etc/ignore
cat <<EOF >WANT
GOT
WANT
skip/1
sub/skip/2
EOF
bk sfiles -x > GOT
cmpfiles WANT GOT
echo 'skip' > BitKeeper/etc/ignore
cat <<EOF >WANT
GOT
WANT
skip/1
sub/skip/2
EOF
bk sfiles -x > GOT
cmpfiles WANT GOT
echo '*/skip' > BitKeeper/etc/ignore
cat <<EOF >WANT
GOT
WANT
EOF
BK_IGNOREDIRS=1 bk sfiles -x > GOT
cmpfiles WANT GOT
echo 'skip' > BitKeeper/etc/ignore
cat <<EOF >WANT
GOT
WANT
EOF
BK_IGNOREDIRS=1 bk sfiles -x > GOT
cmpfiles WANT GOT
echo OK

echo $N Test directory prune patterns ...............................$NL
cat <<EOF >WANT
GOT
WANT
skip/1
sub/skip/2
EOF
bk sfiles -x > GOT
cmpfiles WANT GOT
echo 'skip -prune' > BitKeeper/etc/ignore
cat <<EOF >WANT
GOT
WANT
sub/skip/2
EOF
bk sfiles -x > GOT
cmpfiles WANT GOT
echo '*/skip -prune' > BitKeeper/etc/ignore
cat <<EOF >WANT
GOT
WANT
EOF
bk sfiles -x > GOT
cmpfiles WANT GOT
echo OK

echo $N Check that '*/file' ignores files at repo root ................$NL
echo '*/junk' > BitKeeper/etc/ignore
touch junk
bk sfiles -x > GOT
cat <<EOF >WANT
GOT
WANT
skip/1
sub/skip/2
EOF
bk sfiles -x > GOT
cmpfiles WANT GOT
echo OK

echo $N Check that sfiles -U path supresses BK files ................$NL
bk sfiles -U "$PWD" | grep ChangeSet > OUT
# this will fail if the above repo has triggers
bk sfiles -U "$PWD" | fgrep 'BitKeeper/' >> OUT
test -s OUT && {
	echo failed
	cat OUT
	exit 1
}
echo OK

echo $N Check sfiles --gui ..........................................$NL
cd "$HERE/project"
bk sfiles --gui -vgcyp -x > GOT
cat > WANT <<EOF
F|x------ GOT
F|x------ OUT
F|x------ WANT
P|1 3 0 0
F|slc-G-- BitKeeper/etc/ignore
P|6 3 0 1
F|x------ skip/1
P|6 4 0 1
F|x------ sub/skip/2
P|6 5 0 1
EOF
cmpfiles WANT GOT
echo OK

echo $N Check sfiles --gui --no-progress ............................$NL
cd "$HERE/project"
bk sfiles --gui --no-progress -vgcyp -x > GOT
cat > WANT <<EOF
F|x------ GOT
F|x------ OUT
F|x------ WANT
F|slc-G-- BitKeeper/etc/ignore
F|x------ skip/1
F|x------ sub/skip/2
EOF
cmpfiles WANT GOT
echo OK

test $PLATFORM != WIN32 && {

echo $N Check sfiles -v does not dump core on an unreadable binary ..$NL
perl -e 'printf "a\000b\n"' > binary_file
bk new $Q binary_file
bk edit $Q binary_file
chmod 000 binary_file
bk sfiles -v binary_file >OUT 2>ERR 
RET=$?
test $RET -eq 0 || {
	echo failed
	cat ERR
	exit 1
}
grep -iq "binary_file: Permission denied" ERR || {
	echo failed
	cat ERR
	exit 1
}
echo OK
}

echo $N Check that sfiles -pA can handle multiple csetmarks .........$NL
cd "$HERE"
commercial remote
touch foo bar
bk new $Q foo
bk commit $Q -yfoo
bk clone $Q . ../local
bk rm -f BitKeeper/etc/gone
echo info@bitmover.com > BitKeeper/etc/gone
bk new $Q BitKeeper/etc/gone
bk edit $Q foo
bk delta $Q -fyfoo foo
bk commit $Q -yfoo
cd ../local
bk edit $Q foo BitKeeper/etc/gone
echo data@bitmover.com > BitKeeper/etc/gone
bk delta $Q -fyfoo foo BitKeeper/etc/gone
bk commit $Q -yfoo
mkdir BitKeeper/triggers
cat <<EOF > BitKeeper/triggers/pre-commit
#!/bin/sh
exit 1
EOF
chmod +x BitKeeper/triggers/pre-commit
bk pull $Q 2> ERR && fail -f ERR
grep -q 'Trigger "pre-commit"' ERR || fail -f ERR
cd RESYNC
bk sfiles -pA foo BitKeeper/etc/gone > GOT
cat <<EOF > WANT
SCCS/s.foo|1.3
BitKeeper/etc/SCCS/s.gone|1.6
BitKeeper/etc/SCCS/s.gone|1.0.1.1
BitKeeper/etc/SCCS/s.gone|1.5
BitKeeper/etc/SCCS/s.gone|1.4
BitKeeper/etc/SCCS/s.gone|1.3
BitKeeper/etc/SCCS/s.gone|1.1.1.2
EOF
cmpfiles WANT GOT
echo OK
