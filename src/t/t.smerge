# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2001 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.

# Copyright (c) 2001 Wayne Scott
# %Z%%K%

# still need to check fdiff output.

D3="-Aall -a1,2,3 -d"

echo "logging: none" > c
echo "description: BitKeeper Test repository" >> c
echo "email: nobody@nowhere.bk" >> c
echo "license: $BKL_P" >> c
echo "licsign1: $BKL_P1" >> c
echo "licsign2: $BKL_P2" >> c
echo "licsign3: $BKL_P3" >> c
echo "eoln: unix" >> c
BK_HOST=bk_regression.bitkeeper.com bk setup -f -c$HERE/c project
cd project

# Tests for smerge
echo $N Create initial files ........................................$NL
cat > gca <<EOF
   won't change
   won't change either
   gca1
   gca2
   gca3
   gca4
   gca5
   gca6
   gca7
   gca8
   gca9
   gca10
   won't change
   won't change
EOF
bk new $Q gca || exit 1
bk edit $Q gca || exit 1
cat > gca <<EOF
   won't change
   won't change either
   right
   right
   right
   right
   right
   right
   right
   right
   right
   right
   won't change
   won't change
EOF
bk delta $Q -yremote gca || exit 1
bk _get -e $Q -r1.1 gca || exit 1
cat > gca <<EOF
   won't change
   won't change either
   gca1
   left
   left
   gca4
   gca5
   left
   left
   gca8
   left with a very very long line, I mean a line that is much much much longer that the standard 128 byte buffer that Wayne likes to use and makes Larry want to scream!
   gca10
   won't change
   won't change
EOF
cp gca V1.1.1.1
bk delta $Q -ylocal gca || exit 1
echo OK

echo $N Check default smerge output .................................$NL
bk smerge gca 1.2 1.1.1.1 > out
bk smerge $D3 gca 1.2 1.1.1.1 > out.open
checkfiles out out.open
cat - > out2 <<EOF
   won't change
   won't change either
<<<<<<< gca gca 1.1
   gca1
   gca2
   gca3
   gca4
   gca5
   gca6
   gca7
   gca8
   gca9
   gca10
<<<<<<< local gca 1.2
   right
   right
   right
   right
   right
   right
   right
   right
   right
   right
<<<<<<< remote gca 1.1.1.1
   gca1
   left
   left
   gca4
   gca5
   left
   left
   gca8
   left with a very very long line, I mean a line that is much much much longer that the standard 128 byte buffer that Wayne likes to use and makes Larry want to scream!
   gca10
>>>>>>>
   won't change
   won't change
EOF
checkfiles out out2
rm -f gca
echo OK

echo $N Check gca smerge output .....................................$NL
#also edit file
bk edit $Q gca || exit 1
bk smerge -g gca 1.2 1.1.1.1 > out
if [ $? -ne 1 ]; then echo failed; exit 1; fi
bk smerge $D3 -g gca 1.2 1.1.1.1 > out.open
checkfiles out out.open
cat > out2 <<EOF
   won't change
   won't change either
<<<<<<< local gca 1.1 vs 1.2
-   gca1
-   gca2
-   gca3
-   gca4
-   gca5
-   gca6
-   gca7
-   gca8
-   gca9
-   gca10
+   right
+   right
+   right
+   right
+   right
+   right
+   right
+   right
+   right
+   right
<<<<<<< remote gca 1.1 vs 1.1.1.1
    gca1
-   gca2
-   gca3
+   left
+   left
    gca4
    gca5
-   gca6
-   gca7
+   left
+   left
    gca8
-   gca9
+   left with a very very long line, I mean a line that is much much much longer that the standard 128 byte buffer that Wayne likes to use and makes Larry want to scream!
    gca10
>>>>>>>
   won't change
   won't change
EOF
checkfiles out out2
echo OK

echo $N Check 2WAY smerge output ....................................$NL
bk smerge -2 gca 1.2 1.1.1.1 > out
if [ $? -ne 1 ]; then echo failed; exit 1; fi
bk smerge $D3 -2 gca 1.2 1.1.1.1 > out.open
checkfiles out out.open
cmp -s out - <<EOF
   won't change
   won't change either
<<<<<<< local gca 1.2
   right
   right
   right
   right
   right
   right
   right
   right
   right
   right
<<<<<<< remote gca 1.1.1.1
   gca1
   left
   left
   gca4
   gca5
   left
   left
   gca8
   left with a very very long line, I mean a line that is much much much longer that the standard 128 byte buffer that Wayne likes to use and makes Larry want to scream!
   gca10
>>>>>>>
   won't change
   won't change
EOF
if [ $? -ne 0 ]; then echo failed; exit 1; fi
echo OK

echo $N Check new-only smerge output ................................$NL
bk smerge -n gca 1.2 1.1.1.1 > out
if [ $? -ne 1 ]; then echo failed; exit 1; fi
bk smerge $D3 -n gca 1.2 1.1.1.1 > out.open
checkfiles out out.open
cmp -s out - <<EOF
   won't change
   won't change either
<<<<<<< local gca 1.1 vs 1.2
+   right
+   right
+   right
+   right
+   right
+   right
+   right
+   right
+   right
+   right
<<<<<<< remote gca 1.1 vs 1.1.1.1
    gca1
+   left
+   left
    gca4
    gca5
+   left
+   left
    gca8
+   left with a very very long line, I mean a line that is much much much longer that the standard 128 byte buffer that Wayne likes to use and makes Larry want to scream!
    gca10
>>>>>>>
   won't change
   won't change
EOF
if [ $? -ne 0 ]; then echo failed; exit 1; fi
echo OK

echo $N Setup a set GCA baseline ....................................$NL
bk clean gca || exit 1
bk _get $Q -e -M1.1.1.1 -r1.2 gca || exit 1
cat > gca <<EOF
   won't change
   won't change either
   gca1
   left
   left
   right
   right
   left
   left
   right
   left
   gca10
   won't change
   won't change
EOF
bk delta $Q -y1.3 gca || exit 1
bk _get $Q -e -r1.2 -M1.1.1.1 gca || exit 1
cat > gca <<EOF
   won't change
   won't change either
   gca1
   right
   right
   right
   right
   left
   left
   right
   left
   right
   won't change
   won't change
EOF
bk delta $Q -y1.1.1.2 gca || exit 1
bk smerge -g -Aall gca 1.2.1.1 1.3 > out
# exit 1
cat - > out2<<EOF
   won't change
   won't change either
<<<<<<< local gca 1.1.1.1+1.2 vs 1.2.1.1
-   left
-   left
-   left
-   left
-   left with a very very long line, I mean a line that is much much much longer that the standard 128 byte buffer that Wayne likes to use and makes Larry want to scream!
-   right
-   right
-   right
-   right
+   gca1
    right
    right
    right
    right
+   left
+   left
    right
+   left
    right
<<<<<<< remote gca 1.1.1.1+1.2 vs 1.3
+   gca1
    left
    left
-   left
-   left
-   left with a very very long line, I mean a line that is much much much longer that the standard 128 byte buffer that Wayne likes to use and makes Larry want to scream!
-   right
-   right
-   right
-   right
-   right
-   right
-   right
    right
    right
+   left
+   left
    right
+   left
+   gca10
>>>>>>>
   won't change
   won't change
EOF
checkfiles out out2
echo OK

echo $N Check handling of bad versions ..............................$NL
bk smerge -n gca 1.2 1.1.1.3 > out 2> err
if [ $? -ne 2 ]; then echo failed; exit 1; fi
grep -q 'ERROR: couldn.t find 1.1.1.3' err || exit 1
echo OK

echo $N Trying adding annotations ...................................$NL
bk smerge -gIm gca 1.2 1.1.1.1 > out
if [ $? -ne 1 ]; then echo failed; exit 1; fi
bk smerge $D3 -gIm gca 1.2 1.1.1.1 > out.open
checkfiles out out.open
cat - > new <<EOF
1.1           |    won't change
1.1           |    won't change either
<<<<<<< local gca 1.1 vs 1.2
-1.1           |    gca1
-1.1           |    gca2
-1.1           |    gca3
-1.1           |    gca4
-1.1           |    gca5
-1.1           |    gca6
-1.1           |    gca7
-1.1           |    gca8
-1.1           |    gca9
-1.1           |    gca10
+1.2           |    right
+1.2           |    right
+1.2           |    right
+1.2           |    right
+1.2           |    right
+1.2           |    right
+1.2           |    right
+1.2           |    right
+1.2           |    right
+1.2           |    right
<<<<<<< remote gca 1.1 vs 1.1.1.1
 1.1           |    gca1
-1.1           |    gca2
-1.1           |    gca3
+1.1.1.1       |    left
+1.1.1.1       |    left
 1.1           |    gca4
 1.1           |    gca5
-1.1           |    gca6
-1.1           |    gca7
+1.1.1.1       |    left
+1.1.1.1       |    left
 1.1           |    gca8
-1.1           |    gca9
+1.1.1.1       |    left with a very very long line, I mean a line that is much much much longer that the standard 128 byte buffer that Wayne likes to use and makes Larry want to scream!
 1.1           |    gca10
>>>>>>>
1.1           |    won't change
1.1           |    won't change
EOF
cmp -s out new
if [ $? -ne 0 ]; then echo failed; sdiff out new; exit 1; fi
echo OK

echo $N Test automerging ............................................$NL
bk unedit $Q gca || exit 1
bk _get -e $Q -r1.1 gca || exit 1
cat > gca <<EOF
   won't change much
   won't change either
   right1
   gca2
   gca3
   gca4
   right4.5
   gca5
   gca6
   gca7
   gca8
   gca9
   gca10
   won't change
   won't change
EOF
bk delta $Q -ylocal2 gca || exit 1
bk smerge gca 1.1.2.1 1.1.1.1 > out
if [ $? -ne 0 ]; then echo failed; cat out; exit 1; fi
bk smerge $D3 gca 1.1.2.1 1.1.1.1 > out.open
checkfiles out out.open
cat > out2 <<EOF
   won't change much
   won't change either
   right1
   left
   left
   gca4
   right4.5
   gca5
   left
   left
   gca8
   left with a very very long line, I mean a line that is much much much longer that the standard 128 byte buffer that Wayne likes to use and makes Larry want to scream!
   gca10
   won't change
   won't change
EOF
checkfiles out out2
echo OK

echo $N Verify that content merge was needed ........................$NL
bk smerge -gA3 gca 1.1.2.1 1.1.1.1 > out
if [ $? -ne 1 ]; then echo failed; exit 1; fi
bk smerge $D3 -gA3 gca 1.1.2.1 1.1.1.1 > out.open
checkfiles out out.open
cmp -s out - <<EOF
   won't change much
   won't change either
<<<<<<< local gca 1.1 vs 1.1.2.1
-   gca1
+   right1
    gca2
    gca3
<<<<<<< remote gca 1.1 vs 1.1.1.1
    gca1
-   gca2
-   gca3
+   left
+   left
>>>>>>>
   gca4
   right4.5
   gca5
   left
   left
   gca8
   left with a very very long line, I mean a line that is much much much longer that the standard 128 byte buffer that Wayne likes to use and makes Larry want to scream!
   gca10
   won't change
   won't change
EOF
if [ $? -ne 0 ]; then echo failed; exit 1; fi
echo OK

#echo $N "Check versions with excludes (and identical versions)........$NL"
#bk smerge -g gca 1.1.2.1-1.1.2.1 1.1.1.1 > out
#diff -u out V1.1.1.1 > DIFF.OUT
#if [ $? -ne 0 ]; then echo failed; cat DIFF.OUT; exit 1; fi
#echo OK

echo $N "Check version argument parsing...............................$NL"
# too many versions
bk smerge gca 1.1.2.1 1.1.1.1 1 2> err && exit 1
# too few versions
bk smerge gca 1.1.2.1 2> err && exit 1
# bad string
#bk smerge gca 1.1.2.1 1.1.b 2> err
#grep -q 'ERROR: Unable to parse version' err || exit 1
echo OK

echo $N "Check files that don't end with a newline ...................$NL"
echo $NX line without NL $NXL > bar
bk new $Q bar || exit 1
bk edit $Q bar || exit 1
echo a > bar
echo $NX line without NL $NXL >> bar
bk delta $Q -yremote bar || exit 1
bk _get -e $Q -r1.1 bar || exit 1
echo b > bar
echo $NX line without NL $NXL >> bar
cp bar bar.want
bk delta $Q -ylocal bar || exit 1
bk smerge bar 1.1 1.1.1.1 > bar.out
cmp -s bar.out bar.want || { echo Failed to get correct merge; exit 1; }
bk smerge $D3 bar 1.1 1.1.1.1 > bar.out.open
checkfiles bar.out bar.out.open
echo OK

echo $N Demonstrate the added_oneside hueristic .....................$NL
# Base file has some lines ending in a line which will appear again.
cat <<EOF > foo
A
B
C
last line of block matches
EOF
bk new $Q foo
bk edit $Q foo
# two edits: delete block, add something else which ends in the same line
cat $DEV_NULL > foo
bk ci $Q -l -m'foo' foo
cat <<EOF > foo
D
E
last line of block matches
EOF
bk ci $Q -m'foo' foo
# On a parallel branch ..
bk _get $Q -e -r1.1 foo
# Just edit somewhere in the middle of the original block
cat <<EOF > foo
A
B2
C
last line of block matches
EOF
bk ci $Q -m'foo' foo
# Collide the mess..
bk smerge -g foo 1.3 1.1.1.1 > OUT
cmp -s OUT - <<EOF
D
E
last line of block matches
<<<<<<< local foo 1.1 vs 1.3
-A
-B
-C
-last line of block matches
<<<<<<< remote foo 1.1 vs 1.1.1.1
 A
-B
+B2
 C
 last line of block matches
>>>>>>>
EOF
if [ $? -ne 0 ]; then echo failed; cat OUT; exit 1; fi
echo OK

echo $N show bug with common trailing lines .........................$NL
bk smerge -g -A7 foo 1.3 1.1.1.1 > OUT
cmp -s OUT - <<EOF
<<<<<<< local foo 1.1 vs 1.3
-A
-B
-C
+D
+E
<<<<<<< remote foo 1.1 vs 1.1.1.1
 A
-B
+B2
 C
>>>>>>>
last line of block matches
EOF
if [ $? -ne 0 ]; then echo failed; cat OUT;exit 1; fi
echo OK

# Test a fmtool fdiff output with :-Im -f
echo $N verify an fdiff output format ...............................$NL
cat <<EOF > fdiffm
a
b
c
EOF
bk new $Q fdiffm
bk edit $Q fdiffm
cat <<EOF > fdiffm
main
b
c
main end
EOF
bk delta $Q -ynone fdiffm
bk _get $Q -e -r1.1
cat <<EOF > fdiffm
branch
b
c
branch end
EOF
bk delta $Q -ynone fdiffm
bk smerge -Im -f fdiffm 1.1 1.1.1.1 > fdiffm_R
bk smerge $D3 -Im -f fdiffm 1.1 1.1.1.1 > fdiffm_RD3
cat <<EOF > fdiffm_D
M
 1.1.1.1       | branch
L
 1.1           | a
s
R
-1.1           | a
+1.1.1.1       | branch
E
 1.1           | b
 1.1           | c
M
 1.1.1.1       | branch end
L
s
R
+1.1.1.1       | branch end
E
EOF
cmp -s fdiffm_R fdiffm_D || {
	echo failed
	echo difference between actual and desired:
	diff fdiffm_R fdiffm_D
	exit 1
}
cmp -s fdiffm_RD3 fdiffm_D || {
	echo failed
	echo difference between actual and desired in diff3:
	diff fdiffm_RD3 fdiffm_D
	exit 1
}
echo OK
