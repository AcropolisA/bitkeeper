# This file is part of the BitKeeper Regression test suite.
# All of the files in this directory are Copyright (c) 2001 BitMover, Inc.
# and are not licensed under the terms of the BKL (BitKeeper License).
# Standard copyright law applies.
# 
# Redistribution in modified form is prohibited with one exception:
#    proposed modifications may be sent back to dev@bitmover.com for
#    possible inclusion in future releases.  Sending such modifications
#    constitutes your permission for BitMover, Inc. to distribute  the
#    modifications under any license.

# Copyright (c) 2001 Wayne Scott
# %Z%%K%

# still need to check fdiff output.

# Tests for smerge
echo $N Create initial files ........................................$NL
mkdir SCCS
cat > gca <<EOF
   won't change
   won't change either
   gca1
   gca2
   gca3
   gca4
   gca5
   gca6
   gca7
   gca8
   gca9
   gca10
   won't change
   won't change
EOF
bk new $Q gca || exit 1
bk edit $Q gca || exit 1
cat > gca <<EOF
   won't change
   won't change either
   right
   right
   right
   right
   right
   right
   right
   right
   right
   right
   won't change
   won't change
EOF
bk delta $Q -yremote gca || exit 1
bk edit $Q -r1.1 gca || exit 1
cat > gca <<EOF
   won't change
   won't change either
   gca1
   left
   left
   gca4
   gca5
   left
   left
   gca8
   left with a very very long line, I mean a line that is much much much longer that the standard 128 byte buffer that Wayne likes to use and makes Larry want to scream!
   gca10
   won't change
   won't change
EOF
cp gca V1.1.1.1
bk delta $Q -ylocal gca || exit 1
echo OK
echo $N Check default smerge output .................................$NL
bk smerge gca 1.2 1.1.1.1 > out
cat - > out2 <<EOF
   won't change
   won't change either
<<<<<<< gca gca 1.1
   gca1
   gca2
   gca3
   gca4
   gca5
   gca6
   gca7
   gca8
   gca9
   gca10
<<<<<<< local gca 1.2
   right
   right
   right
   right
   right
   right
   right
   right
   right
   right
<<<<<<< remote gca 1.1.1.1
   gca1
   left
   left
   gca4
   gca5
   left
   left
   gca8
   left with a very very long line, I mean a line that is much much much longer that the standard 128 byte buffer that Wayne likes to use and makes Larry want to scream!
   gca10
>>>>>>>
   won't change
   won't change
EOF
diff -u out out2 > DIFF.OUT
if [ $? -ne 0 ]; then echo failed; cat DIFF.OUT; exit 1; fi
rm -f gca
echo OK
echo $N Check gca smerge output .....................................$NL
bk smerge -g gca 1.2 1.1.1.1 > out
if [ $? -ne 1 ]; then echo failed; exit 1; fi
cat > out2 <<EOF
   won't change
   won't change either
<<<<<<< local gca 1.1 vs 1.2
-   gca1
-   gca2
-   gca3
-   gca4
-   gca5
-   gca6
-   gca7
-   gca8
-   gca9
-   gca10
+   right
+   right
+   right
+   right
+   right
+   right
+   right
+   right
+   right
+   right
<<<<<<< remote gca 1.1 vs 1.1.1.1
    gca1
-   gca2
-   gca3
+   left
+   left
    gca4
    gca5
-   gca6
-   gca7
+   left
+   left
    gca8
-   gca9
+   left with a very very long line, I mean a line that is much much much longer that the standard 128 byte buffer that Wayne likes to use and makes Larry want to scream!
    gca10
>>>>>>>
   won't change
   won't change
EOF
diff -u out out2 > DIFF.OUT
if [ $? -ne 0 ]; then echo failed; cat DIFF.OUT; exit 1; fi
echo OK
echo $N Check 2WAY smerge output ....................................$NL
bk smerge -2 gca 1.2 1.1.1.1 > out
if [ $? -ne 1 ]; then echo failed; exit 1; fi
cmp -s out - <<EOF
   won't change
   won't change either
<<<<<<< local gca 1.2
   right
   right
   right
   right
   right
   right
   right
   right
   right
   right
<<<<<<< remote gca 1.1.1.1
   gca1
   left
   left
   gca4
   gca5
   left
   left
   gca8
   left with a very very long line, I mean a line that is much much much longer that the standard 128 byte buffer that Wayne likes to use and makes Larry want to scream!
   gca10
>>>>>>>
   won't change
   won't change
EOF
if [ $? -ne 0 ]; then echo failed; exit 1; fi
echo OK
echo $N Check new-only smerge output ................................$NL
bk smerge -n gca 1.2 1.1.1.1 > out
if [ $? -ne 1 ]; then echo failed; exit 1; fi
cmp -s out - <<EOF
   won't change
   won't change either
<<<<<<< local gca 1.1 vs 1.2
+   right
+   right
+   right
+   right
+   right
+   right
+   right
+   right
+   right
+   right
<<<<<<< remote gca 1.1 vs 1.1.1.1
    gca1
+   left
+   left
    gca4
    gca5
+   left
+   left
    gca8
+   left with a very very long line, I mean a line that is much much much longer that the standard 128 byte buffer that Wayne likes to use and makes Larry want to scream!
    gca10
>>>>>>>
   won't change
   won't change
EOF
if [ $? -ne 0 ]; then echo failed; exit 1; fi
echo OK
echo $N Check handling of bad versions ..............................$NL
bk smerge -n gca 1.2 1.1.1.3 > out 2> err
if [ $? -ne 2 ]; then echo failed; exit 1; fi
grep -q 'ERROR: couldn.t find 1.1.1.3' err || exit 1
echo OK
echo $N Trying adding the sequence numbers...........................$NL
bk smerge -gs gca 1.2 1.1.1.1 > out
if [ $? -ne 1 ]; then echo failed; exit 1; fi
cat - > new <<EOF
     1	   won't change
     2	   won't change either
<<<<<<< local gca 1.1 vs 1.2
-     3	   gca1
-     4	   gca2
-     5	   gca3
-     8	   gca4
-     9	   gca5
-    10	   gca6
-    11	   gca7
-    14	   gca8
-    15	   gca9
-    17	   gca10
+    18	   right
+    19	   right
+    20	   right
+    21	   right
+    22	   right
+    23	   right
+    24	   right
+    25	   right
+    26	   right
+    27	   right
<<<<<<< remote gca 1.1 vs 1.1.1.1
      3	   gca1
-     4	   gca2
-     5	   gca3
+     6	   left
+     7	   left
      8	   gca4
      9	   gca5
-    10	   gca6
-    11	   gca7
+    12	   left
+    13	   left
     14	   gca8
-    15	   gca9
+    16	   left with a very very long line, I mean a line that is much much much longer that the standard 128 byte buffer that Wayne likes to use and makes Larry want to scream!
     17	   gca10
>>>>>>>
    28	   won't change
    29	   won't change
EOF
cmp -s out new
if [ $? -ne 0 ]; then echo failed; sdiff out new; exit 1; fi
echo OK
echo $N Test automerging ............................................$NL
bk edit $Q -r1.1 gca || exit 1
cat > gca <<EOF
   won't change much
   won't change either
   right1
   gca2
   gca3
   gca4
   right4.5
   gca5
   gca6
   gca7
   gca8
   gca9
   gca10
   won't change
   won't change
EOF
bk delta $Q -ylocal2 gca || exit 1
bk smerge gca 1.1.2.1 1.1.1.1 > out
if [ $? -ne 0 ]; then echo failed; exit 1; fi
cat > out2 <<EOF
   won't change much
   won't change either
   right1
   left
   left
   gca4
   right4.5
   gca5
   left
   left
   gca8
   left with a very very long line, I mean a line that is much much much longer that the standard 128 byte buffer that Wayne likes to use and makes Larry want to scream!
   gca10
   won't change
   won't change
EOF
diff -u out out2 > DIFF.OUT
if [ $? -ne 0 ]; then echo failed; cat DIFF.OUT; exit 1; fi
echo OK
echo $N Verify that content merge was needed ........................$NL
bk smerge -gA3 gca 1.1.2.1 1.1.1.1 > out
if [ $? -ne 1 ]; then echo failed; exit 1; fi
cmp -s out - <<EOF
   won't change much
   won't change either
<<<<<<< local gca 1.1 vs 1.1.2.1
-   gca1
+   right1
    gca2
    gca3
<<<<<<< remote gca 1.1 vs 1.1.1.1
    gca1
-   gca2
-   gca3
+   left
+   left
>>>>>>>
   gca4
   right4.5
   gca5
   left
   left
   gca8
   left with a very very long line, I mean a line that is much much much longer that the standard 128 byte buffer that Wayne likes to use and makes Larry want to scream!
   gca10
   won't change
   won't change
EOF
if [ $? -ne 0 ]; then echo failed; exit 1; fi
echo OK
echo $N Check range options .........................................$NL
bk smerge -sgA3 -r2..10 gca 1.1.2.1 1.1.1.1 > out
if [ $? -ne 1 ]; then echo failed; exit 1; fi
cmp -s out - <<EOF
     3	   won't change either
<<<<<<< local gca 1.1 vs 1.1.2.1
-     4	   gca1
+     5	   right1
      6	   gca2
      7	   gca3
<<<<<<< remote gca 1.1 vs 1.1.1.1
      4	   gca1
-     6	   gca2
-     7	   gca3
+     8	   left
+     9	   left
>>>>>>>
EOF
if [ $? -ne 0 ]; then echo failed; exit 1; fi
echo OK
#echo $N "Check versions with excludes (and identical versions)........$NL"
#bk smerge -g gca 1.1.2.1-1.1.2.1 1.1.1.1 > out
#diff -u out V1.1.1.1 > DIFF.OUT
#if [ $? -ne 0 ]; then echo failed; cat DIFF.OUT; exit 1; fi
#echo OK
echo $N "Check version argument parsing...............................$NL"
# too many versions
bk smerge gca 1.1.2.1 1.1.1.1 1 2> err && exit 1
# too few versions
bk smerge gca 1.1.2.1 2> err && exit 1
# bad string
bk smerge gca 1.1.2.1 1.1.b 2> err
grep -q 'ERROR: Unable to parse version' err || exit 1
echo OK
echo $N "Check files that don't end with a newline ...................$NL"
echo $NX line without NL $NXL > bar
bk new $Q bar || exit 1
bk edit $Q bar || exit 1
echo a > bar
echo $NX line without NL $NXL >> bar
bk delta $Q -yremote bar || exit 1
bk edit $Q -r1.1 bar || exit 1
echo b > bar
echo $NX line without NL $NXL >> bar
cp bar bar.want
bk delta $Q -ylocal bar || exit 1
bk smerge bar 1.1 1.1.1.1 > bar.out
cmp -s bar.out bar.want || { echo Failed to get correct merge; exit 1; }
echo OK
