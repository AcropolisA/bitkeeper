echo $N Create initial repositories .................................$NL
commercial project
bk clone $Q ../project ../clone
echo OK

echo $N Check uniq daemon with writable .bk .........................$NL
cd "$HERE"
# first stop the uniq daemon (if running) and blow away the current uniqdb
kill_uniq "$HERE/.bk/bk-keys-db"
rm -f "`bk dotbk`/bk-keys/`bk gethost -r`"
rm -f "/tmp/.bk-keys-$USER"
# create some deltas
for i in project clone
do
	(cd $i
	echo foo > foo
	BK_DATE_TIME_ZONE="2037-02-02 02:02:02-02" bk new $Q foo
	)
done
# check that a dir was created in the expected place
test -d .bk/bk-keys-db || fail no db dir
# check that the keys are different
A=`bk log -r+ -nd:KEY: project/foo`
B=`bk log -r+ -nd:KEY: clone/foo`
test "$A" != "$B" || fail keys not different
echo OK

echo $N Check uniq daemon with uniqdb config option .................$NL
cd "$HERE"
# first stop the uniq daemon (if running) and blow away its current dir
kill_uniq "$HERE/.bk/bk-keys-db"
rm -rf .bk/bk-keys-db
# create some deltas
for i in project clone
do
	(cd $i
	echo foo > foo2
	BK_CONFIG="uniqdb:$HERE/keysdb" \
	  BK_DATE_TIME_ZONE="2037-02-02 02:02:02-02" bk new $Q foo2
	)
done
# check that a dir was created in the expected place
test -d keysdb || fail no db dir
test -d .bk/bk-keys-db && fail old uniqdb dir still exists
# check that the keys are different
A=`bk log -r+ -nd:KEY: project/foo`
B=`bk log -r+ -nd:KEY: clone/foo`
test "$A" != "$B" || fail keys not different
kill_uniq "$HERE/keysdb"
rm -rf "$HERE/keysdb"
echo OK

echo $N Check purge of old keys .....................................$NL
kill_uniq "$HERE/.bk/bk-keys-db"
# add an old key (time_t of 123) by hand
mkdir -p "`bk dotbk`/bk-keys"
UNIQDB="`bk dotbk`/bk-keys/`bk gethost -r`"
echo 'bk@bk_regression.bk|purge-tst|20140119155430 123' >> "$UNIQDB"
# cause the uniq_daemon to start back up
cd "$HERE/project"
echo foo > purge1
bk new $Q purge1 || fail
key_exists purge-tst || fail key not in uniqdb
# now force the uniq_deamon to purge the db and verify that the old key is gone
kill_uniq "$HERE/.bk/bk-keys-db"
key_exists purge-tst && fail key still in uniqdb
echo OK
