
# Copright (c) 1999 Larry McVoy
# %K%

# Test the text generated by get -D
# Don't use the normal delta operation to build, as weave function
# may change what is actually stored.  Build using delta -D ...
${RM} -rf SCCS foo CMP1
mkdir SCCS
${CAT} <<'EOF' > foo
1
2
3
4
5
6
7
EOF
delta $S -i foo
get $S -e foo
${RM} foo
${CAT} <<'EOF' > diff1
D1 3
I3 2
1.2 1
1.2 2
D5 2
I6 3
1.2 3
1.2 4
1.2 5
I7 1
1.2 6
EOF
echo $N "Check making sfile using delta -D............$NL"
delta $S -y'' -Ddiff1 foo 2>${DEV_NULL}
if [ $? != 0 ]; then echo Failed on Delta -D; exit 1; fi
echo OK
# Do a test
${CAT} <<'EOF' > CMP1
1.2 1
1.2 2
4
1.2 3
1.2 4
1.2 5
7
1.2 6
EOF
echo $N "Check gfile to verify correct creation.......$NL"
get $S -r1.2 foo
cmp -s foo CMP1
if [ $? != 0 ]; then echo Failed on rev 1.2; diff foo CMP1; exit 1; fi
echo OK
${RM} -f foo
# See what kind of output is being generated ...
echo $N "Check get -DD for BK style output ...........$NL"
get $S -DD -r1.2 foo > CMP1
cmp -s diff1 CMP1
if [ $? != 0 ]; then echo Failed on rev 1.2; diff diff1 CMP1; exit 1; fi
echo OK
get $S -e foo
${RM} foo
${CAT} <<'EOF' > diff1
I0 1
1.2 1
1.2 2
EOF
echo $N "Check delta -D for error when bad diff file..$NL"
delta $S -y'' -Ddiff1 foo 2>${DEV_NULL}
if [ $? = 0 ]; then echo Failed by returning zero on Delta -D; exit 1; fi
echo OK
${RM} -f CMP1 CMP2 foo diff1 SCCS/s.foo
